package de.cau.cs.kieler.lustre.scade.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.lustre.scade.services.ScadeEquationsGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalScadeEquationsParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_ID", "RULE_STRING", "RULE_HOSTCODE", "RULE_INT", "RULE_FLOAT", "RULE_BOOLEAN", "RULE_COMMENT_ANNOTATION", "RULE_SL_COMMENT_ANNOTATION", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_NUMBER", "RULE_WS", "RULE_ANY_OTHER", "'('", "','", "')'", "';'", "'='", "'{'", "'}'", "'unsafe'", "'extern'", "'function'", "'node'", "'()'", "'returns'", "':'", "'when'", "'^'", "'const'", "'var'", "'let'", "'tel'", "'.'", "'seq'", "'emit'", "'assert'", "'automaton'", "'..'", "'initial'", "'state'", "'until'", "'unless'", "'if'", "'do'", "'restart'", "'resume'", "'*'", "'/'", "'mod'", "'div'", "'fby'", "'->'", "'then'", "'else'", "'=>'", "'xor'", "'or'", "'and'", "'scope'", "'expression'", "'json'", "'input'", "'output'", "'global'", "'static'", "'signal'", "'host'", "'schedule'", "'ref'", "'<'", "'>'", "'['", "']'", "'combine'", "'label'", "'print'", "'randomize'", "'&'", "'>>'", "'>>>'", "'+'", "'-'", "'\\''", "'to'", "'_'", "'null'", "'#'", "'@'", "'bool'", "'int'", "'real'", "'enum'", "'<='", "'>='", "'<>'", "'not'", "'current'", "'nor'", "'last'", "'conflicting'", "'commuting'", "'++'", "'--'", "'pre'", "'~'", "'|'", "'val'", "'<<'", "'sfby'", "'struct'", "'class'", "'none'", "'max'", "'min'", "'public'", "'protected'", "'private'", "'void'", "'float'", "'string'", "'!&'"
    };
    public static final int T__50=50;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__60=60;
    public static final int T__61=61;
    public static final int RULE_ID=4;
    public static final int RULE_INT=7;
    public static final int T__66=66;
    public static final int RULE_ML_COMMENT=12;
    public static final int T__67=67;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int RULE_COMMENT_ANNOTATION=10;
    public static final int T__37=37;
    public static final int RULE_SL_COMMENT_ANNOTATION=11;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int RULE_FLOAT=8;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__91=91;
    public static final int T__100=100;
    public static final int T__92=92;
    public static final int T__93=93;
    public static final int T__102=102;
    public static final int T__94=94;
    public static final int T__101=101;
    public static final int T__90=90;
    public static final int RULE_BOOLEAN=9;
    public static final int T__19=19;
    public static final int T__17=17;
    public static final int T__18=18;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__26=26;
    public static final int RULE_HOSTCODE=6;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__23=23;
    public static final int T__24=24;
    public static final int T__25=25;
    public static final int T__20=20;
    public static final int T__21=21;
    public static final int T__122=122;
    public static final int T__70=70;
    public static final int T__121=121;
    public static final int T__71=71;
    public static final int T__124=124;
    public static final int T__72=72;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_STRING=5;
    public static final int RULE_SL_COMMENT=13;
    public static final int T__77=77;
    public static final int T__119=119;
    public static final int T__78=78;
    public static final int T__118=118;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__115=115;
    public static final int EOF=-1;
    public static final int T__74=74;
    public static final int T__114=114;
    public static final int T__75=75;
    public static final int T__117=117;
    public static final int T__76=76;
    public static final int T__116=116;
    public static final int T__80=80;
    public static final int T__111=111;
    public static final int T__81=81;
    public static final int T__110=110;
    public static final int T__82=82;
    public static final int T__113=113;
    public static final int T__83=83;
    public static final int T__112=112;
    public static final int RULE_WS=15;
    public static final int RULE_ANY_OTHER=16;
    public static final int RULE_NUMBER=14;
    public static final int T__88=88;
    public static final int T__108=108;
    public static final int T__89=89;
    public static final int T__107=107;
    public static final int T__109=109;
    public static final int T__84=84;
    public static final int T__104=104;
    public static final int T__85=85;
    public static final int T__103=103;
    public static final int T__86=86;
    public static final int T__106=106;
    public static final int T__87=87;
    public static final int T__105=105;

    // delegates
    // delegators


        public InternalScadeEquationsParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalScadeEquationsParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalScadeEquationsParser.tokenNames; }
    public String getGrammarFileName() { return "InternalScadeEquations.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private ScadeEquationsGrammarAccess grammarAccess;

        public InternalScadeEquationsParser(TokenStream input, ScadeEquationsGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "ScadeProgram";
       	}

       	@Override
       	protected ScadeEquationsGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleScadeProgram"
    // InternalScadeEquations.g:71:1: entryRuleScadeProgram returns [EObject current=null] : iv_ruleScadeProgram= ruleScadeProgram EOF ;
    public final EObject entryRuleScadeProgram() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScadeProgram = null;



        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");

        try {
            // InternalScadeEquations.g:73:2: (iv_ruleScadeProgram= ruleScadeProgram EOF )
            // InternalScadeEquations.g:74:2: iv_ruleScadeProgram= ruleScadeProgram EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScadeProgramRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScadeProgram=ruleScadeProgram();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScadeProgram; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleScadeProgram"


    // $ANTLR start "ruleScadeProgram"
    // InternalScadeEquations.g:83:1: ruleScadeProgram returns [EObject current=null] : ( ( (lv_equations_0_0= ruleScadeEquation ) ) | ( (lv_assertions_1_0= ruleAssertion ) ) | ( (lv_automatons_2_0= ruleAutomaton ) ) )* ;
    public final EObject ruleScadeProgram() throws RecognitionException {
        EObject current = null;

        EObject lv_equations_0_0 = null;

        EObject lv_assertions_1_0 = null;

        EObject lv_automatons_2_0 = null;



        	enterRule();
        	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS", "RULE_SL_COMMENT", "RULE_ML_COMMENT");

        try {
            // InternalScadeEquations.g:90:2: ( ( ( (lv_equations_0_0= ruleScadeEquation ) ) | ( (lv_assertions_1_0= ruleAssertion ) ) | ( (lv_automatons_2_0= ruleAutomaton ) ) )* )
            // InternalScadeEquations.g:91:2: ( ( (lv_equations_0_0= ruleScadeEquation ) ) | ( (lv_assertions_1_0= ruleAssertion ) ) | ( (lv_automatons_2_0= ruleAutomaton ) ) )*
            {
            // InternalScadeEquations.g:91:2: ( ( (lv_equations_0_0= ruleScadeEquation ) ) | ( (lv_assertions_1_0= ruleAssertion ) ) | ( (lv_automatons_2_0= ruleAutomaton ) ) )*
            loop1:
            do {
                int alt1=4;
                switch ( input.LA(1) ) {
                case RULE_ID:
                case 17:
                    {
                    alt1=1;
                    }
                    break;
                case 40:
                    {
                    alt1=2;
                    }
                    break;
                case 41:
                    {
                    alt1=3;
                    }
                    break;

                }

                switch (alt1) {
            	case 1 :
            	    // InternalScadeEquations.g:92:3: ( (lv_equations_0_0= ruleScadeEquation ) )
            	    {
            	    // InternalScadeEquations.g:92:3: ( (lv_equations_0_0= ruleScadeEquation ) )
            	    // InternalScadeEquations.g:93:4: (lv_equations_0_0= ruleScadeEquation )
            	    {
            	    // InternalScadeEquations.g:93:4: (lv_equations_0_0= ruleScadeEquation )
            	    // InternalScadeEquations.g:94:5: lv_equations_0_0= ruleScadeEquation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScadeProgramAccess().getEquationsScadeEquationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_equations_0_0=ruleScadeEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScadeProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"equations",
            	      						lv_equations_0_0,
            	      						"de.cau.cs.kieler.lustre.scade.ScadeEquations.ScadeEquation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:112:3: ( (lv_assertions_1_0= ruleAssertion ) )
            	    {
            	    // InternalScadeEquations.g:112:3: ( (lv_assertions_1_0= ruleAssertion ) )
            	    // InternalScadeEquations.g:113:4: (lv_assertions_1_0= ruleAssertion )
            	    {
            	    // InternalScadeEquations.g:113:4: (lv_assertions_1_0= ruleAssertion )
            	    // InternalScadeEquations.g:114:5: lv_assertions_1_0= ruleAssertion
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScadeProgramAccess().getAssertionsAssertionParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_assertions_1_0=ruleAssertion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScadeProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"assertions",
            	      						lv_assertions_1_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.Assertion");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalScadeEquations.g:132:3: ( (lv_automatons_2_0= ruleAutomaton ) )
            	    {
            	    // InternalScadeEquations.g:132:3: ( (lv_automatons_2_0= ruleAutomaton ) )
            	    // InternalScadeEquations.g:133:4: (lv_automatons_2_0= ruleAutomaton )
            	    {
            	    // InternalScadeEquations.g:133:4: (lv_automatons_2_0= ruleAutomaton )
            	    // InternalScadeEquations.g:134:5: lv_automatons_2_0= ruleAutomaton
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScadeProgramAccess().getAutomatonsAutomatonParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_3);
            	    lv_automatons_2_0=ruleAutomaton();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScadeProgramRule());
            	      					}
            	      					add(
            	      						current,
            	      						"automatons",
            	      						lv_automatons_2_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.Automaton");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myHiddenTokenState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleScadeProgram"


    // $ANTLR start "entryRuleScadeEquation"
    // InternalScadeEquations.g:158:1: entryRuleScadeEquation returns [EObject current=null] : iv_ruleScadeEquation= ruleScadeEquation EOF ;
    public final EObject entryRuleScadeEquation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScadeEquation = null;


        try {
            // InternalScadeEquations.g:158:54: (iv_ruleScadeEquation= ruleScadeEquation EOF )
            // InternalScadeEquations.g:159:2: iv_ruleScadeEquation= ruleScadeEquation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScadeEquationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScadeEquation=ruleScadeEquation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScadeEquation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScadeEquation"


    // $ANTLR start "ruleScadeEquation"
    // InternalScadeEquations.g:165:1: ruleScadeEquation returns [EObject current=null] : ( ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) ) ( (lv_operator_13_0= ruleAssignOperator ) ) ( (lv_expression_14_0= ruleExpression ) ) otherlv_15= ';' ) ;
    public final EObject ruleScadeEquation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_15=null;
        EObject lv_references_1_0 = null;

        EObject lv_references_3_0 = null;

        EObject lv_references_5_0 = null;

        EObject lv_references_7_0 = null;

        EObject lv_references_9_0 = null;

        EObject lv_references_11_0 = null;

        EObject lv_references_12_0 = null;

        Enumerator lv_operator_13_0 = null;

        EObject lv_expression_14_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:171:2: ( ( ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) ) ( (lv_operator_13_0= ruleAssignOperator ) ) ( (lv_expression_14_0= ruleExpression ) ) otherlv_15= ';' ) )
            // InternalScadeEquations.g:172:2: ( ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) ) ( (lv_operator_13_0= ruleAssignOperator ) ) ( (lv_expression_14_0= ruleExpression ) ) otherlv_15= ';' )
            {
            // InternalScadeEquations.g:172:2: ( ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) ) ( (lv_operator_13_0= ruleAssignOperator ) ) ( (lv_expression_14_0= ruleExpression ) ) otherlv_15= ';' )
            // InternalScadeEquations.g:173:3: ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) ) ( (lv_operator_13_0= ruleAssignOperator ) ) ( (lv_expression_14_0= ruleExpression ) ) otherlv_15= ';'
            {
            // InternalScadeEquations.g:173:3: ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) )
            int alt4=3;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalScadeEquations.g:174:4: (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' )
                    {
                    // InternalScadeEquations.g:174:4: (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' )
                    // InternalScadeEquations.g:175:5: otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')'
                    {
                    otherlv_0=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_0, grammarAccess.getScadeEquationAccess().getLeftParenthesisKeyword_0_0_0());
                      				
                    }
                    // InternalScadeEquations.g:179:5: ( (lv_references_1_0= ruleValuedObjectString ) )
                    // InternalScadeEquations.g:180:6: (lv_references_1_0= ruleValuedObjectString )
                    {
                    // InternalScadeEquations.g:180:6: (lv_references_1_0= ruleValuedObjectString )
                    // InternalScadeEquations.g:181:7: lv_references_1_0= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_references_1_0=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_1_0,
                      								"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_2, grammarAccess.getScadeEquationAccess().getCommaKeyword_0_0_2());
                      				
                    }
                    // InternalScadeEquations.g:202:5: ( (lv_references_3_0= ruleValuedObjectString ) )
                    // InternalScadeEquations.g:203:6: (lv_references_3_0= ruleValuedObjectString )
                    {
                    // InternalScadeEquations.g:203:6: (lv_references_3_0= ruleValuedObjectString )
                    // InternalScadeEquations.g:204:7: lv_references_3_0= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_references_3_0=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_3_0,
                      								"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:221:5: (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==18) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalScadeEquations.g:222:6: otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) )
                    	    {
                    	    otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getScadeEquationAccess().getCommaKeyword_0_0_4_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:226:6: ( (lv_references_5_0= ruleValuedObjectString ) )
                    	    // InternalScadeEquations.g:227:7: (lv_references_5_0= ruleValuedObjectString )
                    	    {
                    	    // InternalScadeEquations.g:227:7: (lv_references_5_0= ruleValuedObjectString )
                    	    // InternalScadeEquations.g:228:8: lv_references_5_0= ruleValuedObjectString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_0_4_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_references_5_0=ruleValuedObjectString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"references",
                    	      									lv_references_5_0,
                    	      									"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);

                    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getScadeEquationAccess().getRightParenthesisKeyword_0_0_5());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:252:4: ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* )
                    {
                    // InternalScadeEquations.g:252:4: ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* )
                    // InternalScadeEquations.g:253:5: ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )*
                    {
                    // InternalScadeEquations.g:253:5: ( (lv_references_7_0= ruleValuedObjectString ) )
                    // InternalScadeEquations.g:254:6: (lv_references_7_0= ruleValuedObjectString )
                    {
                    // InternalScadeEquations.g:254:6: (lv_references_7_0= ruleValuedObjectString )
                    // InternalScadeEquations.g:255:7: lv_references_7_0= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_references_7_0=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_7_0,
                      								"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getScadeEquationAccess().getCommaKeyword_0_1_1());
                      				
                    }
                    // InternalScadeEquations.g:276:5: ( (lv_references_9_0= ruleValuedObjectString ) )
                    // InternalScadeEquations.g:277:6: (lv_references_9_0= ruleValuedObjectString )
                    {
                    // InternalScadeEquations.g:277:6: (lv_references_9_0= ruleValuedObjectString )
                    // InternalScadeEquations.g:278:7: lv_references_9_0= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_1_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_8);
                    lv_references_9_0=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_9_0,
                      								"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:295:5: (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )*
                    loop3:
                    do {
                        int alt3=2;
                        int LA3_0 = input.LA(1);

                        if ( (LA3_0==18) ) {
                            alt3=1;
                        }


                        switch (alt3) {
                    	case 1 :
                    	    // InternalScadeEquations.g:296:6: otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) )
                    	    {
                    	    otherlv_10=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_10, grammarAccess.getScadeEquationAccess().getCommaKeyword_0_1_3_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:300:6: ( (lv_references_11_0= ruleValuedObjectString ) )
                    	    // InternalScadeEquations.g:301:7: (lv_references_11_0= ruleValuedObjectString )
                    	    {
                    	    // InternalScadeEquations.g:301:7: (lv_references_11_0= ruleValuedObjectString )
                    	    // InternalScadeEquations.g:302:8: lv_references_11_0= ruleValuedObjectString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_1_3_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_8);
                    	    lv_references_11_0=ruleValuedObjectString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"references",
                    	      									lv_references_11_0,
                    	      									"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop3;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:322:4: ( (lv_references_12_0= ruleValuedObjectString ) )
                    {
                    // InternalScadeEquations.g:322:4: ( (lv_references_12_0= ruleValuedObjectString ) )
                    // InternalScadeEquations.g:323:5: (lv_references_12_0= ruleValuedObjectString )
                    {
                    // InternalScadeEquations.g:323:5: (lv_references_12_0= ruleValuedObjectString )
                    // InternalScadeEquations.g:324:6: lv_references_12_0= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScadeEquationAccess().getReferencesValuedObjectStringParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_references_12_0=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScadeEquationRule());
                      						}
                      						add(
                      							current,
                      							"references",
                      							lv_references_12_0,
                      							"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectString");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:342:3: ( (lv_operator_13_0= ruleAssignOperator ) )
            // InternalScadeEquations.g:343:4: (lv_operator_13_0= ruleAssignOperator )
            {
            // InternalScadeEquations.g:343:4: (lv_operator_13_0= ruleAssignOperator )
            // InternalScadeEquations.g:344:5: lv_operator_13_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScadeEquationAccess().getOperatorAssignOperatorEnumRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_operator_13_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScadeEquationRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_13_0,
              						"de.cau.cs.kieler.lustre.Lustre.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:361:3: ( (lv_expression_14_0= ruleExpression ) )
            // InternalScadeEquations.g:362:4: (lv_expression_14_0= ruleExpression )
            {
            // InternalScadeEquations.g:362:4: (lv_expression_14_0= ruleExpression )
            // InternalScadeEquations.g:363:5: lv_expression_14_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScadeEquationAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_expression_14_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScadeEquationRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_14_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getScadeEquationAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScadeEquation"


    // $ANTLR start "entryRuleValuedObjectString"
    // InternalScadeEquations.g:388:1: entryRuleValuedObjectString returns [EObject current=null] : iv_ruleValuedObjectString= ruleValuedObjectString EOF ;
    public final EObject entryRuleValuedObjectString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectString = null;


        try {
            // InternalScadeEquations.g:388:59: (iv_ruleValuedObjectString= ruleValuedObjectString EOF )
            // InternalScadeEquations.g:389:2: iv_ruleValuedObjectString= ruleValuedObjectString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectString=ruleValuedObjectString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectString"


    // $ANTLR start "ruleValuedObjectString"
    // InternalScadeEquations.g:395:1: ruleValuedObjectString returns [EObject current=null] : ( () ( (lv_name_1_0= rulePrimeID ) ) ) ;
    public final EObject ruleValuedObjectString() throws RecognitionException {
        EObject current = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:401:2: ( ( () ( (lv_name_1_0= rulePrimeID ) ) ) )
            // InternalScadeEquations.g:402:2: ( () ( (lv_name_1_0= rulePrimeID ) ) )
            {
            // InternalScadeEquations.g:402:2: ( () ( (lv_name_1_0= rulePrimeID ) ) )
            // InternalScadeEquations.g:403:3: () ( (lv_name_1_0= rulePrimeID ) )
            {
            // InternalScadeEquations.g:403:3: ()
            // InternalScadeEquations.g:404:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getValuedObjectStringAccess().getValuedObjectStringAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:413:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalScadeEquations.g:414:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalScadeEquations.g:414:4: (lv_name_1_0= rulePrimeID )
            // InternalScadeEquations.g:415:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectStringAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectStringRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectString"


    // $ANTLR start "entryRuleValuedObjectTestExpression"
    // InternalScadeEquations.g:436:1: entryRuleValuedObjectTestExpression returns [EObject current=null] : iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF ;
    public final EObject entryRuleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectTestExpression = null;


        try {
            // InternalScadeEquations.g:436:67: (iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF )
            // InternalScadeEquations.g:437:2: iv_ruleValuedObjectTestExpression= ruleValuedObjectTestExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectTestExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectTestExpression=ruleValuedObjectTestExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectTestExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectTestExpression"


    // $ANTLR start "ruleValuedObjectTestExpression"
    // InternalScadeEquations.g:443:1: ruleValuedObjectTestExpression returns [EObject current=null] : ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectString_7= ruleValuedObjectString ) ;
    public final EObject ruleValuedObjectTestExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Enumerator lv_operator_1_1 = null;

        Enumerator lv_operator_1_2 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        EObject this_ValuedObjectString_7 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:449:2: ( ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectString_7= ruleValuedObjectString ) )
            // InternalScadeEquations.g:450:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectString_7= ruleValuedObjectString )
            {
            // InternalScadeEquations.g:450:2: ( ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' ) | this_ValuedObjectString_7= ruleValuedObjectString )
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==108||LA7_0==111) ) {
                alt7=1;
            }
            else if ( (LA7_0==RULE_ID) ) {
                alt7=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }
            switch (alt7) {
                case 1 :
                    // InternalScadeEquations.g:451:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    {
                    // InternalScadeEquations.g:451:3: ( () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')' )
                    // InternalScadeEquations.g:452:4: () ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) ) otherlv_2= '(' ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) ) (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )? otherlv_6= ')'
                    {
                    // InternalScadeEquations.g:452:4: ()
                    // InternalScadeEquations.g:453:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:462:4: ( ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) ) )
                    // InternalScadeEquations.g:463:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    {
                    // InternalScadeEquations.g:463:5: ( (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator ) )
                    // InternalScadeEquations.g:464:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    {
                    // InternalScadeEquations.g:464:6: (lv_operator_1_1= rulePreOperator | lv_operator_1_2= ruleValOperator )
                    int alt5=2;
                    int LA5_0 = input.LA(1);

                    if ( (LA5_0==108) ) {
                        alt5=1;
                    }
                    else if ( (LA5_0==111) ) {
                        alt5=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 5, 0, input);

                        throw nvae;
                    }
                    switch (alt5) {
                        case 1 :
                            // InternalScadeEquations.g:465:7: lv_operator_1_1= rulePreOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_operator_1_1=rulePreOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_1,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalScadeEquations.g:481:7: lv_operator_1_2= ruleValOperator
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValOperatorEnumRuleCall_0_1_0_1());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_11);
                            lv_operator_1_2=ruleValOperator();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							set(
                              								current,
                              								"operator",
                              								lv_operator_1_2,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValOperator");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    otherlv_2=(Token)match(input,17,FollowSets000.FOLLOW_12); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2());
                      			
                    }
                    // InternalScadeEquations.g:503:4: ( (lv_subExpressions_3_0= ruleValuedObjectTestExpression ) )
                    // InternalScadeEquations.g:504:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    {
                    // InternalScadeEquations.g:504:5: (lv_subExpressions_3_0= ruleValuedObjectTestExpression )
                    // InternalScadeEquations.g:505:6: lv_subExpressions_3_0= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_subExpressions_3_0=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.lustre.scade.ScadeEquations.ValuedObjectTestExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:522:4: (otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) ) )?
                    int alt6=2;
                    int LA6_0 = input.LA(1);

                    if ( (LA6_0==18) ) {
                        alt6=1;
                    }
                    switch (alt6) {
                        case 1 :
                            // InternalScadeEquations.g:523:5: otherlv_4= ',' ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
                            {
                            otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getValuedObjectTestExpressionAccess().getCommaKeyword_0_4_0());
                              				
                            }
                            // InternalScadeEquations.g:527:5: ( (lv_subExpressions_5_0= ruleValuedObjectReference ) )
                            // InternalScadeEquations.g:528:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            {
                            // InternalScadeEquations.g:528:6: (lv_subExpressions_5_0= ruleValuedObjectReference )
                            // InternalScadeEquations.g:529:7: lv_subExpressions_5_0= ruleValuedObjectReference
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_0_4_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_13);
                            lv_subExpressions_5_0=ruleValuedObjectReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValuedObjectTestExpressionRule());
                              							}
                              							add(
                              								current,
                              								"subExpressions",
                              								lv_subExpressions_5_0,
                              								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_5());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:553:3: this_ValuedObjectString_7= ruleValuedObjectString
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectStringParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectString_7=ruleValuedObjectString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectString_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectTestExpression"


    // $ANTLR start "entryRuleTypeDeclaration"
    // InternalScadeEquations.g:568:1: entryRuleTypeDeclaration returns [EObject current=null] : iv_ruleTypeDeclaration= ruleTypeDeclaration EOF ;
    public final EObject entryRuleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypeDeclaration = null;


        try {
            // InternalScadeEquations.g:568:56: (iv_ruleTypeDeclaration= ruleTypeDeclaration EOF )
            // InternalScadeEquations.g:569:2: iv_ruleTypeDeclaration= ruleTypeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypeDeclaration=ruleTypeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypeDeclaration"


    // $ANTLR start "ruleTypeDeclaration"
    // InternalScadeEquations.g:575:1: ruleTypeDeclaration returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )? ) ;
    public final EObject ruleTypeDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Enumerator lv_type_3_0 = null;

        Enumerator lv_type_4_0 = null;

        AntlrDatatypeRuleToken lv_enums_6_0 = null;

        AntlrDatatypeRuleToken lv_enums_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_variables_12_1 = null;

        EObject lv_variables_12_2 = null;

        EObject lv_variables_14_1 = null;

        EObject lv_variables_14_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:581:2: ( ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )? ) )
            // InternalScadeEquations.g:582:2: ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )? )
            {
            // InternalScadeEquations.g:582:2: ( () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )? )
            // InternalScadeEquations.g:583:3: () ( (lv_name_1_0= RULE_ID ) ) (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )?
            {
            // InternalScadeEquations.g:583:3: ()
            // InternalScadeEquations.g:584:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getTypeDeclarationAccess().getTypeDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:593:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalScadeEquations.g:594:4: (lv_name_1_0= RULE_ID )
            {
            // InternalScadeEquations.g:594:4: (lv_name_1_0= RULE_ID )
            // InternalScadeEquations.g:595:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_14); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getTypeDeclarationAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getTypeDeclarationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalScadeEquations.g:611:3: (otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==21) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalScadeEquations.g:612:4: otherlv_2= '=' ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) )
                    {
                    otherlv_2=(Token)match(input,21,FollowSets000.FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getTypeDeclarationAccess().getEqualsSignKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:616:4: ( ( (lv_type_3_0= ruleValueType ) ) | ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' ) | ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' ) )
                    int alt13=3;
                    switch ( input.LA(1) ) {
                    case 93:
                    case 94:
                    case 95:
                        {
                        alt13=1;
                        }
                        break;
                    case 96:
                        {
                        alt13=2;
                        }
                        break;
                    case 114:
                        {
                        alt13=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 13, 0, input);

                        throw nvae;
                    }

                    switch (alt13) {
                        case 1 :
                            // InternalScadeEquations.g:617:5: ( (lv_type_3_0= ruleValueType ) )
                            {
                            // InternalScadeEquations.g:617:5: ( (lv_type_3_0= ruleValueType ) )
                            // InternalScadeEquations.g:618:6: (lv_type_3_0= ruleValueType )
                            {
                            // InternalScadeEquations.g:618:6: (lv_type_3_0= ruleValueType )
                            // InternalScadeEquations.g:619:7: lv_type_3_0= ruleValueType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeValueTypeEnumRuleCall_2_1_0_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_type_3_0=ruleValueType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"type",
                              								lv_type_3_0,
                              								"de.cau.cs.kieler.lustre.Lustre.ValueType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalScadeEquations.g:637:5: ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' )
                            {
                            // InternalScadeEquations.g:637:5: ( ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}' )
                            // InternalScadeEquations.g:638:6: ( (lv_type_4_0= ruleEnumType ) ) otherlv_5= '{' ( (lv_enums_6_0= rulePrimeID ) ) (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )* otherlv_9= '}'
                            {
                            // InternalScadeEquations.g:638:6: ( (lv_type_4_0= ruleEnumType ) )
                            // InternalScadeEquations.g:639:7: (lv_type_4_0= ruleEnumType )
                            {
                            // InternalScadeEquations.g:639:7: (lv_type_4_0= ruleEnumType )
                            // InternalScadeEquations.g:640:8: lv_type_4_0= ruleEnumType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeEnumTypeEnumRuleCall_2_1_1_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_type_4_0=ruleEnumType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_4_0,
                              									"de.cau.cs.kieler.lustre.Lustre.EnumType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,22,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getTypeDeclarationAccess().getLeftCurlyBracketKeyword_2_1_1_1());
                              					
                            }
                            // InternalScadeEquations.g:661:6: ( (lv_enums_6_0= rulePrimeID ) )
                            // InternalScadeEquations.g:662:7: (lv_enums_6_0= rulePrimeID )
                            {
                            // InternalScadeEquations.g:662:7: (lv_enums_6_0= rulePrimeID )
                            // InternalScadeEquations.g:663:8: lv_enums_6_0= rulePrimeID
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclarationAccess().getEnumsPrimeIDParserRuleCall_2_1_1_2_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_17);
                            lv_enums_6_0=rulePrimeID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              								}
                              								add(
                              									current,
                              									"enums",
                              									lv_enums_6_0,
                              									"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalScadeEquations.g:680:6: (otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) ) )*
                            loop8:
                            do {
                                int alt8=2;
                                int LA8_0 = input.LA(1);

                                if ( (LA8_0==18) ) {
                                    alt8=1;
                                }


                                switch (alt8) {
                            	case 1 :
                            	    // InternalScadeEquations.g:681:7: otherlv_7= ',' ( (lv_enums_8_0= rulePrimeID ) )
                            	    {
                            	    otherlv_7=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_7, grammarAccess.getTypeDeclarationAccess().getCommaKeyword_2_1_1_3_0());
                            	      						
                            	    }
                            	    // InternalScadeEquations.g:685:7: ( (lv_enums_8_0= rulePrimeID ) )
                            	    // InternalScadeEquations.g:686:8: (lv_enums_8_0= rulePrimeID )
                            	    {
                            	    // InternalScadeEquations.g:686:8: (lv_enums_8_0= rulePrimeID )
                            	    // InternalScadeEquations.g:687:9: lv_enums_8_0= rulePrimeID
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getTypeDeclarationAccess().getEnumsPrimeIDParserRuleCall_2_1_1_3_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_17);
                            	    lv_enums_8_0=rulePrimeID();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"enums",
                            	      										lv_enums_8_0,
                            	      										"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop8;
                                }
                            } while (true);

                            otherlv_9=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_9, grammarAccess.getTypeDeclarationAccess().getRightCurlyBracketKeyword_2_1_1_4());
                              					
                            }

                            }


                            }
                            break;
                        case 3 :
                            // InternalScadeEquations.g:711:5: ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' )
                            {
                            // InternalScadeEquations.g:711:5: ( ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}' )
                            // InternalScadeEquations.g:712:6: ( (lv_type_10_0= ruleStructType ) ) otherlv_11= '{' ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )* (otherlv_15= ';' )? otherlv_16= '}'
                            {
                            // InternalScadeEquations.g:712:6: ( (lv_type_10_0= ruleStructType ) )
                            // InternalScadeEquations.g:713:7: (lv_type_10_0= ruleStructType )
                            {
                            // InternalScadeEquations.g:713:7: (lv_type_10_0= ruleStructType )
                            // InternalScadeEquations.g:714:8: lv_type_10_0= ruleStructType
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getTypeDeclarationAccess().getTypeStructTypeEnumRuleCall_2_1_2_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_type_10_0=ruleStructType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                              								}
                              								set(
                              									current,
                              									"type",
                              									lv_type_10_0,
                              									"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_11=(Token)match(input,22,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getTypeDeclarationAccess().getLeftCurlyBracketKeyword_2_1_2_1());
                              					
                            }
                            // InternalScadeEquations.g:735:6: ( ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) ) )
                            // InternalScadeEquations.g:736:7: ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) )
                            {
                            // InternalScadeEquations.g:736:7: ( (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit ) )
                            // InternalScadeEquations.g:737:8: (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit )
                            {
                            // InternalScadeEquations.g:737:8: (lv_variables_12_1= ruleVariableDeclarationInit | lv_variables_12_2= ruleVariableDeclarationNoInit )
                            int alt9=2;
                            int LA9_0 = input.LA(1);

                            if ( (LA9_0==RULE_ID) ) {
                                int LA9_1 = input.LA(2);

                                if ( (synpred14_InternalScadeEquations()) ) {
                                    alt9=1;
                                }
                                else if ( (true) ) {
                                    alt9=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 9, 1, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 9, 0, input);

                                throw nvae;
                            }
                            switch (alt9) {
                                case 1 :
                                    // InternalScadeEquations.g:738:9: lv_variables_12_1= ruleVariableDeclarationInit
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_2_1_2_2_0_0());
                                      								
                                    }
                                    pushFollow(FollowSets000.FOLLOW_18);
                                    lv_variables_12_1=ruleVariableDeclarationInit();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                                      									}
                                      									add(
                                      										current,
                                      										"variables",
                                      										lv_variables_12_1,
                                      										"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalScadeEquations.g:754:9: lv_variables_12_2= ruleVariableDeclarationNoInit
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationNoInitParserRuleCall_2_1_2_2_0_1());
                                      								
                                    }
                                    pushFollow(FollowSets000.FOLLOW_18);
                                    lv_variables_12_2=ruleVariableDeclarationNoInit();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                                      									}
                                      									add(
                                      										current,
                                      										"variables",
                                      										lv_variables_12_2,
                                      										"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalScadeEquations.g:772:6: (otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) ) )*
                            loop11:
                            do {
                                int alt11=2;
                                int LA11_0 = input.LA(1);

                                if ( (LA11_0==20) ) {
                                    int LA11_1 = input.LA(2);

                                    if ( (LA11_1==RULE_ID) ) {
                                        alt11=1;
                                    }


                                }


                                switch (alt11) {
                            	case 1 :
                            	    // InternalScadeEquations.g:773:7: otherlv_13= ';' ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) )
                            	    {
                            	    otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_13, grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_2_1_2_3_0());
                            	      						
                            	    }
                            	    // InternalScadeEquations.g:777:7: ( ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) ) )
                            	    // InternalScadeEquations.g:778:8: ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) )
                            	    {
                            	    // InternalScadeEquations.g:778:8: ( (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit ) )
                            	    // InternalScadeEquations.g:779:9: (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit )
                            	    {
                            	    // InternalScadeEquations.g:779:9: (lv_variables_14_1= ruleVariableDeclarationInit | lv_variables_14_2= ruleVariableDeclarationNoInit )
                            	    int alt10=2;
                            	    int LA10_0 = input.LA(1);

                            	    if ( (LA10_0==RULE_ID) ) {
                            	        int LA10_1 = input.LA(2);

                            	        if ( (synpred15_InternalScadeEquations()) ) {
                            	            alt10=1;
                            	        }
                            	        else if ( (true) ) {
                            	            alt10=2;
                            	        }
                            	        else {
                            	            if (state.backtracking>0) {state.failed=true; return current;}
                            	            NoViableAltException nvae =
                            	                new NoViableAltException("", 10, 1, input);

                            	            throw nvae;
                            	        }
                            	    }
                            	    else {
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 10, 0, input);

                            	        throw nvae;
                            	    }
                            	    switch (alt10) {
                            	        case 1 :
                            	            // InternalScadeEquations.g:780:10: lv_variables_14_1= ruleVariableDeclarationInit
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              										newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_2_1_2_3_1_0_0());
                            	              									
                            	            }
                            	            pushFollow(FollowSets000.FOLLOW_18);
                            	            lv_variables_14_1=ruleVariableDeclarationInit();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              										if (current==null) {
                            	              											current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                            	              										}
                            	              										add(
                            	              											current,
                            	              											"variables",
                            	              											lv_variables_14_1,
                            	              											"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
                            	              										afterParserOrEnumRuleCall();
                            	              									
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalScadeEquations.g:796:10: lv_variables_14_2= ruleVariableDeclarationNoInit
                            	            {
                            	            if ( state.backtracking==0 ) {

                            	              										newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationNoInitParserRuleCall_2_1_2_3_1_0_1());
                            	              									
                            	            }
                            	            pushFollow(FollowSets000.FOLLOW_18);
                            	            lv_variables_14_2=ruleVariableDeclarationNoInit();

                            	            state._fsp--;
                            	            if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              										if (current==null) {
                            	              											current = createModelElementForParent(grammarAccess.getTypeDeclarationRule());
                            	              										}
                            	              										add(
                            	              											current,
                            	              											"variables",
                            	              											lv_variables_14_2,
                            	              											"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                            	              										afterParserOrEnumRuleCall();
                            	              									
                            	            }

                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop11;
                                }
                            } while (true);

                            // InternalScadeEquations.g:815:6: (otherlv_15= ';' )?
                            int alt12=2;
                            int LA12_0 = input.LA(1);

                            if ( (LA12_0==20) ) {
                                alt12=1;
                            }
                            switch (alt12) {
                                case 1 :
                                    // InternalScadeEquations.g:816:7: otherlv_15= ';'
                                    {
                                    otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_15, grammarAccess.getTypeDeclarationAccess().getSemicolonKeyword_2_1_2_4());
                                      						
                                    }

                                    }
                                    break;

                            }

                            otherlv_16=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_16, grammarAccess.getTypeDeclarationAccess().getRightCurlyBracketKeyword_2_1_2_5());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypeDeclaration"


    // $ANTLR start "entryRuleExternalNodeDeclaration"
    // InternalScadeEquations.g:832:1: entryRuleExternalNodeDeclaration returns [EObject current=null] : iv_ruleExternalNodeDeclaration= ruleExternalNodeDeclaration EOF ;
    public final EObject entryRuleExternalNodeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternalNodeDeclaration = null;


        try {
            // InternalScadeEquations.g:832:64: (iv_ruleExternalNodeDeclaration= ruleExternalNodeDeclaration EOF )
            // InternalScadeEquations.g:833:2: iv_ruleExternalNodeDeclaration= ruleExternalNodeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternalNodeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternalNodeDeclaration=ruleExternalNodeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternalNodeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternalNodeDeclaration"


    // $ANTLR start "ruleExternalNodeDeclaration"
    // InternalScadeEquations.g:839:1: ruleExternalNodeDeclaration returns [EObject current=null] : ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? otherlv_2= 'extern' (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) ) ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) ) ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) otherlv_12= 'returns' ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' ) (otherlv_19= ';' )? ) ;
    public final EObject ruleExternalNodeDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_isUnsafe_1_0=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_hasState_4_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        EObject lv_valuedObjects_5_0 = null;

        EObject lv_inputs_7_0 = null;

        EObject lv_inputs_9_0 = null;

        EObject lv_outputs_14_0 = null;

        EObject lv_outputs_16_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:845:2: ( ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? otherlv_2= 'extern' (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) ) ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) ) ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) otherlv_12= 'returns' ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' ) (otherlv_19= ';' )? ) )
            // InternalScadeEquations.g:846:2: ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? otherlv_2= 'extern' (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) ) ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) ) ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) otherlv_12= 'returns' ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' ) (otherlv_19= ';' )? )
            {
            // InternalScadeEquations.g:846:2: ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? otherlv_2= 'extern' (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) ) ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) ) ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) otherlv_12= 'returns' ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' ) (otherlv_19= ';' )? )
            // InternalScadeEquations.g:847:3: () ( (lv_isUnsafe_1_0= 'unsafe' ) )? otherlv_2= 'extern' (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) ) ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) ) ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) otherlv_12= 'returns' ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' ) (otherlv_19= ';' )?
            {
            // InternalScadeEquations.g:847:3: ()
            // InternalScadeEquations.g:848:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getExternalNodeDeclarationAccess().getExternalNodeDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:857:3: ( (lv_isUnsafe_1_0= 'unsafe' ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==24) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalScadeEquations.g:858:4: (lv_isUnsafe_1_0= 'unsafe' )
                    {
                    // InternalScadeEquations.g:858:4: (lv_isUnsafe_1_0= 'unsafe' )
                    // InternalScadeEquations.g:859:5: lv_isUnsafe_1_0= 'unsafe'
                    {
                    lv_isUnsafe_1_0=(Token)match(input,24,FollowSets000.FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isUnsafe_1_0, grammarAccess.getExternalNodeDeclarationAccess().getIsUnsafeUnsafeKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getExternalNodeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isUnsafe", lv_isUnsafe_1_0 != null, "unsafe");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,25,FollowSets000.FOLLOW_21); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getExternalNodeDeclarationAccess().getExternKeyword_2());
              		
            }
            // InternalScadeEquations.g:875:3: (otherlv_3= 'function' | ( (lv_hasState_4_0= 'node' ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==26) ) {
                alt16=1;
            }
            else if ( (LA16_0==27) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalScadeEquations.g:876:4: otherlv_3= 'function'
                    {
                    otherlv_3=(Token)match(input,26,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getExternalNodeDeclarationAccess().getFunctionKeyword_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:881:4: ( (lv_hasState_4_0= 'node' ) )
                    {
                    // InternalScadeEquations.g:881:4: ( (lv_hasState_4_0= 'node' ) )
                    // InternalScadeEquations.g:882:5: (lv_hasState_4_0= 'node' )
                    {
                    // InternalScadeEquations.g:882:5: (lv_hasState_4_0= 'node' )
                    // InternalScadeEquations.g:883:6: lv_hasState_4_0= 'node'
                    {
                    lv_hasState_4_0=(Token)match(input,27,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasState_4_0, grammarAccess.getExternalNodeDeclarationAccess().getHasStateNodeKeyword_3_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExternalNodeDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "hasState", lv_hasState_4_0 != null, "node");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:896:3: ( (lv_valuedObjects_5_0= ruleNodeValuedObject ) )
            // InternalScadeEquations.g:897:4: (lv_valuedObjects_5_0= ruleNodeValuedObject )
            {
            // InternalScadeEquations.g:897:4: (lv_valuedObjects_5_0= ruleNodeValuedObject )
            // InternalScadeEquations.g:898:5: lv_valuedObjects_5_0= ruleNodeValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getValuedObjectsNodeValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_valuedObjects_5_0=ruleNodeValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_5_0,
              						"de.cau.cs.kieler.lustre.Lustre.NodeValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:915:3: ( (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==17) ) {
                alt18=1;
            }
            else if ( (LA18_0==28) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalScadeEquations.g:916:4: (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' )
                    {
                    // InternalScadeEquations.g:916:4: (otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')' )
                    // InternalScadeEquations.g:917:5: otherlv_6= '(' ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) ) (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )* otherlv_10= ')'
                    {
                    otherlv_6=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getExternalNodeDeclarationAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalScadeEquations.g:921:5: ( (lv_inputs_7_0= ruleVariableDeclarationNoInit ) )
                    // InternalScadeEquations.g:922:6: (lv_inputs_7_0= ruleVariableDeclarationNoInit )
                    {
                    // InternalScadeEquations.g:922:6: (lv_inputs_7_0= ruleVariableDeclarationNoInit )
                    // InternalScadeEquations.g:923:7: lv_inputs_7_0= ruleVariableDeclarationNoInit
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getInputsVariableDeclarationNoInitParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_inputs_7_0=ruleVariableDeclarationNoInit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"inputs",
                      								lv_inputs_7_0,
                      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:940:5: (otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) ) )*
                    loop17:
                    do {
                        int alt17=2;
                        int LA17_0 = input.LA(1);

                        if ( (LA17_0==20) ) {
                            alt17=1;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // InternalScadeEquations.g:941:6: otherlv_8= ';' ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) )
                    	    {
                    	    otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getExternalNodeDeclarationAccess().getSemicolonKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:945:6: ( (lv_inputs_9_0= ruleVariableDeclarationNoInit ) )
                    	    // InternalScadeEquations.g:946:7: (lv_inputs_9_0= ruleVariableDeclarationNoInit )
                    	    {
                    	    // InternalScadeEquations.g:946:7: (lv_inputs_9_0= ruleVariableDeclarationNoInit )
                    	    // InternalScadeEquations.g:947:8: lv_inputs_9_0= ruleVariableDeclarationNoInit
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getInputsVariableDeclarationNoInitParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_inputs_9_0=ruleVariableDeclarationNoInit();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"inputs",
                    	      									lv_inputs_9_0,
                    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop17;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,19,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getExternalNodeDeclarationAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:971:4: otherlv_11= '()'
                    {
                    otherlv_11=(Token)match(input,28,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getExternalNodeDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_12=(Token)match(input,29,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_12, grammarAccess.getExternalNodeDeclarationAccess().getReturnsKeyword_6());
              		
            }
            // InternalScadeEquations.g:980:3: ( (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' ) | otherlv_18= '()' )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==17) ) {
                alt20=1;
            }
            else if ( (LA20_0==28) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalScadeEquations.g:981:4: (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' )
                    {
                    // InternalScadeEquations.g:981:4: (otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')' )
                    // InternalScadeEquations.g:982:5: otherlv_13= '(' ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) ) (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )* otherlv_17= ')'
                    {
                    otherlv_13=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getExternalNodeDeclarationAccess().getLeftParenthesisKeyword_7_0_0());
                      				
                    }
                    // InternalScadeEquations.g:986:5: ( (lv_outputs_14_0= ruleVariableDeclarationNoInit ) )
                    // InternalScadeEquations.g:987:6: (lv_outputs_14_0= ruleVariableDeclarationNoInit )
                    {
                    // InternalScadeEquations.g:987:6: (lv_outputs_14_0= ruleVariableDeclarationNoInit )
                    // InternalScadeEquations.g:988:7: lv_outputs_14_0= ruleVariableDeclarationNoInit
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getOutputsVariableDeclarationNoInitParserRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_outputs_14_0=ruleVariableDeclarationNoInit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"outputs",
                      								lv_outputs_14_0,
                      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:1005:5: (otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==20) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalScadeEquations.g:1006:6: otherlv_15= ';' ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) )
                    	    {
                    	    otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_15, grammarAccess.getExternalNodeDeclarationAccess().getSemicolonKeyword_7_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:1010:6: ( (lv_outputs_16_0= ruleVariableDeclarationNoInit ) )
                    	    // InternalScadeEquations.g:1011:7: (lv_outputs_16_0= ruleVariableDeclarationNoInit )
                    	    {
                    	    // InternalScadeEquations.g:1011:7: (lv_outputs_16_0= ruleVariableDeclarationNoInit )
                    	    // InternalScadeEquations.g:1012:8: lv_outputs_16_0= ruleVariableDeclarationNoInit
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getExternalNodeDeclarationAccess().getOutputsVariableDeclarationNoInitParserRuleCall_7_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_outputs_16_0=ruleVariableDeclarationNoInit();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getExternalNodeDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"outputs",
                    	      									lv_outputs_16_0,
                    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);

                    otherlv_17=(Token)match(input,19,FollowSets000.FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_17, grammarAccess.getExternalNodeDeclarationAccess().getRightParenthesisKeyword_7_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:1036:4: otherlv_18= '()'
                    {
                    otherlv_18=(Token)match(input,28,FollowSets000.FOLLOW_25); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getExternalNodeDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_7_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:1041:3: (otherlv_19= ';' )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==20) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalScadeEquations.g:1042:4: otherlv_19= ';'
                    {
                    otherlv_19=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getExternalNodeDeclarationAccess().getSemicolonKeyword_8());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternalNodeDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationNoInit"
    // InternalScadeEquations.g:1051:1: entryRuleVariableDeclarationNoInit returns [EObject current=null] : iv_ruleVariableDeclarationNoInit= ruleVariableDeclarationNoInit EOF ;
    public final EObject entryRuleVariableDeclarationNoInit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationNoInit = null;


        try {
            // InternalScadeEquations.g:1051:66: (iv_ruleVariableDeclarationNoInit= ruleVariableDeclarationNoInit EOF )
            // InternalScadeEquations.g:1052:2: iv_ruleVariableDeclarationNoInit= ruleVariableDeclarationNoInit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationNoInitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationNoInit=ruleVariableDeclarationNoInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationNoInit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationNoInit"


    // $ANTLR start "ruleVariableDeclarationNoInit"
    // InternalScadeEquations.g:1058:1: ruleVariableDeclarationNoInit returns [EObject current=null] : ( () ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )* otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )? ) ;
    public final EObject ruleVariableDeclarationNoInit() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        EObject lv_valuedObjects_1_0 = null;

        EObject lv_valuedObjects_3_0 = null;

        Enumerator lv_type_5_0 = null;

        EObject lv_clockExpr_7_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1064:2: ( ( () ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )* otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )? ) )
            // InternalScadeEquations.g:1065:2: ( () ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )* otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )? )
            {
            // InternalScadeEquations.g:1065:2: ( () ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )* otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )? )
            // InternalScadeEquations.g:1066:3: () ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )* otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )?
            {
            // InternalScadeEquations.g:1066:3: ()
            // InternalScadeEquations.g:1067:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVariableDeclarationNoInitAccess().getLustreVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1076:3: ( (lv_valuedObjects_1_0= ruleValuedObjectNoInit ) )
            // InternalScadeEquations.g:1077:4: (lv_valuedObjects_1_0= ruleValuedObjectNoInit )
            {
            // InternalScadeEquations.g:1077:4: (lv_valuedObjects_1_0= ruleValuedObjectNoInit )
            // InternalScadeEquations.g:1078:5: lv_valuedObjects_1_0= ruleValuedObjectNoInit
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationNoInitAccess().getValuedObjectsValuedObjectNoInitParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_26);
            lv_valuedObjects_1_0=ruleValuedObjectNoInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationNoInitRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_1_0,
              						"de.cau.cs.kieler.lustre.Lustre.ValuedObjectNoInit");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1095:3: (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) ) )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==18) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // InternalScadeEquations.g:1096:4: otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationNoInitAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:1100:4: ( (lv_valuedObjects_3_0= ruleValuedObjectNoInit ) )
            	    // InternalScadeEquations.g:1101:5: (lv_valuedObjects_3_0= ruleValuedObjectNoInit )
            	    {
            	    // InternalScadeEquations.g:1101:5: (lv_valuedObjects_3_0= ruleValuedObjectNoInit )
            	    // InternalScadeEquations.g:1102:6: lv_valuedObjects_3_0= ruleValuedObjectNoInit
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationNoInitAccess().getValuedObjectsValuedObjectNoInitParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_26);
            	    lv_valuedObjects_3_0=ruleValuedObjectNoInit();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationNoInitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_3_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.ValuedObjectNoInit");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            otherlv_4=(Token)match(input,30,FollowSets000.FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getVariableDeclarationNoInitAccess().getColonKeyword_3());
              		
            }
            // InternalScadeEquations.g:1124:3: ( (lv_type_5_0= ruleValueType ) )
            // InternalScadeEquations.g:1125:4: (lv_type_5_0= ruleValueType )
            {
            // InternalScadeEquations.g:1125:4: (lv_type_5_0= ruleValueType )
            // InternalScadeEquations.g:1126:5: lv_type_5_0= ruleValueType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationNoInitAccess().getTypeValueTypeEnumRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_type_5_0=ruleValueType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationNoInitRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_5_0,
              						"de.cau.cs.kieler.lustre.Lustre.ValueType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1143:3: (otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==31) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalScadeEquations.g:1144:4: otherlv_6= 'when' ( (lv_clockExpr_7_0= ruleBoolExpression ) )
                    {
                    otherlv_6=(Token)match(input,31,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getVariableDeclarationNoInitAccess().getWhenKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:1148:4: ( (lv_clockExpr_7_0= ruleBoolExpression ) )
                    // InternalScadeEquations.g:1149:5: (lv_clockExpr_7_0= ruleBoolExpression )
                    {
                    // InternalScadeEquations.g:1149:5: (lv_clockExpr_7_0= ruleBoolExpression )
                    // InternalScadeEquations.g:1150:6: lv_clockExpr_7_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVariableDeclarationNoInitAccess().getClockExprBoolExpressionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_clockExpr_7_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVariableDeclarationNoInitRule());
                      						}
                      						set(
                      							current,
                      							"clockExpr",
                      							lv_clockExpr_7_0,
                      							"de.cau.cs.kieler.lustre.Lustre.BoolExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationNoInit"


    // $ANTLR start "entryRuleVariableDeclarationInit"
    // InternalScadeEquations.g:1172:1: entryRuleVariableDeclarationInit returns [EObject current=null] : iv_ruleVariableDeclarationInit= ruleVariableDeclarationInit EOF ;
    public final EObject entryRuleVariableDeclarationInit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationInit = null;


        try {
            // InternalScadeEquations.g:1172:64: (iv_ruleVariableDeclarationInit= ruleVariableDeclarationInit EOF )
            // InternalScadeEquations.g:1173:2: iv_ruleVariableDeclarationInit= ruleVariableDeclarationInit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationInitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationInit=ruleVariableDeclarationInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationInit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationInit"


    // $ANTLR start "ruleVariableDeclarationInit"
    // InternalScadeEquations.g:1179:1: ruleVariableDeclarationInit returns [EObject current=null] : ( () ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) ) (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )? ) ;
    public final EObject ruleVariableDeclarationInit() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_valuedObjects_1_0 = null;

        EObject lv_clockExpr_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1185:2: ( ( () ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) ) (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )? ) )
            // InternalScadeEquations.g:1186:2: ( () ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) ) (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )? )
            {
            // InternalScadeEquations.g:1186:2: ( () ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) ) (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )? )
            // InternalScadeEquations.g:1187:3: () ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) ) (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )?
            {
            // InternalScadeEquations.g:1187:3: ()
            // InternalScadeEquations.g:1188:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getVariableDeclarationInitAccess().getLustreVariableDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1197:3: ( (lv_valuedObjects_1_0= ruleValuedObjectInit ) )
            // InternalScadeEquations.g:1198:4: (lv_valuedObjects_1_0= ruleValuedObjectInit )
            {
            // InternalScadeEquations.g:1198:4: (lv_valuedObjects_1_0= ruleValuedObjectInit )
            // InternalScadeEquations.g:1199:5: lv_valuedObjects_1_0= ruleValuedObjectInit
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationInitAccess().getValuedObjectsValuedObjectInitParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_28);
            lv_valuedObjects_1_0=ruleValuedObjectInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationInitRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_1_0,
              						"de.cau.cs.kieler.lustre.Lustre.ValuedObjectInit");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1216:3: (otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) ) )?
            int alt24=2;
            int LA24_0 = input.LA(1);

            if ( (LA24_0==31) ) {
                alt24=1;
            }
            switch (alt24) {
                case 1 :
                    // InternalScadeEquations.g:1217:4: otherlv_2= 'when' ( (lv_clockExpr_3_0= ruleBoolExpression ) )
                    {
                    otherlv_2=(Token)match(input,31,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getVariableDeclarationInitAccess().getWhenKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:1221:4: ( (lv_clockExpr_3_0= ruleBoolExpression ) )
                    // InternalScadeEquations.g:1222:5: (lv_clockExpr_3_0= ruleBoolExpression )
                    {
                    // InternalScadeEquations.g:1222:5: (lv_clockExpr_3_0= ruleBoolExpression )
                    // InternalScadeEquations.g:1223:6: lv_clockExpr_3_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getVariableDeclarationInitAccess().getClockExprBoolExpressionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_clockExpr_3_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getVariableDeclarationInitRule());
                      						}
                      						set(
                      							current,
                      							"clockExpr",
                      							lv_clockExpr_3_0,
                      							"de.cau.cs.kieler.lustre.Lustre.BoolExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationInit"


    // $ANTLR start "entryRuleValuedObjectNoInit"
    // InternalScadeEquations.g:1245:1: entryRuleValuedObjectNoInit returns [EObject current=null] : iv_ruleValuedObjectNoInit= ruleValuedObjectNoInit EOF ;
    public final EObject entryRuleValuedObjectNoInit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectNoInit = null;


        try {
            // InternalScadeEquations.g:1245:59: (iv_ruleValuedObjectNoInit= ruleValuedObjectNoInit EOF )
            // InternalScadeEquations.g:1246:2: iv_ruleValuedObjectNoInit= ruleValuedObjectNoInit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectNoInitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectNoInit=ruleValuedObjectNoInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectNoInit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectNoInit"


    // $ANTLR start "ruleValuedObjectNoInit"
    // InternalScadeEquations.g:1252:1: ruleValuedObjectNoInit returns [EObject current=null] : ( ( (lv_name_0_0= rulePrimeID ) ) (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )* ) ;
    public final EObject ruleValuedObjectNoInit() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_cardinalities_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1258:2: ( ( ( (lv_name_0_0= rulePrimeID ) ) (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )* ) )
            // InternalScadeEquations.g:1259:2: ( ( (lv_name_0_0= rulePrimeID ) ) (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )* )
            {
            // InternalScadeEquations.g:1259:2: ( ( (lv_name_0_0= rulePrimeID ) ) (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )* )
            // InternalScadeEquations.g:1260:3: ( (lv_name_0_0= rulePrimeID ) ) (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )*
            {
            // InternalScadeEquations.g:1260:3: ( (lv_name_0_0= rulePrimeID ) )
            // InternalScadeEquations.g:1261:4: (lv_name_0_0= rulePrimeID )
            {
            // InternalScadeEquations.g:1261:4: (lv_name_0_0= rulePrimeID )
            // InternalScadeEquations.g:1262:5: lv_name_0_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectNoInitAccess().getNamePrimeIDParserRuleCall_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_29);
            lv_name_0_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectNoInitRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1279:3: (otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==32) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // InternalScadeEquations.g:1280:4: otherlv_1= '^' ( (lv_cardinalities_2_0= ruleExpression ) )
            	    {
            	    otherlv_1=(Token)match(input,32,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValuedObjectNoInitAccess().getCircumflexAccentKeyword_1_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:1284:4: ( (lv_cardinalities_2_0= ruleExpression ) )
            	    // InternalScadeEquations.g:1285:5: (lv_cardinalities_2_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:1285:5: (lv_cardinalities_2_0= ruleExpression )
            	    // InternalScadeEquations.g:1286:6: lv_cardinalities_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectNoInitAccess().getCardinalitiesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_29);
            	    lv_cardinalities_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectNoInitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectNoInit"


    // $ANTLR start "entryRuleValuedObjectInit"
    // InternalScadeEquations.g:1308:1: entryRuleValuedObjectInit returns [EObject current=null] : iv_ruleValuedObjectInit= ruleValuedObjectInit EOF ;
    public final EObject entryRuleValuedObjectInit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectInit = null;


        try {
            // InternalScadeEquations.g:1308:57: (iv_ruleValuedObjectInit= ruleValuedObjectInit EOF )
            // InternalScadeEquations.g:1309:2: iv_ruleValuedObjectInit= ruleValuedObjectInit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectInitRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectInit=ruleValuedObjectInit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectInit; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectInit"


    // $ANTLR start "ruleValuedObjectInit"
    // InternalScadeEquations.g:1315:1: ruleValuedObjectInit returns [EObject current=null] : ( () ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )* (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )? ) ;
    public final EObject ruleValuedObjectInit() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        Enumerator lv_type_5_0 = null;

        EObject lv_initialValue_7_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1321:2: ( ( () ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )* (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )? ) )
            // InternalScadeEquations.g:1322:2: ( () ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )* (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )? )
            {
            // InternalScadeEquations.g:1322:2: ( () ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )* (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )? )
            // InternalScadeEquations.g:1323:3: () ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )* (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) ) (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )?
            {
            // InternalScadeEquations.g:1323:3: ()
            // InternalScadeEquations.g:1324:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getValuedObjectInitAccess().getLustreValuedObjectAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1333:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalScadeEquations.g:1334:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalScadeEquations.g:1334:4: (lv_name_1_0= rulePrimeID )
            // InternalScadeEquations.g:1335:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectInitAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_30);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectInitRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1352:3: (otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==32) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // InternalScadeEquations.g:1353:4: otherlv_2= '^' ( (lv_cardinalities_3_0= ruleExpression ) )
            	    {
            	    otherlv_2=(Token)match(input,32,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectInitAccess().getCircumflexAccentKeyword_2_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:1357:4: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalScadeEquations.g:1358:5: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:1358:5: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalScadeEquations.g:1359:6: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectInitAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_30);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectInitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            // InternalScadeEquations.g:1377:3: (otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) ) )
            // InternalScadeEquations.g:1378:4: otherlv_4= ':' ( (lv_type_5_0= ruleValueType ) )
            {
            otherlv_4=(Token)match(input,30,FollowSets000.FOLLOW_27); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_4, grammarAccess.getValuedObjectInitAccess().getColonKeyword_3_0());
              			
            }
            // InternalScadeEquations.g:1382:4: ( (lv_type_5_0= ruleValueType ) )
            // InternalScadeEquations.g:1383:5: (lv_type_5_0= ruleValueType )
            {
            // InternalScadeEquations.g:1383:5: (lv_type_5_0= ruleValueType )
            // InternalScadeEquations.g:1384:6: lv_type_5_0= ruleValueType
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getValuedObjectInitAccess().getTypeValueTypeEnumRuleCall_3_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_14);
            lv_type_5_0=ruleValueType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getValuedObjectInitRule());
              						}
              						set(
              							current,
              							"type",
              							lv_type_5_0,
              							"de.cau.cs.kieler.lustre.Lustre.ValueType");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }

            // InternalScadeEquations.g:1402:3: (otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==21) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // InternalScadeEquations.g:1403:4: otherlv_6= '=' ( (lv_initialValue_7_0= ruleExpression ) )
                    {
                    otherlv_6=(Token)match(input,21,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getValuedObjectInitAccess().getEqualsSignKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:1407:4: ( (lv_initialValue_7_0= ruleExpression ) )
                    // InternalScadeEquations.g:1408:5: (lv_initialValue_7_0= ruleExpression )
                    {
                    // InternalScadeEquations.g:1408:5: (lv_initialValue_7_0= ruleExpression )
                    // InternalScadeEquations.g:1409:6: lv_initialValue_7_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectInitAccess().getInitialValueExpressionParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_initialValue_7_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectInitRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_7_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectInit"


    // $ANTLR start "entryRuleNodeDeclaration"
    // InternalScadeEquations.g:1431:1: entryRuleNodeDeclaration returns [EObject current=null] : iv_ruleNodeDeclaration= ruleNodeDeclaration EOF ;
    public final EObject entryRuleNodeDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeDeclaration = null;


        try {
            // InternalScadeEquations.g:1431:56: (iv_ruleNodeDeclaration= ruleNodeDeclaration EOF )
            // InternalScadeEquations.g:1432:2: iv_ruleNodeDeclaration= ruleNodeDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNodeDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNodeDeclaration=ruleNodeDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNodeDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeDeclaration"


    // $ANTLR start "ruleNodeDeclaration"
    // InternalScadeEquations.g:1438:1: ruleNodeDeclaration returns [EObject current=null] : ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) ) ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) otherlv_11= 'returns' ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' ) (otherlv_18= ';' )? ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )* otherlv_29= 'let' ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) ;
    public final EObject ruleNodeDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_isUnsafe_1_0=null;
        Token otherlv_2=null;
        Token lv_hasState_3_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_36=null;
        EObject lv_valuedObjects_4_0 = null;

        EObject lv_inputs_6_0 = null;

        EObject lv_inputs_8_0 = null;

        EObject lv_outputs_13_0 = null;

        EObject lv_outputs_15_0 = null;

        EObject lv_constants_20_0 = null;

        EObject lv_constants_22_0 = null;

        EObject lv_variables_25_1 = null;

        EObject lv_variables_25_2 = null;

        EObject lv_variables_27_1 = null;

        EObject lv_variables_27_2 = null;

        EObject lv_equations_30_0 = null;

        EObject lv_emissions_31_0 = null;

        EObject lv_assertions_32_0 = null;

        EObject lv_automatons_33_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1444:2: ( ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) ) ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) otherlv_11= 'returns' ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' ) (otherlv_18= ';' )? ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )* otherlv_29= 'let' ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) ) )
            // InternalScadeEquations.g:1445:2: ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) ) ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) otherlv_11= 'returns' ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' ) (otherlv_18= ';' )? ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )* otherlv_29= 'let' ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) )
            {
            // InternalScadeEquations.g:1445:2: ( () ( (lv_isUnsafe_1_0= 'unsafe' ) )? (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) ) ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) otherlv_11= 'returns' ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' ) (otherlv_18= ';' )? ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )* otherlv_29= 'let' ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? ) )
            // InternalScadeEquations.g:1446:3: () ( (lv_isUnsafe_1_0= 'unsafe' ) )? (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) ) ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) ) ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) otherlv_11= 'returns' ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' ) (otherlv_18= ';' )? ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )* otherlv_29= 'let' ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )* otherlv_34= 'tel' (otherlv_35= '.' | (otherlv_36= ';' )? )
            {
            // InternalScadeEquations.g:1446:3: ()
            // InternalScadeEquations.g:1447:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNodeDeclarationAccess().getNodeDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1456:3: ( (lv_isUnsafe_1_0= 'unsafe' ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==24) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalScadeEquations.g:1457:4: (lv_isUnsafe_1_0= 'unsafe' )
                    {
                    // InternalScadeEquations.g:1457:4: (lv_isUnsafe_1_0= 'unsafe' )
                    // InternalScadeEquations.g:1458:5: lv_isUnsafe_1_0= 'unsafe'
                    {
                    lv_isUnsafe_1_0=(Token)match(input,24,FollowSets000.FOLLOW_21); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_isUnsafe_1_0, grammarAccess.getNodeDeclarationAccess().getIsUnsafeUnsafeKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNodeDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "isUnsafe", lv_isUnsafe_1_0 != null, "unsafe");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:1470:3: (otherlv_2= 'function' | ( (lv_hasState_3_0= 'node' ) ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==26) ) {
                alt29=1;
            }
            else if ( (LA29_0==27) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalScadeEquations.g:1471:4: otherlv_2= 'function'
                    {
                    otherlv_2=(Token)match(input,26,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getNodeDeclarationAccess().getFunctionKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:1476:4: ( (lv_hasState_3_0= 'node' ) )
                    {
                    // InternalScadeEquations.g:1476:4: ( (lv_hasState_3_0= 'node' ) )
                    // InternalScadeEquations.g:1477:5: (lv_hasState_3_0= 'node' )
                    {
                    // InternalScadeEquations.g:1477:5: (lv_hasState_3_0= 'node' )
                    // InternalScadeEquations.g:1478:6: lv_hasState_3_0= 'node'
                    {
                    lv_hasState_3_0=(Token)match(input,27,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hasState_3_0, grammarAccess.getNodeDeclarationAccess().getHasStateNodeKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNodeDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "hasState", lv_hasState_3_0 != null, "node");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:1491:3: ( (lv_valuedObjects_4_0= ruleNodeValuedObject ) )
            // InternalScadeEquations.g:1492:4: (lv_valuedObjects_4_0= ruleNodeValuedObject )
            {
            // InternalScadeEquations.g:1492:4: (lv_valuedObjects_4_0= ruleNodeValuedObject )
            // InternalScadeEquations.g:1493:5: lv_valuedObjects_4_0= ruleNodeValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNodeDeclarationAccess().getValuedObjectsNodeValuedObjectParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_valuedObjects_4_0=ruleNodeValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.lustre.Lustre.NodeValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:1510:3: ( (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==17) ) {
                alt31=1;
            }
            else if ( (LA31_0==28) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalScadeEquations.g:1511:4: (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' )
                    {
                    // InternalScadeEquations.g:1511:4: (otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')' )
                    // InternalScadeEquations.g:1512:5: otherlv_5= '(' ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) ) (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getNodeDeclarationAccess().getLeftParenthesisKeyword_4_0_0());
                      				
                    }
                    // InternalScadeEquations.g:1516:5: ( (lv_inputs_6_0= ruleVariableDeclarationNoInit ) )
                    // InternalScadeEquations.g:1517:6: (lv_inputs_6_0= ruleVariableDeclarationNoInit )
                    {
                    // InternalScadeEquations.g:1517:6: (lv_inputs_6_0= ruleVariableDeclarationNoInit )
                    // InternalScadeEquations.g:1518:7: lv_inputs_6_0= ruleVariableDeclarationNoInit
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNodeDeclarationAccess().getInputsVariableDeclarationNoInitParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_inputs_6_0=ruleVariableDeclarationNoInit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"inputs",
                      								lv_inputs_6_0,
                      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:1535:5: (otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) ) )*
                    loop30:
                    do {
                        int alt30=2;
                        int LA30_0 = input.LA(1);

                        if ( (LA30_0==20) ) {
                            alt30=1;
                        }


                        switch (alt30) {
                    	case 1 :
                    	    // InternalScadeEquations.g:1536:6: otherlv_7= ';' ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) )
                    	    {
                    	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_4_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:1540:6: ( (lv_inputs_8_0= ruleVariableDeclarationNoInit ) )
                    	    // InternalScadeEquations.g:1541:7: (lv_inputs_8_0= ruleVariableDeclarationNoInit )
                    	    {
                    	    // InternalScadeEquations.g:1541:7: (lv_inputs_8_0= ruleVariableDeclarationNoInit )
                    	    // InternalScadeEquations.g:1542:8: lv_inputs_8_0= ruleVariableDeclarationNoInit
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getInputsVariableDeclarationNoInitParserRuleCall_4_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_inputs_8_0=ruleVariableDeclarationNoInit();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"inputs",
                    	      									lv_inputs_8_0,
                    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop30;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getNodeDeclarationAccess().getRightParenthesisKeyword_4_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:1566:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,28,FollowSets000.FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getNodeDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            otherlv_11=(Token)match(input,29,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getNodeDeclarationAccess().getReturnsKeyword_5());
              		
            }
            // InternalScadeEquations.g:1575:3: ( (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' ) | otherlv_17= '()' )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==17) ) {
                alt33=1;
            }
            else if ( (LA33_0==28) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalScadeEquations.g:1576:4: (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' )
                    {
                    // InternalScadeEquations.g:1576:4: (otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')' )
                    // InternalScadeEquations.g:1577:5: otherlv_12= '(' ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) ) (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )* otherlv_16= ')'
                    {
                    otherlv_12=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_12, grammarAccess.getNodeDeclarationAccess().getLeftParenthesisKeyword_6_0_0());
                      				
                    }
                    // InternalScadeEquations.g:1581:5: ( (lv_outputs_13_0= ruleVariableDeclarationNoInit ) )
                    // InternalScadeEquations.g:1582:6: (lv_outputs_13_0= ruleVariableDeclarationNoInit )
                    {
                    // InternalScadeEquations.g:1582:6: (lv_outputs_13_0= ruleVariableDeclarationNoInit )
                    // InternalScadeEquations.g:1583:7: lv_outputs_13_0= ruleVariableDeclarationNoInit
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getNodeDeclarationAccess().getOutputsVariableDeclarationNoInitParserRuleCall_6_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_23);
                    lv_outputs_13_0=ruleVariableDeclarationNoInit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"outputs",
                      								lv_outputs_13_0,
                      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:1600:5: (otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) ) )*
                    loop32:
                    do {
                        int alt32=2;
                        int LA32_0 = input.LA(1);

                        if ( (LA32_0==20) ) {
                            alt32=1;
                        }


                        switch (alt32) {
                    	case 1 :
                    	    // InternalScadeEquations.g:1601:6: otherlv_14= ';' ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) )
                    	    {
                    	    otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_14, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_6_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:1605:6: ( (lv_outputs_15_0= ruleVariableDeclarationNoInit ) )
                    	    // InternalScadeEquations.g:1606:7: (lv_outputs_15_0= ruleVariableDeclarationNoInit )
                    	    {
                    	    // InternalScadeEquations.g:1606:7: (lv_outputs_15_0= ruleVariableDeclarationNoInit )
                    	    // InternalScadeEquations.g:1607:8: lv_outputs_15_0= ruleVariableDeclarationNoInit
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getOutputsVariableDeclarationNoInitParserRuleCall_6_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_23);
                    	    lv_outputs_15_0=ruleVariableDeclarationNoInit();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"outputs",
                    	      									lv_outputs_15_0,
                    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop32;
                        }
                    } while (true);

                    otherlv_16=(Token)match(input,19,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_16, grammarAccess.getNodeDeclarationAccess().getRightParenthesisKeyword_6_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:1631:4: otherlv_17= '()'
                    {
                    otherlv_17=(Token)match(input,28,FollowSets000.FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getNodeDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_6_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:1636:3: (otherlv_18= ';' )?
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==20) ) {
                alt34=1;
            }
            switch (alt34) {
                case 1 :
                    // InternalScadeEquations.g:1637:4: otherlv_18= ';'
                    {
                    otherlv_18=(Token)match(input,20,FollowSets000.FOLLOW_32); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_7());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:1642:3: ( (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' ) | (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' ) )*
            loop39:
            do {
                int alt39=3;
                int LA39_0 = input.LA(1);

                if ( (LA39_0==33) ) {
                    alt39=1;
                }
                else if ( (LA39_0==34) ) {
                    alt39=2;
                }


                switch (alt39) {
            	case 1 :
            	    // InternalScadeEquations.g:1643:4: (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' )
            	    {
            	    // InternalScadeEquations.g:1643:4: (otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';' )
            	    // InternalScadeEquations.g:1644:5: otherlv_19= 'const' ( (lv_constants_20_0= ruleVariableDeclarationInit ) ) (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )* otherlv_23= ';'
            	    {
            	    otherlv_19=(Token)match(input,33,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_19, grammarAccess.getNodeDeclarationAccess().getConstKeyword_8_0_0());
            	      				
            	    }
            	    // InternalScadeEquations.g:1648:5: ( (lv_constants_20_0= ruleVariableDeclarationInit ) )
            	    // InternalScadeEquations.g:1649:6: (lv_constants_20_0= ruleVariableDeclarationInit )
            	    {
            	    // InternalScadeEquations.g:1649:6: (lv_constants_20_0= ruleVariableDeclarationInit )
            	    // InternalScadeEquations.g:1650:7: lv_constants_20_0= ruleVariableDeclarationInit
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getNodeDeclarationAccess().getConstantsVariableDeclarationInitParserRuleCall_8_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_constants_20_0=ruleVariableDeclarationInit();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	      							}
            	      							add(
            	      								current,
            	      								"constants",
            	      								lv_constants_20_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:1667:5: (otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) ) )*
            	    loop35:
            	    do {
            	        int alt35=2;
            	        int LA35_0 = input.LA(1);

            	        if ( (LA35_0==20) ) {
            	            int LA35_1 = input.LA(2);

            	            if ( (LA35_1==RULE_ID) ) {
            	                alt35=1;
            	            }


            	        }


            	        switch (alt35) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:1668:6: otherlv_21= ';' ( (lv_constants_22_0= ruleVariableDeclarationInit ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_21, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_8_0_2_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:1672:6: ( (lv_constants_22_0= ruleVariableDeclarationInit ) )
            	    	    // InternalScadeEquations.g:1673:7: (lv_constants_22_0= ruleVariableDeclarationInit )
            	    	    {
            	    	    // InternalScadeEquations.g:1673:7: (lv_constants_22_0= ruleVariableDeclarationInit )
            	    	    // InternalScadeEquations.g:1674:8: lv_constants_22_0= ruleVariableDeclarationInit
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getConstantsVariableDeclarationInitParserRuleCall_8_0_2_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_10);
            	    	    lv_constants_22_0=ruleVariableDeclarationInit();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"constants",
            	    	      									lv_constants_22_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop35;
            	        }
            	    } while (true);

            	    otherlv_23=(Token)match(input,20,FollowSets000.FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_23, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_8_0_3());
            	      				
            	    }

            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:1698:4: (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' )
            	    {
            	    // InternalScadeEquations.g:1698:4: (otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';' )
            	    // InternalScadeEquations.g:1699:5: otherlv_24= 'var' ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) ) (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )* otherlv_28= ';'
            	    {
            	    otherlv_24=(Token)match(input,34,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_24, grammarAccess.getNodeDeclarationAccess().getVarKeyword_8_1_0());
            	      				
            	    }
            	    // InternalScadeEquations.g:1703:5: ( ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) ) )
            	    // InternalScadeEquations.g:1704:6: ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) )
            	    {
            	    // InternalScadeEquations.g:1704:6: ( (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit ) )
            	    // InternalScadeEquations.g:1705:7: (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit )
            	    {
            	    // InternalScadeEquations.g:1705:7: (lv_variables_25_1= ruleVariableDeclarationInit | lv_variables_25_2= ruleVariableDeclarationNoInit )
            	    int alt36=2;
            	    int LA36_0 = input.LA(1);

            	    if ( (LA36_0==RULE_ID) ) {
            	        int LA36_1 = input.LA(2);

            	        if ( (synpred41_InternalScadeEquations()) ) {
            	            alt36=1;
            	        }
            	        else if ( (true) ) {
            	            alt36=2;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 36, 1, input);

            	            throw nvae;
            	        }
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 36, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt36) {
            	        case 1 :
            	            // InternalScadeEquations.g:1706:8: lv_variables_25_1= ruleVariableDeclarationInit
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_8_1_1_0_0());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_10);
            	            lv_variables_25_1=ruleVariableDeclarationInit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	              								}
            	              								add(
            	              									current,
            	              									"variables",
            	              									lv_variables_25_1,
            	              									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalScadeEquations.g:1722:8: lv_variables_25_2= ruleVariableDeclarationNoInit
            	            {
            	            if ( state.backtracking==0 ) {

            	              								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationNoInitParserRuleCall_8_1_1_0_1());
            	              							
            	            }
            	            pushFollow(FollowSets000.FOLLOW_10);
            	            lv_variables_25_2=ruleVariableDeclarationNoInit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              								if (current==null) {
            	              									current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	              								}
            	              								add(
            	              									current,
            	              									"variables",
            	              									lv_variables_25_2,
            	              									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
            	              								afterParserOrEnumRuleCall();
            	              							
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalScadeEquations.g:1740:5: (otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) ) )*
            	    loop38:
            	    do {
            	        int alt38=2;
            	        int LA38_0 = input.LA(1);

            	        if ( (LA38_0==20) ) {
            	            int LA38_1 = input.LA(2);

            	            if ( (LA38_1==RULE_ID) ) {
            	                alt38=1;
            	            }


            	        }


            	        switch (alt38) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:1741:6: otherlv_26= ';' ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) )
            	    	    {
            	    	    otherlv_26=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_26, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_8_1_2_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:1745:6: ( ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) ) )
            	    	    // InternalScadeEquations.g:1746:7: ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) )
            	    	    {
            	    	    // InternalScadeEquations.g:1746:7: ( (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit ) )
            	    	    // InternalScadeEquations.g:1747:8: (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit )
            	    	    {
            	    	    // InternalScadeEquations.g:1747:8: (lv_variables_27_1= ruleVariableDeclarationInit | lv_variables_27_2= ruleVariableDeclarationNoInit )
            	    	    int alt37=2;
            	    	    int LA37_0 = input.LA(1);

            	    	    if ( (LA37_0==RULE_ID) ) {
            	    	        int LA37_1 = input.LA(2);

            	    	        if ( (synpred42_InternalScadeEquations()) ) {
            	    	            alt37=1;
            	    	        }
            	    	        else if ( (true) ) {
            	    	            alt37=2;
            	    	        }
            	    	        else {
            	    	            if (state.backtracking>0) {state.failed=true; return current;}
            	    	            NoViableAltException nvae =
            	    	                new NoViableAltException("", 37, 1, input);

            	    	            throw nvae;
            	    	        }
            	    	    }
            	    	    else {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        NoViableAltException nvae =
            	    	            new NoViableAltException("", 37, 0, input);

            	    	        throw nvae;
            	    	    }
            	    	    switch (alt37) {
            	    	        case 1 :
            	    	            // InternalScadeEquations.g:1748:9: lv_variables_27_1= ruleVariableDeclarationInit
            	    	            {
            	    	            if ( state.backtracking==0 ) {

            	    	              									newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_8_1_2_1_0_0());
            	    	              								
            	    	            }
            	    	            pushFollow(FollowSets000.FOLLOW_10);
            	    	            lv_variables_27_1=ruleVariableDeclarationInit();

            	    	            state._fsp--;
            	    	            if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              									if (current==null) {
            	    	              										current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	    	              									}
            	    	              									add(
            	    	              										current,
            	    	              										"variables",
            	    	              										lv_variables_27_1,
            	    	              										"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	    	              									afterParserOrEnumRuleCall();
            	    	              								
            	    	            }

            	    	            }
            	    	            break;
            	    	        case 2 :
            	    	            // InternalScadeEquations.g:1764:9: lv_variables_27_2= ruleVariableDeclarationNoInit
            	    	            {
            	    	            if ( state.backtracking==0 ) {

            	    	              									newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationNoInitParserRuleCall_8_1_2_1_0_1());
            	    	              								
            	    	            }
            	    	            pushFollow(FollowSets000.FOLLOW_10);
            	    	            lv_variables_27_2=ruleVariableDeclarationNoInit();

            	    	            state._fsp--;
            	    	            if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              									if (current==null) {
            	    	              										current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	    	              									}
            	    	              									add(
            	    	              										current,
            	    	              										"variables",
            	    	              										lv_variables_27_2,
            	    	              										"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationNoInit");
            	    	              									afterParserOrEnumRuleCall();
            	    	              								
            	    	            }

            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop38;
            	        }
            	    } while (true);

            	    otherlv_28=(Token)match(input,20,FollowSets000.FOLLOW_32); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_28, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_8_1_3());
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop39;
                }
            } while (true);

            otherlv_29=(Token)match(input,35,FollowSets000.FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_29, grammarAccess.getNodeDeclarationAccess().getLetKeyword_9());
              		
            }
            // InternalScadeEquations.g:1793:3: ( ( (lv_equations_30_0= ruleEquation ) ) | ( (lv_emissions_31_0= ruleEmission ) ) | ( (lv_assertions_32_0= ruleAssertion ) ) | ( (lv_automatons_33_0= ruleAutomaton ) ) )*
            loop40:
            do {
                int alt40=5;
                switch ( input.LA(1) ) {
                case RULE_ID:
                case 17:
                    {
                    alt40=1;
                    }
                    break;
                case 39:
                    {
                    alt40=2;
                    }
                    break;
                case 40:
                    {
                    alt40=3;
                    }
                    break;
                case 41:
                    {
                    alt40=4;
                    }
                    break;

                }

                switch (alt40) {
            	case 1 :
            	    // InternalScadeEquations.g:1794:4: ( (lv_equations_30_0= ruleEquation ) )
            	    {
            	    // InternalScadeEquations.g:1794:4: ( (lv_equations_30_0= ruleEquation ) )
            	    // InternalScadeEquations.g:1795:5: (lv_equations_30_0= ruleEquation )
            	    {
            	    // InternalScadeEquations.g:1795:5: (lv_equations_30_0= ruleEquation )
            	    // InternalScadeEquations.g:1796:6: lv_equations_30_0= ruleEquation
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNodeDeclarationAccess().getEquationsEquationParserRuleCall_10_0_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_equations_30_0=ruleEquation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"equations",
            	      							lv_equations_30_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Equation");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:1814:4: ( (lv_emissions_31_0= ruleEmission ) )
            	    {
            	    // InternalScadeEquations.g:1814:4: ( (lv_emissions_31_0= ruleEmission ) )
            	    // InternalScadeEquations.g:1815:5: (lv_emissions_31_0= ruleEmission )
            	    {
            	    // InternalScadeEquations.g:1815:5: (lv_emissions_31_0= ruleEmission )
            	    // InternalScadeEquations.g:1816:6: lv_emissions_31_0= ruleEmission
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNodeDeclarationAccess().getEmissionsEmissionParserRuleCall_10_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_emissions_31_0=ruleEmission();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"emissions",
            	      							lv_emissions_31_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Emission");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalScadeEquations.g:1834:4: ( (lv_assertions_32_0= ruleAssertion ) )
            	    {
            	    // InternalScadeEquations.g:1834:4: ( (lv_assertions_32_0= ruleAssertion ) )
            	    // InternalScadeEquations.g:1835:5: (lv_assertions_32_0= ruleAssertion )
            	    {
            	    // InternalScadeEquations.g:1835:5: (lv_assertions_32_0= ruleAssertion )
            	    // InternalScadeEquations.g:1836:6: lv_assertions_32_0= ruleAssertion
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNodeDeclarationAccess().getAssertionsAssertionParserRuleCall_10_2_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_assertions_32_0=ruleAssertion();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"assertions",
            	      							lv_assertions_32_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Assertion");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalScadeEquations.g:1854:4: ( (lv_automatons_33_0= ruleAutomaton ) )
            	    {
            	    // InternalScadeEquations.g:1854:4: ( (lv_automatons_33_0= ruleAutomaton ) )
            	    // InternalScadeEquations.g:1855:5: (lv_automatons_33_0= ruleAutomaton )
            	    {
            	    // InternalScadeEquations.g:1855:5: (lv_automatons_33_0= ruleAutomaton )
            	    // InternalScadeEquations.g:1856:6: lv_automatons_33_0= ruleAutomaton
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNodeDeclarationAccess().getAutomatonsAutomatonParserRuleCall_10_3_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_33);
            	    lv_automatons_33_0=ruleAutomaton();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNodeDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"automatons",
            	      							lv_automatons_33_0,
            	      							"de.cau.cs.kieler.lustre.Lustre.Automaton");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            otherlv_34=(Token)match(input,36,FollowSets000.FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_34, grammarAccess.getNodeDeclarationAccess().getTelKeyword_11());
              		
            }
            // InternalScadeEquations.g:1878:3: (otherlv_35= '.' | (otherlv_36= ';' )? )
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==37) ) {
                alt42=1;
            }
            else if ( (LA42_0==EOF||LA42_0==20) ) {
                alt42=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 42, 0, input);

                throw nvae;
            }
            switch (alt42) {
                case 1 :
                    // InternalScadeEquations.g:1879:4: otherlv_35= '.'
                    {
                    otherlv_35=(Token)match(input,37,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getNodeDeclarationAccess().getFullStopKeyword_12_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:1884:4: (otherlv_36= ';' )?
                    {
                    // InternalScadeEquations.g:1884:4: (otherlv_36= ';' )?
                    int alt41=2;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==20) ) {
                        alt41=1;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalScadeEquations.g:1885:5: otherlv_36= ';'
                            {
                            otherlv_36=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_36, grammarAccess.getNodeDeclarationAccess().getSemicolonKeyword_12_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeDeclaration"


    // $ANTLR start "entryRuleNodeValuedObject"
    // InternalScadeEquations.g:1895:1: entryRuleNodeValuedObject returns [EObject current=null] : iv_ruleNodeValuedObject= ruleNodeValuedObject EOF ;
    public final EObject entryRuleNodeValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNodeValuedObject = null;


        try {
            // InternalScadeEquations.g:1895:57: (iv_ruleNodeValuedObject= ruleNodeValuedObject EOF )
            // InternalScadeEquations.g:1896:2: iv_ruleNodeValuedObject= ruleNodeValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNodeValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNodeValuedObject=ruleNodeValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNodeValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNodeValuedObject"


    // $ANTLR start "ruleNodeValuedObject"
    // InternalScadeEquations.g:1902:1: ruleNodeValuedObject returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleNodeValuedObject() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:1908:2: ( ( () ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalScadeEquations.g:1909:2: ( () ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalScadeEquations.g:1909:2: ( () ( (lv_name_1_0= RULE_ID ) ) )
            // InternalScadeEquations.g:1910:3: () ( (lv_name_1_0= RULE_ID ) )
            {
            // InternalScadeEquations.g:1910:3: ()
            // InternalScadeEquations.g:1911:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNodeValuedObjectAccess().getNodeValuedObjectAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1920:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalScadeEquations.g:1921:4: (lv_name_1_0= RULE_ID )
            {
            // InternalScadeEquations.g:1921:4: (lv_name_1_0= RULE_ID )
            // InternalScadeEquations.g:1922:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getNodeValuedObjectAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNodeValuedObjectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNodeValuedObject"


    // $ANTLR start "entryRuleEquation"
    // InternalScadeEquations.g:1942:1: entryRuleEquation returns [EObject current=null] : iv_ruleEquation= ruleEquation EOF ;
    public final EObject entryRuleEquation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEquation = null;


        try {
            // InternalScadeEquations.g:1942:49: (iv_ruleEquation= ruleEquation EOF )
            // InternalScadeEquations.g:1943:2: iv_ruleEquation= ruleEquation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEquationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEquation=ruleEquation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEquation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEquation"


    // $ANTLR start "ruleEquation"
    // InternalScadeEquations.g:1949:1: ruleEquation returns [EObject current=null] : ( () ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) ) ( (lv_operator_14_0= ruleAssignOperator ) ) ( (lv_expression_15_0= ruleExpression ) ) otherlv_16= ';' ( ( (lv_sequential_17_1= ';' | lv_sequential_17_2= 'seq' ) ) )? ) ;
    public final EObject ruleEquation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_16=null;
        Token lv_sequential_17_1=null;
        Token lv_sequential_17_2=null;
        EObject lv_references_2_0 = null;

        EObject lv_references_4_0 = null;

        EObject lv_references_6_0 = null;

        EObject lv_references_8_0 = null;

        EObject lv_references_10_0 = null;

        EObject lv_references_12_0 = null;

        EObject lv_reference_13_0 = null;

        Enumerator lv_operator_14_0 = null;

        EObject lv_expression_15_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:1955:2: ( ( () ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) ) ( (lv_operator_14_0= ruleAssignOperator ) ) ( (lv_expression_15_0= ruleExpression ) ) otherlv_16= ';' ( ( (lv_sequential_17_1= ';' | lv_sequential_17_2= 'seq' ) ) )? ) )
            // InternalScadeEquations.g:1956:2: ( () ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) ) ( (lv_operator_14_0= ruleAssignOperator ) ) ( (lv_expression_15_0= ruleExpression ) ) otherlv_16= ';' ( ( (lv_sequential_17_1= ';' | lv_sequential_17_2= 'seq' ) ) )? )
            {
            // InternalScadeEquations.g:1956:2: ( () ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) ) ( (lv_operator_14_0= ruleAssignOperator ) ) ( (lv_expression_15_0= ruleExpression ) ) otherlv_16= ';' ( ( (lv_sequential_17_1= ';' | lv_sequential_17_2= 'seq' ) ) )? )
            // InternalScadeEquations.g:1957:3: () ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) ) ( (lv_operator_14_0= ruleAssignOperator ) ) ( (lv_expression_15_0= ruleExpression ) ) otherlv_16= ';' ( ( (lv_sequential_17_1= ';' | lv_sequential_17_2= 'seq' ) ) )?
            {
            // InternalScadeEquations.g:1957:3: ()
            // InternalScadeEquations.g:1958:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEquationAccess().getEquationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:1967:3: ( (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' ) | ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) | ( (lv_reference_13_0= ruleValuedObjectReference ) ) )
            int alt45=3;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==17) ) {
                alt45=1;
            }
            else if ( (LA45_0==RULE_ID) ) {
                int LA45_2 = input.LA(2);

                if ( (synpred54_InternalScadeEquations()) ) {
                    alt45=2;
                }
                else if ( (true) ) {
                    alt45=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }
            switch (alt45) {
                case 1 :
                    // InternalScadeEquations.g:1968:4: (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' )
                    {
                    // InternalScadeEquations.g:1968:4: (otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')' )
                    // InternalScadeEquations.g:1969:5: otherlv_1= '(' ( (lv_references_2_0= ruleValuedObjectReference ) ) otherlv_3= ',' ( (lv_references_4_0= ruleValuedObjectReference ) ) (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )* otherlv_7= ')'
                    {
                    otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getEquationAccess().getLeftParenthesisKeyword_1_0_0());
                      				
                    }
                    // InternalScadeEquations.g:1973:5: ( (lv_references_2_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:1974:6: (lv_references_2_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:1974:6: (lv_references_2_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:1975:7: lv_references_2_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_references_2_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getEquationAccess().getCommaKeyword_1_0_2());
                      				
                    }
                    // InternalScadeEquations.g:1996:5: ( (lv_references_4_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:1997:6: (lv_references_4_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:1997:6: (lv_references_4_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:1998:7: lv_references_4_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_references_4_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:2015:5: (otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) ) )*
                    loop43:
                    do {
                        int alt43=2;
                        int LA43_0 = input.LA(1);

                        if ( (LA43_0==18) ) {
                            alt43=1;
                        }


                        switch (alt43) {
                    	case 1 :
                    	    // InternalScadeEquations.g:2016:6: otherlv_5= ',' ( (lv_references_6_0= ruleValuedObjectReference ) )
                    	    {
                    	    otherlv_5=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getEquationAccess().getCommaKeyword_1_0_4_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:2020:6: ( (lv_references_6_0= ruleValuedObjectReference ) )
                    	    // InternalScadeEquations.g:2021:7: (lv_references_6_0= ruleValuedObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:2021:7: (lv_references_6_0= ruleValuedObjectReference )
                    	    // InternalScadeEquations.g:2022:8: lv_references_6_0= ruleValuedObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_0_4_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_references_6_0=ruleValuedObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getEquationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"references",
                    	      									lv_references_6_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop43;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_7); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getEquationAccess().getRightParenthesisKeyword_1_0_5());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:2046:4: ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* )
                    {
                    // InternalScadeEquations.g:2046:4: ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* )
                    // InternalScadeEquations.g:2047:5: ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )*
                    {
                    // InternalScadeEquations.g:2047:5: ( (lv_references_8_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:2048:6: (lv_references_8_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:2048:6: (lv_references_8_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:2049:7: lv_references_8_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_5);
                    lv_references_8_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getEquationAccess().getCommaKeyword_1_1_1());
                      				
                    }
                    // InternalScadeEquations.g:2070:5: ( (lv_references_10_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:2071:6: (lv_references_10_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:2071:6: (lv_references_10_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:2072:7: lv_references_10_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_2_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_8);
                    lv_references_10_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getEquationRule());
                      							}
                      							add(
                      								current,
                      								"references",
                      								lv_references_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:2089:5: (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )*
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==18) ) {
                            alt44=1;
                        }


                        switch (alt44) {
                    	case 1 :
                    	    // InternalScadeEquations.g:2090:6: otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) )
                    	    {
                    	    otherlv_11=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_11, grammarAccess.getEquationAccess().getCommaKeyword_1_1_3_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:2094:6: ( (lv_references_12_0= ruleValuedObjectReference ) )
                    	    // InternalScadeEquations.g:2095:7: (lv_references_12_0= ruleValuedObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:2095:7: (lv_references_12_0= ruleValuedObjectReference )
                    	    // InternalScadeEquations.g:2096:8: lv_references_12_0= ruleValuedObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_3_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_8);
                    	    lv_references_12_0=ruleValuedObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getEquationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"references",
                    	      									lv_references_12_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop44;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:2116:4: ( (lv_reference_13_0= ruleValuedObjectReference ) )
                    {
                    // InternalScadeEquations.g:2116:4: ( (lv_reference_13_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:2117:5: (lv_reference_13_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:2117:5: (lv_reference_13_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:2118:6: lv_reference_13_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getEquationAccess().getReferenceValuedObjectReferenceParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_7);
                    lv_reference_13_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getEquationRule());
                      						}
                      						set(
                      							current,
                      							"reference",
                      							lv_reference_13_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:2136:3: ( (lv_operator_14_0= ruleAssignOperator ) )
            // InternalScadeEquations.g:2137:4: (lv_operator_14_0= ruleAssignOperator )
            {
            // InternalScadeEquations.g:2137:4: (lv_operator_14_0= ruleAssignOperator )
            // InternalScadeEquations.g:2138:5: lv_operator_14_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_operator_14_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_14_0,
              						"de.cau.cs.kieler.lustre.Lustre.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:2155:3: ( (lv_expression_15_0= ruleExpression ) )
            // InternalScadeEquations.g:2156:4: (lv_expression_15_0= ruleExpression )
            {
            // InternalScadeEquations.g:2156:4: (lv_expression_15_0= ruleExpression )
            // InternalScadeEquations.g:2157:5: lv_expression_15_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEquationAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_expression_15_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEquationRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_15_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_16=(Token)match(input,20,FollowSets000.FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_16, grammarAccess.getEquationAccess().getSemicolonKeyword_4());
              		
            }
            // InternalScadeEquations.g:2178:3: ( ( (lv_sequential_17_1= ';' | lv_sequential_17_2= 'seq' ) ) )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==20||LA47_0==38) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalScadeEquations.g:2179:4: ( (lv_sequential_17_1= ';' | lv_sequential_17_2= 'seq' ) )
                    {
                    // InternalScadeEquations.g:2179:4: ( (lv_sequential_17_1= ';' | lv_sequential_17_2= 'seq' ) )
                    // InternalScadeEquations.g:2180:5: (lv_sequential_17_1= ';' | lv_sequential_17_2= 'seq' )
                    {
                    // InternalScadeEquations.g:2180:5: (lv_sequential_17_1= ';' | lv_sequential_17_2= 'seq' )
                    int alt46=2;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==20) ) {
                        alt46=1;
                    }
                    else if ( (LA46_0==38) ) {
                        alt46=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 46, 0, input);

                        throw nvae;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalScadeEquations.g:2181:6: lv_sequential_17_1= ';'
                            {
                            lv_sequential_17_1=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_sequential_17_1, grammarAccess.getEquationAccess().getSequentialSemicolonKeyword_5_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEquationRule());
                              						}
                              						setWithLastConsumed(current, "sequential", lv_sequential_17_1 != null, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalScadeEquations.g:2192:6: lv_sequential_17_2= 'seq'
                            {
                            lv_sequential_17_2=(Token)match(input,38,FollowSets000.FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_sequential_17_2, grammarAccess.getEquationAccess().getSequentialSeqKeyword_5_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getEquationRule());
                              						}
                              						setWithLastConsumed(current, "sequential", lv_sequential_17_2 != null, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEquation"


    // $ANTLR start "entryRuleEmission"
    // InternalScadeEquations.g:2209:1: entryRuleEmission returns [EObject current=null] : iv_ruleEmission= ruleEmission EOF ;
    public final EObject entryRuleEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEmission = null;


        try {
            // InternalScadeEquations.g:2209:49: (iv_ruleEmission= ruleEmission EOF )
            // InternalScadeEquations.g:2210:2: iv_ruleEmission= ruleEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEmission=ruleEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEmission"


    // $ANTLR start "ruleEmission"
    // InternalScadeEquations.g:2216:1: ruleEmission returns [EObject current=null] : (otherlv_0= 'emit' (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission ) otherlv_3= ';' ) ;
    public final EObject ruleEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        EObject this_ValuedEmission_1 = null;

        EObject this_PureEmission_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2222:2: ( (otherlv_0= 'emit' (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission ) otherlv_3= ';' ) )
            // InternalScadeEquations.g:2223:2: (otherlv_0= 'emit' (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission ) otherlv_3= ';' )
            {
            // InternalScadeEquations.g:2223:2: (otherlv_0= 'emit' (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission ) otherlv_3= ';' )
            // InternalScadeEquations.g:2224:3: otherlv_0= 'emit' (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission ) otherlv_3= ';'
            {
            otherlv_0=(Token)match(input,39,FollowSets000.FOLLOW_36); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getEmissionAccess().getEmitKeyword_0());
              		
            }
            // InternalScadeEquations.g:2228:3: (this_ValuedEmission_1= ruleValuedEmission | this_PureEmission_2= rulePureEmission )
            int alt48=2;
            switch ( input.LA(1) ) {
            case RULE_COMMENT_ANNOTATION:
                {
                int LA48_1 = input.LA(2);

                if ( (synpred57_InternalScadeEquations()) ) {
                    alt48=1;
                }
                else if ( (true) ) {
                    alt48=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 1, input);

                    throw nvae;
                }
                }
                break;
            case 92:
                {
                int LA48_2 = input.LA(2);

                if ( (synpred57_InternalScadeEquations()) ) {
                    alt48=1;
                }
                else if ( (true) ) {
                    alt48=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_ID:
                {
                int LA48_3 = input.LA(2);

                if ( (synpred57_InternalScadeEquations()) ) {
                    alt48=1;
                }
                else if ( (true) ) {
                    alt48=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 48, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 48, 0, input);

                throw nvae;
            }

            switch (alt48) {
                case 1 :
                    // InternalScadeEquations.g:2229:4: this_ValuedEmission_1= ruleValuedEmission
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getEmissionAccess().getValuedEmissionParserRuleCall_1_0());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_10);
                    this_ValuedEmission_1=ruleValuedEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedEmission_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:2241:4: this_PureEmission_2= rulePureEmission
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getEmissionAccess().getPureEmissionParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_10);
                    this_PureEmission_2=rulePureEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_PureEmission_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getEmissionAccess().getSemicolonKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEmission"


    // $ANTLR start "entryRuleAssertion"
    // InternalScadeEquations.g:2261:1: entryRuleAssertion returns [EObject current=null] : iv_ruleAssertion= ruleAssertion EOF ;
    public final EObject entryRuleAssertion() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssertion = null;


        try {
            // InternalScadeEquations.g:2261:50: (iv_ruleAssertion= ruleAssertion EOF )
            // InternalScadeEquations.g:2262:2: iv_ruleAssertion= ruleAssertion EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssertionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssertion=ruleAssertion();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssertion; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssertion"


    // $ANTLR start "ruleAssertion"
    // InternalScadeEquations.g:2268:1: ruleAssertion returns [EObject current=null] : ( () otherlv_1= 'assert' ( (lv_expr_2_0= ruleExpression ) ) otherlv_3= ';' ) ;
    public final EObject ruleAssertion() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_expr_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2274:2: ( ( () otherlv_1= 'assert' ( (lv_expr_2_0= ruleExpression ) ) otherlv_3= ';' ) )
            // InternalScadeEquations.g:2275:2: ( () otherlv_1= 'assert' ( (lv_expr_2_0= ruleExpression ) ) otherlv_3= ';' )
            {
            // InternalScadeEquations.g:2275:2: ( () otherlv_1= 'assert' ( (lv_expr_2_0= ruleExpression ) ) otherlv_3= ';' )
            // InternalScadeEquations.g:2276:3: () otherlv_1= 'assert' ( (lv_expr_2_0= ruleExpression ) ) otherlv_3= ';'
            {
            // InternalScadeEquations.g:2276:3: ()
            // InternalScadeEquations.g:2277:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getAssertionAccess().getAssertionAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,40,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAssertionAccess().getAssertKeyword_1());
              		
            }
            // InternalScadeEquations.g:2290:3: ( (lv_expr_2_0= ruleExpression ) )
            // InternalScadeEquations.g:2291:4: (lv_expr_2_0= ruleExpression )
            {
            // InternalScadeEquations.g:2291:4: (lv_expr_2_0= ruleExpression )
            // InternalScadeEquations.g:2292:5: lv_expr_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssertionAccess().getExprExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_expr_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssertionRule());
              					}
              					set(
              						current,
              						"expr",
              						lv_expr_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_3=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getAssertionAccess().getSemicolonKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssertion"


    // $ANTLR start "entryRuleAutomaton"
    // InternalScadeEquations.g:2317:1: entryRuleAutomaton returns [EObject current=null] : iv_ruleAutomaton= ruleAutomaton EOF ;
    public final EObject entryRuleAutomaton() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAutomaton = null;


        try {
            // InternalScadeEquations.g:2317:50: (iv_ruleAutomaton= ruleAutomaton EOF )
            // InternalScadeEquations.g:2318:2: iv_ruleAutomaton= ruleAutomaton EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAutomatonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAutomaton=ruleAutomaton();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAutomaton; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAutomaton"


    // $ANTLR start "ruleAutomaton"
    // InternalScadeEquations.g:2324:1: ruleAutomaton returns [EObject current=null] : (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) ( (lv_states_2_0= ruleAState ) ) ( (lv_states_3_0= ruleAState ) )* otherlv_4= 'returns' otherlv_5= '..' otherlv_6= ';' ) ;
    public final EObject ruleAutomaton() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_name_1_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        EObject lv_states_2_0 = null;

        EObject lv_states_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2330:2: ( (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) ( (lv_states_2_0= ruleAState ) ) ( (lv_states_3_0= ruleAState ) )* otherlv_4= 'returns' otherlv_5= '..' otherlv_6= ';' ) )
            // InternalScadeEquations.g:2331:2: (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) ( (lv_states_2_0= ruleAState ) ) ( (lv_states_3_0= ruleAState ) )* otherlv_4= 'returns' otherlv_5= '..' otherlv_6= ';' )
            {
            // InternalScadeEquations.g:2331:2: (otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) ( (lv_states_2_0= ruleAState ) ) ( (lv_states_3_0= ruleAState ) )* otherlv_4= 'returns' otherlv_5= '..' otherlv_6= ';' )
            // InternalScadeEquations.g:2332:3: otherlv_0= 'automaton' ( (lv_name_1_0= RULE_ID ) ) ( (lv_states_2_0= ruleAState ) ) ( (lv_states_3_0= ruleAState ) )* otherlv_4= 'returns' otherlv_5= '..' otherlv_6= ';'
            {
            otherlv_0=(Token)match(input,41,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getAutomatonAccess().getAutomatonKeyword_0());
              		
            }
            // InternalScadeEquations.g:2336:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalScadeEquations.g:2337:4: (lv_name_1_0= RULE_ID )
            {
            // InternalScadeEquations.g:2337:4: (lv_name_1_0= RULE_ID )
            // InternalScadeEquations.g:2338:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getAutomatonAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAutomatonRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }

            // InternalScadeEquations.g:2354:3: ( (lv_states_2_0= ruleAState ) )
            // InternalScadeEquations.g:2355:4: (lv_states_2_0= ruleAState )
            {
            // InternalScadeEquations.g:2355:4: (lv_states_2_0= ruleAState )
            // InternalScadeEquations.g:2356:5: lv_states_2_0= ruleAState
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAutomatonAccess().getStatesAStateParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_38);
            lv_states_2_0=ruleAState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAutomatonRule());
              					}
              					add(
              						current,
              						"states",
              						lv_states_2_0,
              						"de.cau.cs.kieler.lustre.Lustre.AState");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:2373:3: ( (lv_states_3_0= ruleAState ) )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( ((LA49_0>=43 && LA49_0<=44)) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalScadeEquations.g:2374:4: (lv_states_3_0= ruleAState )
            	    {
            	    // InternalScadeEquations.g:2374:4: (lv_states_3_0= ruleAState )
            	    // InternalScadeEquations.g:2375:5: lv_states_3_0= ruleAState
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAutomatonAccess().getStatesAStateParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_38);
            	    lv_states_3_0=ruleAState();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAutomatonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"states",
            	      						lv_states_3_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.AState");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            otherlv_4=(Token)match(input,29,FollowSets000.FOLLOW_39); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getAutomatonAccess().getReturnsKeyword_4());
              		
            }
            otherlv_5=(Token)match(input,42,FollowSets000.FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getAutomatonAccess().getFullStopFullStopKeyword_5());
              		
            }
            otherlv_6=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getAutomatonAccess().getSemicolonKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAutomaton"


    // $ANTLR start "entryRuleAState"
    // InternalScadeEquations.g:2408:1: entryRuleAState returns [EObject current=null] : iv_ruleAState= ruleAState EOF ;
    public final EObject entryRuleAState() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAState = null;


        try {
            // InternalScadeEquations.g:2408:47: (iv_ruleAState= ruleAState EOF )
            // InternalScadeEquations.g:2409:2: iv_ruleAState= ruleAState EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAStateRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAState=ruleAState();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAState; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAState"


    // $ANTLR start "ruleAState"
    // InternalScadeEquations.g:2415:1: ruleAState returns [EObject current=null] : ( ( (lv_initial_0_0= 'initial' ) )? otherlv_1= 'state' ( (lv_valuedObject_2_0= ruleStateValuedObject ) ) ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )* (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )? (otherlv_19= '.' | (otherlv_20= ';' )? ) ( (lv_transitions_21_0= ruleATransition ) )* ) ;
    public final EObject ruleAState() throws RecognitionException {
        EObject current = null;

        Token lv_initial_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        EObject lv_valuedObject_2_0 = null;

        EObject lv_constants_4_0 = null;

        EObject lv_constants_6_0 = null;

        EObject lv_variables_9_0 = null;

        EObject lv_variables_11_0 = null;

        EObject lv_equations_14_0 = null;

        EObject lv_emissions_15_0 = null;

        EObject lv_assertions_16_0 = null;

        EObject lv_automatons_17_0 = null;

        EObject lv_transitions_21_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2421:2: ( ( ( (lv_initial_0_0= 'initial' ) )? otherlv_1= 'state' ( (lv_valuedObject_2_0= ruleStateValuedObject ) ) ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )* (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )? (otherlv_19= '.' | (otherlv_20= ';' )? ) ( (lv_transitions_21_0= ruleATransition ) )* ) )
            // InternalScadeEquations.g:2422:2: ( ( (lv_initial_0_0= 'initial' ) )? otherlv_1= 'state' ( (lv_valuedObject_2_0= ruleStateValuedObject ) ) ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )* (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )? (otherlv_19= '.' | (otherlv_20= ';' )? ) ( (lv_transitions_21_0= ruleATransition ) )* )
            {
            // InternalScadeEquations.g:2422:2: ( ( (lv_initial_0_0= 'initial' ) )? otherlv_1= 'state' ( (lv_valuedObject_2_0= ruleStateValuedObject ) ) ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )* (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )? (otherlv_19= '.' | (otherlv_20= ';' )? ) ( (lv_transitions_21_0= ruleATransition ) )* )
            // InternalScadeEquations.g:2423:3: ( (lv_initial_0_0= 'initial' ) )? otherlv_1= 'state' ( (lv_valuedObject_2_0= ruleStateValuedObject ) ) ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )* (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )? (otherlv_19= '.' | (otherlv_20= ';' )? ) ( (lv_transitions_21_0= ruleATransition ) )*
            {
            // InternalScadeEquations.g:2423:3: ( (lv_initial_0_0= 'initial' ) )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==43) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalScadeEquations.g:2424:4: (lv_initial_0_0= 'initial' )
                    {
                    // InternalScadeEquations.g:2424:4: (lv_initial_0_0= 'initial' )
                    // InternalScadeEquations.g:2425:5: lv_initial_0_0= 'initial'
                    {
                    lv_initial_0_0=(Token)match(input,43,FollowSets000.FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_initial_0_0, grammarAccess.getAStateAccess().getInitialInitialKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAStateRule());
                      					}
                      					setWithLastConsumed(current, "initial", lv_initial_0_0 != null, "initial");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_1=(Token)match(input,44,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAStateAccess().getStateKeyword_1());
              		
            }
            // InternalScadeEquations.g:2441:3: ( (lv_valuedObject_2_0= ruleStateValuedObject ) )
            // InternalScadeEquations.g:2442:4: (lv_valuedObject_2_0= ruleStateValuedObject )
            {
            // InternalScadeEquations.g:2442:4: (lv_valuedObject_2_0= ruleStateValuedObject )
            // InternalScadeEquations.g:2443:5: lv_valuedObject_2_0= ruleStateValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAStateAccess().getValuedObjectStateValuedObjectParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_41);
            lv_valuedObject_2_0=ruleStateValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAStateRule());
              					}
              					set(
              						current,
              						"valuedObject",
              						lv_valuedObject_2_0,
              						"de.cau.cs.kieler.lustre.Lustre.StateValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:2460:3: ( (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* ) | (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' ) )*
            loop53:
            do {
                int alt53=3;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==33) ) {
                    alt53=1;
                }
                else if ( (LA53_0==34) ) {
                    alt53=2;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalScadeEquations.g:2461:4: (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* )
            	    {
            	    // InternalScadeEquations.g:2461:4: (otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )* )
            	    // InternalScadeEquations.g:2462:5: otherlv_3= 'const' ( (lv_constants_4_0= ruleVariableDeclarationInit ) ) otherlv_5= ';' ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )*
            	    {
            	    otherlv_3=(Token)match(input,33,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_3, grammarAccess.getAStateAccess().getConstKeyword_3_0_0());
            	      				
            	    }
            	    // InternalScadeEquations.g:2466:5: ( (lv_constants_4_0= ruleVariableDeclarationInit ) )
            	    // InternalScadeEquations.g:2467:6: (lv_constants_4_0= ruleVariableDeclarationInit )
            	    {
            	    // InternalScadeEquations.g:2467:6: (lv_constants_4_0= ruleVariableDeclarationInit )
            	    // InternalScadeEquations.g:2468:7: lv_constants_4_0= ruleVariableDeclarationInit
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getAStateAccess().getConstantsVariableDeclarationInitParserRuleCall_3_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_constants_4_0=ruleVariableDeclarationInit();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getAStateRule());
            	      							}
            	      							add(
            	      								current,
            	      								"constants",
            	      								lv_constants_4_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    otherlv_5=(Token)match(input,20,FollowSets000.FOLLOW_42); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_5, grammarAccess.getAStateAccess().getSemicolonKeyword_3_0_2());
            	      				
            	    }
            	    // InternalScadeEquations.g:2489:5: ( ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';' )*
            	    loop51:
            	    do {
            	        int alt51=2;
            	        int LA51_0 = input.LA(1);

            	        if ( (LA51_0==RULE_ID) ) {
            	            alt51=1;
            	        }


            	        switch (alt51) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:2490:6: ( (lv_constants_6_0= ruleVariableDeclarationInit ) ) otherlv_7= ';'
            	    	    {
            	    	    // InternalScadeEquations.g:2490:6: ( (lv_constants_6_0= ruleVariableDeclarationInit ) )
            	    	    // InternalScadeEquations.g:2491:7: (lv_constants_6_0= ruleVariableDeclarationInit )
            	    	    {
            	    	    // InternalScadeEquations.g:2491:7: (lv_constants_6_0= ruleVariableDeclarationInit )
            	    	    // InternalScadeEquations.g:2492:8: lv_constants_6_0= ruleVariableDeclarationInit
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getAStateAccess().getConstantsVariableDeclarationInitParserRuleCall_3_0_3_0_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_10);
            	    	    lv_constants_6_0=ruleVariableDeclarationInit();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getAStateRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"constants",
            	    	      									lv_constants_6_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }

            	    	    otherlv_7=(Token)match(input,20,FollowSets000.FOLLOW_42); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_7, grammarAccess.getAStateAccess().getSemicolonKeyword_3_0_3_1());
            	    	      					
            	    	    }

            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop51;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:2516:4: (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' )
            	    {
            	    // InternalScadeEquations.g:2516:4: (otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';' )
            	    // InternalScadeEquations.g:2517:5: otherlv_8= 'var' ( (lv_variables_9_0= ruleVariableDeclarationInit ) ) (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )* otherlv_12= ';'
            	    {
            	    otherlv_8=(Token)match(input,34,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_8, grammarAccess.getAStateAccess().getVarKeyword_3_1_0());
            	      				
            	    }
            	    // InternalScadeEquations.g:2521:5: ( (lv_variables_9_0= ruleVariableDeclarationInit ) )
            	    // InternalScadeEquations.g:2522:6: (lv_variables_9_0= ruleVariableDeclarationInit )
            	    {
            	    // InternalScadeEquations.g:2522:6: (lv_variables_9_0= ruleVariableDeclarationInit )
            	    // InternalScadeEquations.g:2523:7: lv_variables_9_0= ruleVariableDeclarationInit
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getAStateAccess().getVariablesVariableDeclarationInitParserRuleCall_3_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_10);
            	    lv_variables_9_0=ruleVariableDeclarationInit();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getAStateRule());
            	      							}
            	      							add(
            	      								current,
            	      								"variables",
            	      								lv_variables_9_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:2540:5: (otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) ) )*
            	    loop52:
            	    do {
            	        int alt52=2;
            	        int LA52_0 = input.LA(1);

            	        if ( (LA52_0==20) ) {
            	            int LA52_1 = input.LA(2);

            	            if ( (LA52_1==RULE_ID) ) {
            	                alt52=1;
            	            }


            	        }


            	        switch (alt52) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:2541:6: otherlv_10= ';' ( (lv_variables_11_0= ruleVariableDeclarationInit ) )
            	    	    {
            	    	    otherlv_10=(Token)match(input,20,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_10, grammarAccess.getAStateAccess().getSemicolonKeyword_3_1_2_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:2545:6: ( (lv_variables_11_0= ruleVariableDeclarationInit ) )
            	    	    // InternalScadeEquations.g:2546:7: (lv_variables_11_0= ruleVariableDeclarationInit )
            	    	    {
            	    	    // InternalScadeEquations.g:2546:7: (lv_variables_11_0= ruleVariableDeclarationInit )
            	    	    // InternalScadeEquations.g:2547:8: lv_variables_11_0= ruleVariableDeclarationInit
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getAStateAccess().getVariablesVariableDeclarationInitParserRuleCall_3_1_2_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_10);
            	    	    lv_variables_11_0=ruleVariableDeclarationInit();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getAStateRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"variables",
            	    	      									lv_variables_11_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.VariableDeclarationInit");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop52;
            	        }
            	    } while (true);

            	    otherlv_12=(Token)match(input,20,FollowSets000.FOLLOW_41); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_12, grammarAccess.getAStateAccess().getSemicolonKeyword_3_1_3());
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            // InternalScadeEquations.g:2571:3: (otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel' )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==35) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // InternalScadeEquations.g:2572:4: otherlv_13= 'let' ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )* otherlv_18= 'tel'
                    {
                    otherlv_13=(Token)match(input,35,FollowSets000.FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getAStateAccess().getLetKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:2576:4: ( ( (lv_equations_14_0= ruleEquation ) ) | ( (lv_emissions_15_0= ruleEmission ) ) | ( (lv_assertions_16_0= ruleAssertion ) ) | ( (lv_automatons_17_0= ruleAutomaton ) ) )*
                    loop54:
                    do {
                        int alt54=5;
                        switch ( input.LA(1) ) {
                        case RULE_ID:
                        case 17:
                            {
                            alt54=1;
                            }
                            break;
                        case 39:
                            {
                            alt54=2;
                            }
                            break;
                        case 40:
                            {
                            alt54=3;
                            }
                            break;
                        case 41:
                            {
                            alt54=4;
                            }
                            break;

                        }

                        switch (alt54) {
                    	case 1 :
                    	    // InternalScadeEquations.g:2577:5: ( (lv_equations_14_0= ruleEquation ) )
                    	    {
                    	    // InternalScadeEquations.g:2577:5: ( (lv_equations_14_0= ruleEquation ) )
                    	    // InternalScadeEquations.g:2578:6: (lv_equations_14_0= ruleEquation )
                    	    {
                    	    // InternalScadeEquations.g:2578:6: (lv_equations_14_0= ruleEquation )
                    	    // InternalScadeEquations.g:2579:7: lv_equations_14_0= ruleEquation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAStateAccess().getEquationsEquationParserRuleCall_4_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_equations_14_0=ruleEquation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"equations",
                    	      								lv_equations_14_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Equation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalScadeEquations.g:2597:5: ( (lv_emissions_15_0= ruleEmission ) )
                    	    {
                    	    // InternalScadeEquations.g:2597:5: ( (lv_emissions_15_0= ruleEmission ) )
                    	    // InternalScadeEquations.g:2598:6: (lv_emissions_15_0= ruleEmission )
                    	    {
                    	    // InternalScadeEquations.g:2598:6: (lv_emissions_15_0= ruleEmission )
                    	    // InternalScadeEquations.g:2599:7: lv_emissions_15_0= ruleEmission
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAStateAccess().getEmissionsEmissionParserRuleCall_4_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_emissions_15_0=ruleEmission();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"emissions",
                    	      								lv_emissions_15_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Emission");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalScadeEquations.g:2617:5: ( (lv_assertions_16_0= ruleAssertion ) )
                    	    {
                    	    // InternalScadeEquations.g:2617:5: ( (lv_assertions_16_0= ruleAssertion ) )
                    	    // InternalScadeEquations.g:2618:6: (lv_assertions_16_0= ruleAssertion )
                    	    {
                    	    // InternalScadeEquations.g:2618:6: (lv_assertions_16_0= ruleAssertion )
                    	    // InternalScadeEquations.g:2619:7: lv_assertions_16_0= ruleAssertion
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAStateAccess().getAssertionsAssertionParserRuleCall_4_1_2_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_assertions_16_0=ruleAssertion();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assertions",
                    	      								lv_assertions_16_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Assertion");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalScadeEquations.g:2637:5: ( (lv_automatons_17_0= ruleAutomaton ) )
                    	    {
                    	    // InternalScadeEquations.g:2637:5: ( (lv_automatons_17_0= ruleAutomaton ) )
                    	    // InternalScadeEquations.g:2638:6: (lv_automatons_17_0= ruleAutomaton )
                    	    {
                    	    // InternalScadeEquations.g:2638:6: (lv_automatons_17_0= ruleAutomaton )
                    	    // InternalScadeEquations.g:2639:7: lv_automatons_17_0= ruleAutomaton
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAStateAccess().getAutomatonsAutomatonParserRuleCall_4_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_33);
                    	    lv_automatons_17_0=ruleAutomaton();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAStateRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"automatons",
                    	      								lv_automatons_17_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Automaton");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop54;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,36,FollowSets000.FOLLOW_43); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getAStateAccess().getTelKeyword_4_2());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:2662:3: (otherlv_19= '.' | (otherlv_20= ';' )? )
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( (LA57_0==37) ) {
                alt57=1;
            }
            else if ( (LA57_0==EOF||LA57_0==20||LA57_0==29||(LA57_0>=43 && LA57_0<=46)) ) {
                alt57=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 57, 0, input);

                throw nvae;
            }
            switch (alt57) {
                case 1 :
                    // InternalScadeEquations.g:2663:4: otherlv_19= '.'
                    {
                    otherlv_19=(Token)match(input,37,FollowSets000.FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getAStateAccess().getFullStopKeyword_5_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:2668:4: (otherlv_20= ';' )?
                    {
                    // InternalScadeEquations.g:2668:4: (otherlv_20= ';' )?
                    int alt56=2;
                    int LA56_0 = input.LA(1);

                    if ( (LA56_0==20) ) {
                        alt56=1;
                    }
                    switch (alt56) {
                        case 1 :
                            // InternalScadeEquations.g:2669:5: otherlv_20= ';'
                            {
                            otherlv_20=(Token)match(input,20,FollowSets000.FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_20, grammarAccess.getAStateAccess().getSemicolonKeyword_5_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:2675:3: ( (lv_transitions_21_0= ruleATransition ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( ((LA58_0>=45 && LA58_0<=46)) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalScadeEquations.g:2676:4: (lv_transitions_21_0= ruleATransition )
            	    {
            	    // InternalScadeEquations.g:2676:4: (lv_transitions_21_0= ruleATransition )
            	    // InternalScadeEquations.g:2677:5: lv_transitions_21_0= ruleATransition
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAStateAccess().getTransitionsATransitionParserRuleCall_6_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_44);
            	    lv_transitions_21_0=ruleATransition();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAStateRule());
            	      					}
            	      					add(
            	      						current,
            	      						"transitions",
            	      						lv_transitions_21_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.ATransition");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAState"


    // $ANTLR start "entryRuleStateValuedObject"
    // InternalScadeEquations.g:2698:1: entryRuleStateValuedObject returns [EObject current=null] : iv_ruleStateValuedObject= ruleStateValuedObject EOF ;
    public final EObject entryRuleStateValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStateValuedObject = null;


        try {
            // InternalScadeEquations.g:2698:58: (iv_ruleStateValuedObject= ruleStateValuedObject EOF )
            // InternalScadeEquations.g:2699:2: iv_ruleStateValuedObject= ruleStateValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStateValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStateValuedObject=ruleStateValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStateValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStateValuedObject"


    // $ANTLR start "ruleStateValuedObject"
    // InternalScadeEquations.g:2705:1: ruleStateValuedObject returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) ) ) ;
    public final EObject ruleStateValuedObject() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:2711:2: ( ( () ( (lv_name_1_0= RULE_ID ) ) ) )
            // InternalScadeEquations.g:2712:2: ( () ( (lv_name_1_0= RULE_ID ) ) )
            {
            // InternalScadeEquations.g:2712:2: ( () ( (lv_name_1_0= RULE_ID ) ) )
            // InternalScadeEquations.g:2713:3: () ( (lv_name_1_0= RULE_ID ) )
            {
            // InternalScadeEquations.g:2713:3: ()
            // InternalScadeEquations.g:2714:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getStateValuedObjectAccess().getStateValuedObjectAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:2723:3: ( (lv_name_1_0= RULE_ID ) )
            // InternalScadeEquations.g:2724:4: (lv_name_1_0= RULE_ID )
            {
            // InternalScadeEquations.g:2724:4: (lv_name_1_0= RULE_ID )
            // InternalScadeEquations.g:2725:5: lv_name_1_0= RULE_ID
            {
            lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_1_0, grammarAccess.getStateValuedObjectAccess().getNameIDTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getStateValuedObjectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ID");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStateValuedObject"


    // $ANTLR start "entryRuleATransition"
    // InternalScadeEquations.g:2745:1: entryRuleATransition returns [EObject current=null] : iv_ruleATransition= ruleATransition EOF ;
    public final EObject entryRuleATransition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleATransition = null;


        try {
            // InternalScadeEquations.g:2745:52: (iv_ruleATransition= ruleATransition EOF )
            // InternalScadeEquations.g:2746:2: iv_ruleATransition= ruleATransition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getATransitionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleATransition=ruleATransition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleATransition; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleATransition"


    // $ANTLR start "ruleATransition"
    // InternalScadeEquations.g:2752:1: ruleATransition returns [EObject current=null] : ( () (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) ) ( (lv_actions_3_0= ruleAnAction ) )* ) ;
    public final EObject ruleATransition() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_strong_2_0=null;
        EObject lv_actions_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2758:2: ( ( () (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) ) ( (lv_actions_3_0= ruleAnAction ) )* ) )
            // InternalScadeEquations.g:2759:2: ( () (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) ) ( (lv_actions_3_0= ruleAnAction ) )* )
            {
            // InternalScadeEquations.g:2759:2: ( () (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) ) ( (lv_actions_3_0= ruleAnAction ) )* )
            // InternalScadeEquations.g:2760:3: () (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) ) ( (lv_actions_3_0= ruleAnAction ) )*
            {
            // InternalScadeEquations.g:2760:3: ()
            // InternalScadeEquations.g:2761:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getATransitionAccess().getATransitionAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:2770:3: (otherlv_1= 'until' | ( (lv_strong_2_0= 'unless' ) ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==45) ) {
                alt59=1;
            }
            else if ( (LA59_0==46) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalScadeEquations.g:2771:4: otherlv_1= 'until'
                    {
                    otherlv_1=(Token)match(input,45,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getATransitionAccess().getUntilKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:2776:4: ( (lv_strong_2_0= 'unless' ) )
                    {
                    // InternalScadeEquations.g:2776:4: ( (lv_strong_2_0= 'unless' ) )
                    // InternalScadeEquations.g:2777:5: (lv_strong_2_0= 'unless' )
                    {
                    // InternalScadeEquations.g:2777:5: (lv_strong_2_0= 'unless' )
                    // InternalScadeEquations.g:2778:6: lv_strong_2_0= 'unless'
                    {
                    lv_strong_2_0=(Token)match(input,46,FollowSets000.FOLLOW_45); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_strong_2_0, grammarAccess.getATransitionAccess().getStrongUnlessKeyword_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getATransitionRule());
                      						}
                      						setWithLastConsumed(current, "strong", lv_strong_2_0 != null, "unless");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:2791:3: ( (lv_actions_3_0= ruleAnAction ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=47 && LA60_0<=50)) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalScadeEquations.g:2792:4: (lv_actions_3_0= ruleAnAction )
            	    {
            	    // InternalScadeEquations.g:2792:4: (lv_actions_3_0= ruleAnAction )
            	    // InternalScadeEquations.g:2793:5: lv_actions_3_0= ruleAnAction
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getATransitionAccess().getActionsAnActionParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_45);
            	    lv_actions_3_0=ruleAnAction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getATransitionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_3_0,
            	      						"de.cau.cs.kieler.lustre.Lustre.AnAction");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleATransition"


    // $ANTLR start "entryRuleAnAction"
    // InternalScadeEquations.g:2814:1: entryRuleAnAction returns [EObject current=null] : iv_ruleAnAction= ruleAnAction EOF ;
    public final EObject entryRuleAnAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnAction = null;


        try {
            // InternalScadeEquations.g:2814:49: (iv_ruleAnAction= ruleAnAction EOF )
            // InternalScadeEquations.g:2815:2: iv_ruleAnAction= ruleAnAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnActionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnAction=ruleAnAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnAction; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnAction"


    // $ANTLR start "ruleAnAction"
    // InternalScadeEquations.g:2821:1: ruleAnAction returns [EObject current=null] : ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )? (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )? (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) ) ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' ) ;
    public final EObject ruleAnAction() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token lv_history_6_0=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_condition_1_0 = null;

        EObject lv_effects_3_0 = null;

        EObject lv_effects_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2827:2: ( ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )? (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )? (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) ) ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' ) )
            // InternalScadeEquations.g:2828:2: ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )? (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )? (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) ) ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' )
            {
            // InternalScadeEquations.g:2828:2: ( (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )? (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )? (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) ) ( (otherlv_7= RULE_ID ) ) otherlv_8= ';' )
            // InternalScadeEquations.g:2829:3: (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )? (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )? (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) ) ( (otherlv_7= RULE_ID ) ) otherlv_8= ';'
            {
            // InternalScadeEquations.g:2829:3: (otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==47) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalScadeEquations.g:2830:4: otherlv_0= 'if' ( (lv_condition_1_0= ruleBoolExpression ) )
                    {
                    otherlv_0=(Token)match(input,47,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getAnActionAccess().getIfKeyword_0_0());
                      			
                    }
                    // InternalScadeEquations.g:2834:4: ( (lv_condition_1_0= ruleBoolExpression ) )
                    // InternalScadeEquations.g:2835:5: (lv_condition_1_0= ruleBoolExpression )
                    {
                    // InternalScadeEquations.g:2835:5: (lv_condition_1_0= ruleBoolExpression )
                    // InternalScadeEquations.g:2836:6: lv_condition_1_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnActionAccess().getConditionBoolExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_46);
                    lv_condition_1_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnActionRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.BoolExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:2854:3: (otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )* )?
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==48) ) {
                alt63=1;
            }
            switch (alt63) {
                case 1 :
                    // InternalScadeEquations.g:2855:4: otherlv_2= 'do' ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )*
                    {
                    otherlv_2=(Token)match(input,48,FollowSets000.FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAnActionAccess().getDoKeyword_1_0());
                      			
                    }
                    // InternalScadeEquations.g:2859:4: ( ( (lv_effects_3_0= ruleEquation ) ) | ( (lv_effects_4_0= ruleEmission ) ) )*
                    loop62:
                    do {
                        int alt62=3;
                        int LA62_0 = input.LA(1);

                        if ( (LA62_0==RULE_ID||LA62_0==17) ) {
                            alt62=1;
                        }
                        else if ( (LA62_0==39) ) {
                            alt62=2;
                        }


                        switch (alt62) {
                    	case 1 :
                    	    // InternalScadeEquations.g:2860:5: ( (lv_effects_3_0= ruleEquation ) )
                    	    {
                    	    // InternalScadeEquations.g:2860:5: ( (lv_effects_3_0= ruleEquation ) )
                    	    // InternalScadeEquations.g:2861:6: (lv_effects_3_0= ruleEquation )
                    	    {
                    	    // InternalScadeEquations.g:2861:6: (lv_effects_3_0= ruleEquation )
                    	    // InternalScadeEquations.g:2862:7: lv_effects_3_0= ruleEquation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAnActionAccess().getEffectsEquationParserRuleCall_1_1_0_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_47);
                    	    lv_effects_3_0=ruleEquation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAnActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_3_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Equation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalScadeEquations.g:2880:5: ( (lv_effects_4_0= ruleEmission ) )
                    	    {
                    	    // InternalScadeEquations.g:2880:5: ( (lv_effects_4_0= ruleEmission ) )
                    	    // InternalScadeEquations.g:2881:6: (lv_effects_4_0= ruleEmission )
                    	    {
                    	    // InternalScadeEquations.g:2881:6: (lv_effects_4_0= ruleEmission )
                    	    // InternalScadeEquations.g:2882:7: lv_effects_4_0= ruleEmission
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getAnActionAccess().getEffectsEmissionParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_47);
                    	    lv_effects_4_0=ruleEmission();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getAnActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"effects",
                    	      								lv_effects_4_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.Emission");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop62;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalScadeEquations.g:2901:3: (otherlv_5= 'restart' | ( (lv_history_6_0= 'resume' ) ) )
            int alt64=2;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==49) ) {
                alt64=1;
            }
            else if ( (LA64_0==50) ) {
                alt64=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;
            }
            switch (alt64) {
                case 1 :
                    // InternalScadeEquations.g:2902:4: otherlv_5= 'restart'
                    {
                    otherlv_5=(Token)match(input,49,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAnActionAccess().getRestartKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:2907:4: ( (lv_history_6_0= 'resume' ) )
                    {
                    // InternalScadeEquations.g:2907:4: ( (lv_history_6_0= 'resume' ) )
                    // InternalScadeEquations.g:2908:5: (lv_history_6_0= 'resume' )
                    {
                    // InternalScadeEquations.g:2908:5: (lv_history_6_0= 'resume' )
                    // InternalScadeEquations.g:2909:6: lv_history_6_0= 'resume'
                    {
                    lv_history_6_0=(Token)match(input,50,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_history_6_0, grammarAccess.getAnActionAccess().getHistoryResumeKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAnActionRule());
                      						}
                      						setWithLastConsumed(current, "history", lv_history_6_0 != null, "resume");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:2922:3: ( (otherlv_7= RULE_ID ) )
            // InternalScadeEquations.g:2923:4: (otherlv_7= RULE_ID )
            {
            // InternalScadeEquations.g:2923:4: (otherlv_7= RULE_ID )
            // InternalScadeEquations.g:2924:5: otherlv_7= RULE_ID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnActionRule());
              					}
              				
            }
            otherlv_7=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(otherlv_7, grammarAccess.getAnActionAccess().getNextStateStateValuedObjectCrossReference_3_0());
              				
            }

            }


            }

            otherlv_8=(Token)match(input,20,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_8, grammarAccess.getAnActionAccess().getSemicolonKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnAction"


    // $ANTLR start "entryRuleProductExpression"
    // InternalScadeEquations.g:2946:1: entryRuleProductExpression returns [EObject current=null] : iv_ruleProductExpression= ruleProductExpression EOF ;
    public final EObject entryRuleProductExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleProductExpression = null;


        try {
            // InternalScadeEquations.g:2946:58: (iv_ruleProductExpression= ruleProductExpression EOF )
            // InternalScadeEquations.g:2947:2: iv_ruleProductExpression= ruleProductExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getProductExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleProductExpression=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleProductExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleProductExpression"


    // $ANTLR start "ruleProductExpression"
    // InternalScadeEquations.g:2953:1: ruleProductExpression returns [EObject current=null] : (this_IntDivExpression_0= ruleIntDivExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )* ) ;
    public final EObject ruleProductExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        Token otherlv_14=null;
        EObject this_IntDivExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;

        Enumerator lv_operator_12_0 = null;

        EObject lv_subExpressions_13_0 = null;

        EObject lv_subExpressions_15_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:2959:2: ( (this_IntDivExpression_0= ruleIntDivExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )* ) )
            // InternalScadeEquations.g:2960:2: (this_IntDivExpression_0= ruleIntDivExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )* )
            {
            // InternalScadeEquations.g:2960:2: (this_IntDivExpression_0= ruleIntDivExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )* )
            // InternalScadeEquations.g:2961:3: this_IntDivExpression_0= ruleIntDivExpression ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getProductExpressionAccess().getIntDivExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_48);
            this_IntDivExpression_0=ruleIntDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_IntDivExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:2972:3: ( ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* ) | ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* ) )*
            loop68:
            do {
                int alt68=4;
                switch ( input.LA(1) ) {
                case 51:
                    {
                    alt68=1;
                    }
                    break;
                case 52:
                    {
                    alt68=2;
                    }
                    break;
                case 53:
                    {
                    alt68=3;
                    }
                    break;

                }

                switch (alt68) {
            	case 1 :
            	    // InternalScadeEquations.g:2973:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* )
            	    {
            	    // InternalScadeEquations.g:2973:4: ( () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )* )
            	    // InternalScadeEquations.g:2974:5: () ( (lv_operator_2_0= ruleMultOperator ) ) ( (lv_subExpressions_3_0= ruleIntDivExpression ) ) (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )*
            	    {
            	    // InternalScadeEquations.g:2974:5: ()
            	    // InternalScadeEquations.g:2975:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalScadeEquations.g:2984:5: ( (lv_operator_2_0= ruleMultOperator ) )
            	    // InternalScadeEquations.g:2985:6: (lv_operator_2_0= ruleMultOperator )
            	    {
            	    // InternalScadeEquations.g:2985:6: (lv_operator_2_0= ruleMultOperator )
            	    // InternalScadeEquations.g:2986:7: lv_operator_2_0= ruleMultOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_operator_2_0=ruleMultOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.MultOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:3003:5: ( (lv_subExpressions_3_0= ruleIntDivExpression ) )
            	    // InternalScadeEquations.g:3004:6: (lv_subExpressions_3_0= ruleIntDivExpression )
            	    {
            	    // InternalScadeEquations.g:3004:6: (lv_subExpressions_3_0= ruleIntDivExpression )
            	    // InternalScadeEquations.g:3005:7: lv_subExpressions_3_0= ruleIntDivExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_subExpressions_3_0=ruleIntDivExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:3022:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )*
            	    loop65:
            	    do {
            	        int alt65=2;
            	        alt65 = dfa65.predict(input);
            	        switch (alt65) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:3023:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) )
            	    	    {
            	    	    otherlv_4=(Token)match(input,51,FollowSets000.FOLLOW_49); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getProductExpressionAccess().getAsteriskKeyword_1_0_3_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:3027:6: ( (lv_subExpressions_5_0= ruleIntDivExpression ) )
            	    	    // InternalScadeEquations.g:3028:7: (lv_subExpressions_5_0= ruleIntDivExpression )
            	    	    {
            	    	    // InternalScadeEquations.g:3028:7: (lv_subExpressions_5_0= ruleIntDivExpression )
            	    	    // InternalScadeEquations.g:3029:8: lv_subExpressions_5_0= ruleIntDivExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_48);
            	    	    lv_subExpressions_5_0=ruleIntDivExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop65;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:3049:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* )
            	    {
            	    // InternalScadeEquations.g:3049:4: ( () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )* )
            	    // InternalScadeEquations.g:3050:5: () ( (lv_operator_7_0= ruleDivOperator ) ) ( (lv_subExpressions_8_0= ruleIntDivExpression ) ) (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )*
            	    {
            	    // InternalScadeEquations.g:3050:5: ()
            	    // InternalScadeEquations.g:3051:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalScadeEquations.g:3060:5: ( (lv_operator_7_0= ruleDivOperator ) )
            	    // InternalScadeEquations.g:3061:6: (lv_operator_7_0= ruleDivOperator )
            	    {
            	    // InternalScadeEquations.g:3061:6: (lv_operator_7_0= ruleDivOperator )
            	    // InternalScadeEquations.g:3062:7: lv_operator_7_0= ruleDivOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_operator_7_0=ruleDivOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.DivOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:3079:5: ( (lv_subExpressions_8_0= ruleIntDivExpression ) )
            	    // InternalScadeEquations.g:3080:6: (lv_subExpressions_8_0= ruleIntDivExpression )
            	    {
            	    // InternalScadeEquations.g:3080:6: (lv_subExpressions_8_0= ruleIntDivExpression )
            	    // InternalScadeEquations.g:3081:7: lv_subExpressions_8_0= ruleIntDivExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_subExpressions_8_0=ruleIntDivExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:3098:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )*
            	    loop66:
            	    do {
            	        int alt66=2;
            	        alt66 = dfa66.predict(input);
            	        switch (alt66) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:3099:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) )
            	    	    {
            	    	    otherlv_9=(Token)match(input,52,FollowSets000.FOLLOW_49); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getProductExpressionAccess().getSolidusKeyword_1_1_3_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:3103:6: ( (lv_subExpressions_10_0= ruleIntDivExpression ) )
            	    	    // InternalScadeEquations.g:3104:7: (lv_subExpressions_10_0= ruleIntDivExpression )
            	    	    {
            	    	    // InternalScadeEquations.g:3104:7: (lv_subExpressions_10_0= ruleIntDivExpression )
            	    	    // InternalScadeEquations.g:3105:8: lv_subExpressions_10_0= ruleIntDivExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_48);
            	    	    lv_subExpressions_10_0=ruleIntDivExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop66;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalScadeEquations.g:3125:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* )
            	    {
            	    // InternalScadeEquations.g:3125:4: ( () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )* )
            	    // InternalScadeEquations.g:3126:5: () ( (lv_operator_12_0= ruleModOperator ) ) ( (lv_subExpressions_13_0= ruleIntDivExpression ) ) (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )*
            	    {
            	    // InternalScadeEquations.g:3126:5: ()
            	    // InternalScadeEquations.g:3127:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getProductExpressionAccess().getOperatorExpressionSubExpressionsAction_1_2_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalScadeEquations.g:3136:5: ( (lv_operator_12_0= ruleModOperator ) )
            	    // InternalScadeEquations.g:3137:6: (lv_operator_12_0= ruleModOperator )
            	    {
            	    // InternalScadeEquations.g:3137:6: (lv_operator_12_0= ruleModOperator )
            	    // InternalScadeEquations.g:3138:7: lv_operator_12_0= ruleModOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getOperatorModOperatorEnumRuleCall_1_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_operator_12_0=ruleModOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_12_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.ModOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:3155:5: ( (lv_subExpressions_13_0= ruleIntDivExpression ) )
            	    // InternalScadeEquations.g:3156:6: (lv_subExpressions_13_0= ruleIntDivExpression )
            	    {
            	    // InternalScadeEquations.g:3156:6: (lv_subExpressions_13_0= ruleIntDivExpression )
            	    // InternalScadeEquations.g:3157:7: lv_subExpressions_13_0= ruleIntDivExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_2_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_48);
            	    lv_subExpressions_13_0=ruleIntDivExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_13_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:3174:5: (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )*
            	    loop67:
            	    do {
            	        int alt67=2;
            	        alt67 = dfa67.predict(input);
            	        switch (alt67) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:3175:6: otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) )
            	    	    {
            	    	    otherlv_14=(Token)match(input,53,FollowSets000.FOLLOW_49); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_14, grammarAccess.getProductExpressionAccess().getModKeyword_1_2_3_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:3179:6: ( (lv_subExpressions_15_0= ruleIntDivExpression ) )
            	    	    // InternalScadeEquations.g:3180:7: (lv_subExpressions_15_0= ruleIntDivExpression )
            	    	    {
            	    	    // InternalScadeEquations.g:3180:7: (lv_subExpressions_15_0= ruleIntDivExpression )
            	    	    // InternalScadeEquations.g:3181:8: lv_subExpressions_15_0= ruleIntDivExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_2_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_48);
            	    	    lv_subExpressions_15_0=ruleIntDivExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getProductExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_15_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.IntDivExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop67;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleProductExpression"


    // $ANTLR start "entryRuleIntDivExpression"
    // InternalScadeEquations.g:3205:1: entryRuleIntDivExpression returns [EObject current=null] : iv_ruleIntDivExpression= ruleIntDivExpression EOF ;
    public final EObject entryRuleIntDivExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntDivExpression = null;


        try {
            // InternalScadeEquations.g:3205:57: (iv_ruleIntDivExpression= ruleIntDivExpression EOF )
            // InternalScadeEquations.g:3206:2: iv_ruleIntDivExpression= ruleIntDivExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntDivExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntDivExpression=ruleIntDivExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntDivExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntDivExpression"


    // $ANTLR start "ruleIntDivExpression"
    // InternalScadeEquations.g:3212:1: ruleIntDivExpression returns [EObject current=null] : (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) ;
    public final EObject ruleIntDivExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_NegExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3218:2: ( (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? ) )
            // InternalScadeEquations.g:3219:2: (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:3219:2: (this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )? )
            // InternalScadeEquations.g:3220:3: this_NegExpression_0= ruleNegExpression ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getIntDivExpressionAccess().getNegExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_50);
            this_NegExpression_0=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NegExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:3231:3: ( () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )* )?
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==54) ) {
                alt70=1;
            }
            switch (alt70) {
                case 1 :
                    // InternalScadeEquations.g:3232:4: () ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) ) (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    {
                    // InternalScadeEquations.g:3232:4: ()
                    // InternalScadeEquations.g:3233:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getIntDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3242:4: ( ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) ) )
                    // InternalScadeEquations.g:3243:5: ( (lv_operator_2_0= ruleIntDivOperator ) ) ( (lv_subExpressions_3_0= ruleNegExpression ) )
                    {
                    // InternalScadeEquations.g:3243:5: ( (lv_operator_2_0= ruleIntDivOperator ) )
                    // InternalScadeEquations.g:3244:6: (lv_operator_2_0= ruleIntDivOperator )
                    {
                    // InternalScadeEquations.g:3244:6: (lv_operator_2_0= ruleIntDivOperator )
                    // InternalScadeEquations.g:3245:7: lv_operator_2_0= ruleIntDivOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getIntDivExpressionAccess().getOperatorIntDivOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_operator_2_0=ruleIntDivOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getIntDivExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.IntDivOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:3262:5: ( (lv_subExpressions_3_0= ruleNegExpression ) )
                    // InternalScadeEquations.g:3263:6: (lv_subExpressions_3_0= ruleNegExpression )
                    {
                    // InternalScadeEquations.g:3263:6: (lv_subExpressions_3_0= ruleNegExpression )
                    // InternalScadeEquations.g:3264:7: lv_subExpressions_3_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getIntDivExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_50);
                    lv_subExpressions_3_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getIntDivExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.NegExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:3282:4: (otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) ) )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==54) ) {
                            alt69=1;
                        }


                        switch (alt69) {
                    	case 1 :
                    	    // InternalScadeEquations.g:3283:5: otherlv_4= 'div' ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,54,FollowSets000.FOLLOW_51); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getIntDivExpressionAccess().getDivKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:3287:5: ( (lv_subExpressions_5_0= ruleAtomicValuedExpression ) )
                    	    // InternalScadeEquations.g:3288:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    {
                    	    // InternalScadeEquations.g:3288:6: (lv_subExpressions_5_0= ruleAtomicValuedExpression )
                    	    // InternalScadeEquations.g:3289:7: lv_subExpressions_5_0= ruleAtomicValuedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIntDivExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_50);
                    	    lv_subExpressions_5_0=ruleAtomicValuedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIntDivExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntDivExpression"


    // $ANTLR start "entryRuleNegExpression"
    // InternalScadeEquations.g:3312:1: entryRuleNegExpression returns [EObject current=null] : iv_ruleNegExpression= ruleNegExpression EOF ;
    public final EObject entryRuleNegExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNegExpression = null;


        try {
            // InternalScadeEquations.g:3312:54: (iv_ruleNegExpression= ruleNegExpression EOF )
            // InternalScadeEquations.g:3313:2: iv_ruleNegExpression= ruleNegExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNegExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNegExpression=ruleNegExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNegExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNegExpression"


    // $ANTLR start "ruleNegExpression"
    // InternalScadeEquations.g:3319:1: ruleNegExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FbyExpression_3= ruleFbyExpression ) ;
    public final EObject ruleNegExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_FbyExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3325:2: ( ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FbyExpression_3= ruleFbyExpression ) )
            // InternalScadeEquations.g:3326:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FbyExpression_3= ruleFbyExpression )
            {
            // InternalScadeEquations.g:3326:2: ( ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) ) | this_FbyExpression_3= ruleFbyExpression )
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( (LA71_0==86) ) {
                alt71=1;
            }
            else if ( ((LA71_0>=RULE_ID && LA71_0<=RULE_STRING)||(LA71_0>=RULE_INT && LA71_0<=RULE_BOOLEAN)||LA71_0==17||LA71_0==22||(LA71_0>=90 && LA71_0<=91)||(LA71_0>=101 && LA71_0<=103)||LA71_0==108||LA71_0==111) ) {
                alt71=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;
            }
            switch (alt71) {
                case 1 :
                    // InternalScadeEquations.g:3327:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    {
                    // InternalScadeEquations.g:3327:3: ( () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) ) )
                    // InternalScadeEquations.g:3328:4: () ( (lv_operator_1_0= ruleSubOperator ) ) ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    {
                    // InternalScadeEquations.g:3328:4: ()
                    // InternalScadeEquations.g:3329:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3338:4: ( (lv_operator_1_0= ruleSubOperator ) )
                    // InternalScadeEquations.g:3339:5: (lv_operator_1_0= ruleSubOperator )
                    {
                    // InternalScadeEquations.g:3339:5: (lv_operator_1_0= ruleSubOperator )
                    // InternalScadeEquations.g:3340:6: lv_operator_1_0= ruleSubOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_operator_1_0=ruleSubOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3357:4: ( (lv_subExpressions_2_0= ruleNegExpression ) )
                    // InternalScadeEquations.g:3358:5: (lv_subExpressions_2_0= ruleNegExpression )
                    {
                    // InternalScadeEquations.g:3358:5: (lv_subExpressions_2_0= ruleNegExpression )
                    // InternalScadeEquations.g:3359:6: lv_subExpressions_2_0= ruleNegExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNegExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNegExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NegExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:3378:3: this_FbyExpression_3= ruleFbyExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNegExpressionAccess().getFbyExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FbyExpression_3=ruleFbyExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FbyExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNegExpression"


    // $ANTLR start "entryRuleFbyExpression"
    // InternalScadeEquations.g:3393:1: entryRuleFbyExpression returns [EObject current=null] : iv_ruleFbyExpression= ruleFbyExpression EOF ;
    public final EObject entryRuleFbyExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFbyExpression = null;


        try {
            // InternalScadeEquations.g:3393:54: (iv_ruleFbyExpression= ruleFbyExpression EOF )
            // InternalScadeEquations.g:3394:2: iv_ruleFbyExpression= ruleFbyExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFbyExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFbyExpression=ruleFbyExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFbyExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFbyExpression"


    // $ANTLR start "ruleFbyExpression"
    // InternalScadeEquations.g:3400:1: ruleFbyExpression returns [EObject current=null] : (this_WhenExpression_0= ruleWhenExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )? ) ;
    public final EObject ruleFbyExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_WhenExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3406:2: ( (this_WhenExpression_0= ruleWhenExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )? ) )
            // InternalScadeEquations.g:3407:2: (this_WhenExpression_0= ruleWhenExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:3407:2: (this_WhenExpression_0= ruleWhenExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )? )
            // InternalScadeEquations.g:3408:3: this_WhenExpression_0= ruleWhenExpression ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFbyExpressionAccess().getWhenExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_52);
            this_WhenExpression_0=ruleWhenExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_WhenExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:3419:3: ( () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )* )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==55) ) {
                alt73=1;
            }
            switch (alt73) {
                case 1 :
                    // InternalScadeEquations.g:3420:4: () ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) ) (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )*
                    {
                    // InternalScadeEquations.g:3420:4: ()
                    // InternalScadeEquations.g:3421:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getFbyExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3430:4: ( ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) ) )
                    // InternalScadeEquations.g:3431:5: ( (lv_operator_2_0= ruleFbyOperator ) ) ( (lv_subExpressions_3_0= ruleWhenExpression ) )
                    {
                    // InternalScadeEquations.g:3431:5: ( (lv_operator_2_0= ruleFbyOperator ) )
                    // InternalScadeEquations.g:3432:6: (lv_operator_2_0= ruleFbyOperator )
                    {
                    // InternalScadeEquations.g:3432:6: (lv_operator_2_0= ruleFbyOperator )
                    // InternalScadeEquations.g:3433:7: lv_operator_2_0= ruleFbyOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getOperatorFbyOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_operator_2_0=ruleFbyOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.FbyOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:3450:5: ( (lv_subExpressions_3_0= ruleWhenExpression ) )
                    // InternalScadeEquations.g:3451:6: (lv_subExpressions_3_0= ruleWhenExpression )
                    {
                    // InternalScadeEquations.g:3451:6: (lv_subExpressions_3_0= ruleWhenExpression )
                    // InternalScadeEquations.g:3452:7: lv_subExpressions_3_0= ruleWhenExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getSubExpressionsWhenExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_52);
                    lv_subExpressions_3_0=ruleWhenExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.WhenExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:3470:4: (otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) ) )*
                    loop72:
                    do {
                        int alt72=2;
                        int LA72_0 = input.LA(1);

                        if ( (LA72_0==55) ) {
                            alt72=1;
                        }


                        switch (alt72) {
                    	case 1 :
                    	    // InternalScadeEquations.g:3471:5: otherlv_4= 'fby' ( (lv_subExpressions_5_0= ruleWhenExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,55,FollowSets000.FOLLOW_49); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getFbyExpressionAccess().getFbyKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:3475:5: ( (lv_subExpressions_5_0= ruleWhenExpression ) )
                    	    // InternalScadeEquations.g:3476:6: (lv_subExpressions_5_0= ruleWhenExpression )
                    	    {
                    	    // InternalScadeEquations.g:3476:6: (lv_subExpressions_5_0= ruleWhenExpression )
                    	    // InternalScadeEquations.g:3477:7: lv_subExpressions_5_0= ruleWhenExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getFbyExpressionAccess().getSubExpressionsWhenExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_52);
                    	    lv_subExpressions_5_0=ruleWhenExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getFbyExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.WhenExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop72;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFbyExpression"


    // $ANTLR start "entryRuleWhenExpression"
    // InternalScadeEquations.g:3500:1: entryRuleWhenExpression returns [EObject current=null] : iv_ruleWhenExpression= ruleWhenExpression EOF ;
    public final EObject entryRuleWhenExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleWhenExpression = null;


        try {
            // InternalScadeEquations.g:3500:55: (iv_ruleWhenExpression= ruleWhenExpression EOF )
            // InternalScadeEquations.g:3501:2: iv_ruleWhenExpression= ruleWhenExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWhenExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleWhenExpression=ruleWhenExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWhenExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWhenExpression"


    // $ANTLR start "ruleWhenExpression"
    // InternalScadeEquations.g:3507:1: ruleWhenExpression returns [EObject current=null] : ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression ) ;
    public final EObject ruleWhenExpression() throws RecognitionException {
        EObject current = null;

        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject this_CurrentExpression_4 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3513:2: ( ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression ) )
            // InternalScadeEquations.g:3514:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression )
            {
            // InternalScadeEquations.g:3514:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression )
            int alt74=2;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalScadeEquations.g:3515:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalScadeEquations.g:3515:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
                    // InternalScadeEquations.g:3516:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalScadeEquations.g:3516:4: ()
                    // InternalScadeEquations.g:3517:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getWhenExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3526:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
                    // InternalScadeEquations.g:3527:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    {
                    // InternalScadeEquations.g:3527:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
                    // InternalScadeEquations.g:3528:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_53);
                    lv_subExpressions_1_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhenExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3545:4: ( (lv_operator_2_0= ruleWhenOperator ) )
                    // InternalScadeEquations.g:3546:5: (lv_operator_2_0= ruleWhenOperator )
                    {
                    // InternalScadeEquations.g:3546:5: (lv_operator_2_0= ruleWhenOperator )
                    // InternalScadeEquations.g:3547:6: lv_operator_2_0= ruleWhenOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhenExpressionAccess().getOperatorWhenOperatorEnumRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_51);
                    lv_operator_2_0=ruleWhenOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhenExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.WhenOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3564:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
                    // InternalScadeEquations.g:3565:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    {
                    // InternalScadeEquations.g:3565:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
                    // InternalScadeEquations.g:3566:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getWhenExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:3585:3: this_CurrentExpression_4= ruleCurrentExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getWhenExpressionAccess().getCurrentExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CurrentExpression_4=ruleCurrentExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CurrentExpression_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhenExpression"


    // $ANTLR start "entryRuleCurrentExpression"
    // InternalScadeEquations.g:3600:1: entryRuleCurrentExpression returns [EObject current=null] : iv_ruleCurrentExpression= ruleCurrentExpression EOF ;
    public final EObject entryRuleCurrentExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrentExpression = null;


        try {
            // InternalScadeEquations.g:3600:58: (iv_ruleCurrentExpression= ruleCurrentExpression EOF )
            // InternalScadeEquations.g:3601:2: iv_ruleCurrentExpression= ruleCurrentExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrentExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCurrentExpression=ruleCurrentExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrentExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrentExpression"


    // $ANTLR start "ruleCurrentExpression"
    // InternalScadeEquations.g:3607:1: ruleCurrentExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression ) ;
    public final EObject ruleCurrentExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_PreExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3613:2: ( ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression ) )
            // InternalScadeEquations.g:3614:2: ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression )
            {
            // InternalScadeEquations.g:3614:2: ( ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_PreExpression_3= rulePreExpression )
            int alt75=2;
            int LA75_0 = input.LA(1);

            if ( (LA75_0==101) ) {
                alt75=1;
            }
            else if ( ((LA75_0>=RULE_ID && LA75_0<=RULE_STRING)||(LA75_0>=RULE_INT && LA75_0<=RULE_BOOLEAN)||LA75_0==17||LA75_0==22||(LA75_0>=90 && LA75_0<=91)||(LA75_0>=102 && LA75_0<=103)||LA75_0==108||LA75_0==111) ) {
                alt75=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 75, 0, input);

                throw nvae;
            }
            switch (alt75) {
                case 1 :
                    // InternalScadeEquations.g:3615:3: ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalScadeEquations.g:3615:3: ( () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    // InternalScadeEquations.g:3616:4: () ( (lv_operator_1_0= ruleCurrentOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalScadeEquations.g:3616:4: ()
                    // InternalScadeEquations.g:3617:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getCurrentExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3626:4: ( (lv_operator_1_0= ruleCurrentOperator ) )
                    // InternalScadeEquations.g:3627:5: (lv_operator_1_0= ruleCurrentOperator )
                    {
                    // InternalScadeEquations.g:3627:5: (lv_operator_1_0= ruleCurrentOperator )
                    // InternalScadeEquations.g:3628:6: lv_operator_1_0= ruleCurrentOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCurrentExpressionAccess().getOperatorCurrentOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_51);
                    lv_operator_1_0=ruleCurrentOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCurrentExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.CurrentOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3645:4: ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    // InternalScadeEquations.g:3646:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    {
                    // InternalScadeEquations.g:3646:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    // InternalScadeEquations.g:3647:6: lv_subExpressions_2_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCurrentExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCurrentExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:3666:3: this_PreExpression_3= rulePreExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCurrentExpressionAccess().getPreExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PreExpression_3=rulePreExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PreExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrentExpression"


    // $ANTLR start "entryRulePreExpression"
    // InternalScadeEquations.g:3681:1: entryRulePreExpression returns [EObject current=null] : iv_rulePreExpression= rulePreExpression EOF ;
    public final EObject entryRulePreExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePreExpression = null;


        try {
            // InternalScadeEquations.g:3681:54: (iv_rulePreExpression= rulePreExpression EOF )
            // InternalScadeEquations.g:3682:2: iv_rulePreExpression= rulePreExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPreExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePreExpression=rulePreExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePreExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePreExpression"


    // $ANTLR start "rulePreExpression"
    // InternalScadeEquations.g:3688:1: rulePreExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) ) ) | this_LastExpression_3= ruleLastExpression ) ;
    public final EObject rulePreExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_LastExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3694:2: ( ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) ) ) | this_LastExpression_3= ruleLastExpression ) )
            // InternalScadeEquations.g:3695:2: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) ) ) | this_LastExpression_3= ruleLastExpression )
            {
            // InternalScadeEquations.g:3695:2: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) ) ) | this_LastExpression_3= ruleLastExpression )
            int alt76=2;
            alt76 = dfa76.predict(input);
            switch (alt76) {
                case 1 :
                    // InternalScadeEquations.g:3696:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) ) )
                    {
                    // InternalScadeEquations.g:3696:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) ) )
                    // InternalScadeEquations.g:3697:4: () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) )
                    {
                    // InternalScadeEquations.g:3697:4: ()
                    // InternalScadeEquations.g:3698:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getPreExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3707:4: ( (lv_operator_1_0= rulePreOperator ) )
                    // InternalScadeEquations.g:3708:5: (lv_operator_1_0= rulePreOperator )
                    {
                    // InternalScadeEquations.g:3708:5: (lv_operator_1_0= rulePreOperator )
                    // InternalScadeEquations.g:3709:6: lv_operator_1_0= rulePreOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPreExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_operator_1_0=rulePreOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPreExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.PreOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3726:4: ( (lv_subExpressions_2_0= ruleLastExpression ) )
                    // InternalScadeEquations.g:3727:5: (lv_subExpressions_2_0= ruleLastExpression )
                    {
                    // InternalScadeEquations.g:3727:5: (lv_subExpressions_2_0= ruleLastExpression )
                    // InternalScadeEquations.g:3728:6: lv_subExpressions_2_0= ruleLastExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getPreExpressionAccess().getSubExpressionsLastExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleLastExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getPreExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.LastExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:3747:3: this_LastExpression_3= ruleLastExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getPreExpressionAccess().getLastExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_LastExpression_3=ruleLastExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_LastExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreExpression"


    // $ANTLR start "entryRuleLastExpression"
    // InternalScadeEquations.g:3762:1: entryRuleLastExpression returns [EObject current=null] : iv_ruleLastExpression= ruleLastExpression EOF ;
    public final EObject entryRuleLastExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLastExpression = null;


        try {
            // InternalScadeEquations.g:3762:55: (iv_ruleLastExpression= ruleLastExpression EOF )
            // InternalScadeEquations.g:3763:2: iv_ruleLastExpression= ruleLastExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLastExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLastExpression=ruleLastExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLastExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLastExpression"


    // $ANTLR start "ruleLastExpression"
    // InternalScadeEquations.g:3769:1: ruleLastExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleLastOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) ;
    public final EObject ruleLastExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicValuedExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3775:2: ( ( ( () ( (lv_operator_1_0= ruleLastOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression ) )
            // InternalScadeEquations.g:3776:2: ( ( () ( (lv_operator_1_0= ruleLastOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            {
            // InternalScadeEquations.g:3776:2: ( ( () ( (lv_operator_1_0= ruleLastOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) ) | this_AtomicValuedExpression_3= ruleAtomicValuedExpression )
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==103) ) {
                alt77=1;
            }
            else if ( ((LA77_0>=RULE_ID && LA77_0<=RULE_STRING)||(LA77_0>=RULE_INT && LA77_0<=RULE_BOOLEAN)||LA77_0==17||LA77_0==22||(LA77_0>=90 && LA77_0<=91)||LA77_0==102||LA77_0==108||LA77_0==111) ) {
                alt77=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 77, 0, input);

                throw nvae;
            }
            switch (alt77) {
                case 1 :
                    // InternalScadeEquations.g:3777:3: ( () ( (lv_operator_1_0= ruleLastOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    {
                    // InternalScadeEquations.g:3777:3: ( () ( (lv_operator_1_0= ruleLastOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) ) )
                    // InternalScadeEquations.g:3778:4: () ( (lv_operator_1_0= ruleLastOperator ) ) ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    {
                    // InternalScadeEquations.g:3778:4: ()
                    // InternalScadeEquations.g:3779:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getLastExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3788:4: ( (lv_operator_1_0= ruleLastOperator ) )
                    // InternalScadeEquations.g:3789:5: (lv_operator_1_0= ruleLastOperator )
                    {
                    // InternalScadeEquations.g:3789:5: (lv_operator_1_0= ruleLastOperator )
                    // InternalScadeEquations.g:3790:6: lv_operator_1_0= ruleLastOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLastExpressionAccess().getOperatorLastOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_51);
                    lv_operator_1_0=ruleLastOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLastExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.LastOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:3807:4: ( (lv_subExpressions_2_0= ruleAtomicValuedExpression ) )
                    // InternalScadeEquations.g:3808:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    {
                    // InternalScadeEquations.g:3808:5: (lv_subExpressions_2_0= ruleAtomicValuedExpression )
                    // InternalScadeEquations.g:3809:6: lv_subExpressions_2_0= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLastExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLastExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.AtomicValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:3828:3: this_AtomicValuedExpression_3= ruleAtomicValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getLastExpressionAccess().getAtomicValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicValuedExpression_3=ruleAtomicValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicValuedExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLastExpression"


    // $ANTLR start "entryRuleBoolExpression"
    // InternalScadeEquations.g:3843:1: entryRuleBoolExpression returns [EObject current=null] : iv_ruleBoolExpression= ruleBoolExpression EOF ;
    public final EObject entryRuleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolExpression = null;


        try {
            // InternalScadeEquations.g:3843:55: (iv_ruleBoolExpression= ruleBoolExpression EOF )
            // InternalScadeEquations.g:3844:2: iv_ruleBoolExpression= ruleBoolExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolExpression=ruleBoolExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolExpression"


    // $ANTLR start "ruleBoolExpression"
    // InternalScadeEquations.g:3850:1: ruleBoolExpression returns [EObject current=null] : this_InitExpression_0= ruleInitExpression ;
    public final EObject ruleBoolExpression() throws RecognitionException {
        EObject current = null;

        EObject this_InitExpression_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3856:2: (this_InitExpression_0= ruleInitExpression )
            // InternalScadeEquations.g:3857:2: this_InitExpression_0= ruleInitExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getBoolExpressionAccess().getInitExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_InitExpression_0=ruleInitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_InitExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolExpression"


    // $ANTLR start "entryRuleInitExpression"
    // InternalScadeEquations.g:3871:1: entryRuleInitExpression returns [EObject current=null] : iv_ruleInitExpression= ruleInitExpression EOF ;
    public final EObject entryRuleInitExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleInitExpression = null;


        try {
            // InternalScadeEquations.g:3871:55: (iv_ruleInitExpression= ruleInitExpression EOF )
            // InternalScadeEquations.g:3872:2: iv_ruleInitExpression= ruleInitExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getInitExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInitExpression=ruleInitExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInitExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInitExpression"


    // $ANTLR start "ruleInitExpression"
    // InternalScadeEquations.g:3878:1: ruleInitExpression returns [EObject current=null] : (this_TernaryOperation_0= ruleTernaryOperation ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )? ) ;
    public final EObject ruleInitExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_TernaryOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3884:2: ( (this_TernaryOperation_0= ruleTernaryOperation ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )? ) )
            // InternalScadeEquations.g:3885:2: (this_TernaryOperation_0= ruleTernaryOperation ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )? )
            {
            // InternalScadeEquations.g:3885:2: (this_TernaryOperation_0= ruleTernaryOperation ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )? )
            // InternalScadeEquations.g:3886:3: this_TernaryOperation_0= ruleTernaryOperation ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getInitExpressionAccess().getTernaryOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_54);
            this_TernaryOperation_0=ruleTernaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_TernaryOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:3897:3: ( () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )* )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==56) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalScadeEquations.g:3898:4: () ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) ) (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )*
                    {
                    // InternalScadeEquations.g:3898:4: ()
                    // InternalScadeEquations.g:3899:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getInitExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:3908:4: ( ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) ) )
                    // InternalScadeEquations.g:3909:5: ( (lv_operator_2_0= ruleInitOperator ) ) ( (lv_subExpressions_3_0= ruleTernaryOperation ) )
                    {
                    // InternalScadeEquations.g:3909:5: ( (lv_operator_2_0= ruleInitOperator ) )
                    // InternalScadeEquations.g:3910:6: (lv_operator_2_0= ruleInitOperator )
                    {
                    // InternalScadeEquations.g:3910:6: (lv_operator_2_0= ruleInitOperator )
                    // InternalScadeEquations.g:3911:7: lv_operator_2_0= ruleInitOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getInitExpressionAccess().getOperatorInitOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleInitOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.InitOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:3928:5: ( (lv_subExpressions_3_0= ruleTernaryOperation ) )
                    // InternalScadeEquations.g:3929:6: (lv_subExpressions_3_0= ruleTernaryOperation )
                    {
                    // InternalScadeEquations.g:3929:6: (lv_subExpressions_3_0= ruleTernaryOperation )
                    // InternalScadeEquations.g:3930:7: lv_subExpressions_3_0= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsTernaryOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_54);
                    lv_subExpressions_3_0=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:3948:4: (otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) ) )*
                    loop78:
                    do {
                        int alt78=2;
                        int LA78_0 = input.LA(1);

                        if ( (LA78_0==56) ) {
                            alt78=1;
                        }


                        switch (alt78) {
                    	case 1 :
                    	    // InternalScadeEquations.g:3949:5: otherlv_4= '->' ( (lv_subExpressions_5_0= ruleTernaryOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,56,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getInitExpressionAccess().getHyphenMinusGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:3953:5: ( (lv_subExpressions_5_0= ruleTernaryOperation ) )
                    	    // InternalScadeEquations.g:3954:6: (lv_subExpressions_5_0= ruleTernaryOperation )
                    	    {
                    	    // InternalScadeEquations.g:3954:6: (lv_subExpressions_5_0= ruleTernaryOperation )
                    	    // InternalScadeEquations.g:3955:7: lv_subExpressions_5_0= ruleTernaryOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getInitExpressionAccess().getSubExpressionsTernaryOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_54);
                    	    lv_subExpressions_5_0=ruleTernaryOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getInitExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop78;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitExpression"


    // $ANTLR start "entryRuleTernaryOperation"
    // InternalScadeEquations.g:3978:1: entryRuleTernaryOperation returns [EObject current=null] : iv_ruleTernaryOperation= ruleTernaryOperation EOF ;
    public final EObject entryRuleTernaryOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTernaryOperation = null;


        try {
            // InternalScadeEquations.g:3978:57: (iv_ruleTernaryOperation= ruleTernaryOperation EOF )
            // InternalScadeEquations.g:3979:2: iv_ruleTernaryOperation= ruleTernaryOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTernaryOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTernaryOperation=ruleTernaryOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTernaryOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTernaryOperation"


    // $ANTLR start "ruleTernaryOperation"
    // InternalScadeEquations.g:3985:1: ruleTernaryOperation returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression ) ;
    public final EObject ruleTernaryOperation() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject lv_subExpressions_4_0 = null;

        EObject lv_subExpressions_6_0 = null;

        EObject this_ImpliesExpression_7 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:3991:2: ( ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression ) )
            // InternalScadeEquations.g:3992:2: ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression )
            {
            // InternalScadeEquations.g:3992:2: ( ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) ) | this_ImpliesExpression_7= ruleImpliesExpression )
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==47) ) {
                alt80=1;
            }
            else if ( ((LA80_0>=RULE_ID && LA80_0<=RULE_STRING)||(LA80_0>=RULE_INT && LA80_0<=RULE_BOOLEAN)||LA80_0==17||LA80_0==22||LA80_0==86||(LA80_0>=90 && LA80_0<=91)||(LA80_0>=100 && LA80_0<=103)||LA80_0==108||LA80_0==111) ) {
                alt80=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 80, 0, input);

                throw nvae;
            }
            switch (alt80) {
                case 1 :
                    // InternalScadeEquations.g:3993:3: ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) )
                    {
                    // InternalScadeEquations.g:3993:3: ( () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) ) )
                    // InternalScadeEquations.g:3994:4: () ( (lv_operator_1_0= ruleConditionalOperator ) ) ( (lv_subExpressions_2_0= ruleTernaryOperation ) ) otherlv_3= 'then' ( (lv_subExpressions_4_0= ruleTernaryOperation ) ) otherlv_5= 'else' ( (lv_subExpressions_6_0= ruleTernaryOperation ) )
                    {
                    // InternalScadeEquations.g:3994:4: ()
                    // InternalScadeEquations.g:3995:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getTernaryOperationAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4004:4: ( (lv_operator_1_0= ruleConditionalOperator ) )
                    // InternalScadeEquations.g:4005:5: (lv_operator_1_0= ruleConditionalOperator )
                    {
                    // InternalScadeEquations.g:4005:5: (lv_operator_1_0= ruleConditionalOperator )
                    // InternalScadeEquations.g:4006:6: lv_operator_1_0= ruleConditionalOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getOperatorConditionalOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_1_0=ruleConditionalOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.ConditionalOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:4023:4: ( (lv_subExpressions_2_0= ruleTernaryOperation ) )
                    // InternalScadeEquations.g:4024:5: (lv_subExpressions_2_0= ruleTernaryOperation )
                    {
                    // InternalScadeEquations.g:4024:5: (lv_subExpressions_2_0= ruleTernaryOperation )
                    // InternalScadeEquations.g:4025:6: lv_subExpressions_2_0= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsTernaryOperationParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_55);
                    lv_subExpressions_2_0=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,57,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getTernaryOperationAccess().getThenKeyword_0_3());
                      			
                    }
                    // InternalScadeEquations.g:4046:4: ( (lv_subExpressions_4_0= ruleTernaryOperation ) )
                    // InternalScadeEquations.g:4047:5: (lv_subExpressions_4_0= ruleTernaryOperation )
                    {
                    // InternalScadeEquations.g:4047:5: (lv_subExpressions_4_0= ruleTernaryOperation )
                    // InternalScadeEquations.g:4048:6: lv_subExpressions_4_0= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsTernaryOperationParserRuleCall_0_4_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_56);
                    lv_subExpressions_4_0=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_4_0,
                      							"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,58,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getTernaryOperationAccess().getElseKeyword_0_5());
                      			
                    }
                    // InternalScadeEquations.g:4069:4: ( (lv_subExpressions_6_0= ruleTernaryOperation ) )
                    // InternalScadeEquations.g:4070:5: (lv_subExpressions_6_0= ruleTernaryOperation )
                    {
                    // InternalScadeEquations.g:4070:5: (lv_subExpressions_6_0= ruleTernaryOperation )
                    // InternalScadeEquations.g:4071:6: lv_subExpressions_6_0= ruleTernaryOperation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTernaryOperationAccess().getSubExpressionsTernaryOperationParserRuleCall_0_6_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_6_0=ruleTernaryOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTernaryOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_6_0,
                      							"de.cau.cs.kieler.lustre.Lustre.TernaryOperation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:4090:3: this_ImpliesExpression_7= ruleImpliesExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getTernaryOperationAccess().getImpliesExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ImpliesExpression_7=ruleImpliesExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ImpliesExpression_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTernaryOperation"


    // $ANTLR start "entryRuleImpliesExpression"
    // InternalScadeEquations.g:4105:1: entryRuleImpliesExpression returns [EObject current=null] : iv_ruleImpliesExpression= ruleImpliesExpression EOF ;
    public final EObject entryRuleImpliesExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImpliesExpression = null;


        try {
            // InternalScadeEquations.g:4105:58: (iv_ruleImpliesExpression= ruleImpliesExpression EOF )
            // InternalScadeEquations.g:4106:2: iv_ruleImpliesExpression= ruleImpliesExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImpliesExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleImpliesExpression=ruleImpliesExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImpliesExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImpliesExpression"


    // $ANTLR start "ruleImpliesExpression"
    // InternalScadeEquations.g:4112:1: ruleImpliesExpression returns [EObject current=null] : (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? ) ;
    public final EObject ruleImpliesExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalXorExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4118:2: ( (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? ) )
            // InternalScadeEquations.g:4119:2: (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:4119:2: (this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )? )
            // InternalScadeEquations.g:4120:3: this_LogicalXorExpression_0= ruleLogicalXorExpression ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getImpliesExpressionAccess().getLogicalXorExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_57);
            this_LogicalXorExpression_0=ruleLogicalXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalXorExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:4131:3: ( () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )* )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==59) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalScadeEquations.g:4132:4: () ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) ) (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )*
                    {
                    // InternalScadeEquations.g:4132:4: ()
                    // InternalScadeEquations.g:4133:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getImpliesExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4142:4: ( ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) ) )
                    // InternalScadeEquations.g:4143:5: ( (lv_operator_2_0= ruleImpliesOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) )
                    {
                    // InternalScadeEquations.g:4143:5: ( (lv_operator_2_0= ruleImpliesOperator ) )
                    // InternalScadeEquations.g:4144:6: (lv_operator_2_0= ruleImpliesOperator )
                    {
                    // InternalScadeEquations.g:4144:6: (lv_operator_2_0= ruleImpliesOperator )
                    // InternalScadeEquations.g:4145:7: lv_operator_2_0= ruleImpliesOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getOperatorImpliesOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleImpliesOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.ImpliesOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:4162:5: ( (lv_subExpressions_3_0= ruleLogicalXorExpression ) )
                    // InternalScadeEquations.g:4163:6: (lv_subExpressions_3_0= ruleLogicalXorExpression )
                    {
                    // InternalScadeEquations.g:4163:6: (lv_subExpressions_3_0= ruleLogicalXorExpression )
                    // InternalScadeEquations.g:4164:7: lv_subExpressions_3_0= ruleLogicalXorExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getSubExpressionsLogicalXorExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_57);
                    lv_subExpressions_3_0=ruleLogicalXorExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalXorExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:4182:4: (otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) ) )*
                    loop81:
                    do {
                        int alt81=2;
                        int LA81_0 = input.LA(1);

                        if ( (LA81_0==59) ) {
                            alt81=1;
                        }


                        switch (alt81) {
                    	case 1 :
                    	    // InternalScadeEquations.g:4183:5: otherlv_4= '=>' ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,59,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getImpliesExpressionAccess().getEqualsSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:4187:5: ( (lv_subExpressions_5_0= ruleLogicalXorExpression ) )
                    	    // InternalScadeEquations.g:4188:6: (lv_subExpressions_5_0= ruleLogicalXorExpression )
                    	    {
                    	    // InternalScadeEquations.g:4188:6: (lv_subExpressions_5_0= ruleLogicalXorExpression )
                    	    // InternalScadeEquations.g:4189:7: lv_subExpressions_5_0= ruleLogicalXorExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getImpliesExpressionAccess().getSubExpressionsLogicalXorExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_57);
                    	    lv_subExpressions_5_0=ruleLogicalXorExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getImpliesExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.LogicalXorExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop81;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesExpression"


    // $ANTLR start "entryRuleLogicalXorExpression"
    // InternalScadeEquations.g:4212:1: entryRuleLogicalXorExpression returns [EObject current=null] : iv_ruleLogicalXorExpression= ruleLogicalXorExpression EOF ;
    public final EObject entryRuleLogicalXorExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalXorExpression = null;


        try {
            // InternalScadeEquations.g:4212:61: (iv_ruleLogicalXorExpression= ruleLogicalXorExpression EOF )
            // InternalScadeEquations.g:4213:2: iv_ruleLogicalXorExpression= ruleLogicalXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalXorExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalXorExpression=ruleLogicalXorExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalXorExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalXorExpression"


    // $ANTLR start "ruleLogicalXorExpression"
    // InternalScadeEquations.g:4219:1: ruleLogicalXorExpression returns [EObject current=null] : (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? ) ;
    public final EObject ruleLogicalXorExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalOrExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4225:2: ( (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? ) )
            // InternalScadeEquations.g:4226:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:4226:2: (this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )? )
            // InternalScadeEquations.g:4227:3: this_LogicalOrExpression_0= ruleLogicalOrExpression ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getLogicalOrExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_58);
            this_LogicalOrExpression_0=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalOrExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:4238:3: ( () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )* )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==60) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalScadeEquations.g:4239:4: () ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) ) (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )*
                    {
                    // InternalScadeEquations.g:4239:4: ()
                    // InternalScadeEquations.g:4240:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalXorExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4249:4: ( ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) ) )
                    // InternalScadeEquations.g:4250:5: ( (lv_operator_2_0= ruleLogicalXorOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) )
                    {
                    // InternalScadeEquations.g:4250:5: ( (lv_operator_2_0= ruleLogicalXorOperator ) )
                    // InternalScadeEquations.g:4251:6: (lv_operator_2_0= ruleLogicalXorOperator )
                    {
                    // InternalScadeEquations.g:4251:6: (lv_operator_2_0= ruleLogicalXorOperator )
                    // InternalScadeEquations.g:4252:7: lv_operator_2_0= ruleLogicalXorOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getOperatorLogicalXorOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleLogicalXorOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalXorExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalXorOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:4269:5: ( (lv_subExpressions_3_0= ruleLogicalOrExpression ) )
                    // InternalScadeEquations.g:4270:6: (lv_subExpressions_3_0= ruleLogicalOrExpression )
                    {
                    // InternalScadeEquations.g:4270:6: (lv_subExpressions_3_0= ruleLogicalOrExpression )
                    // InternalScadeEquations.g:4271:7: lv_subExpressions_3_0= ruleLogicalOrExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getSubExpressionsLogicalOrExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_58);
                    lv_subExpressions_3_0=ruleLogicalOrExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalXorExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalOrExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:4289:4: (otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) ) )*
                    loop83:
                    do {
                        int alt83=2;
                        int LA83_0 = input.LA(1);

                        if ( (LA83_0==60) ) {
                            alt83=1;
                        }


                        switch (alt83) {
                    	case 1 :
                    	    // InternalScadeEquations.g:4290:5: otherlv_4= 'xor' ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,60,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalXorExpressionAccess().getXorKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:4294:5: ( (lv_subExpressions_5_0= ruleLogicalOrExpression ) )
                    	    // InternalScadeEquations.g:4295:6: (lv_subExpressions_5_0= ruleLogicalOrExpression )
                    	    {
                    	    // InternalScadeEquations.g:4295:6: (lv_subExpressions_5_0= ruleLogicalOrExpression )
                    	    // InternalScadeEquations.g:4296:7: lv_subExpressions_5_0= ruleLogicalOrExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalXorExpressionAccess().getSubExpressionsLogicalOrExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_58);
                    	    lv_subExpressions_5_0=ruleLogicalOrExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalXorExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.LogicalOrExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop83;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalXorExpression"


    // $ANTLR start "entryRuleLogicalOrExpression"
    // InternalScadeEquations.g:4319:1: entryRuleLogicalOrExpression returns [EObject current=null] : iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF ;
    public final EObject entryRuleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalOrExpression = null;


        try {
            // InternalScadeEquations.g:4319:60: (iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF )
            // InternalScadeEquations.g:4320:2: iv_ruleLogicalOrExpression= ruleLogicalOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalOrExpression=ruleLogicalOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalOrExpression"


    // $ANTLR start "ruleLogicalOrExpression"
    // InternalScadeEquations.g:4326:1: ruleLogicalOrExpression returns [EObject current=null] : (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) ;
    public final EObject ruleLogicalOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_LogicalAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4332:2: ( (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? ) )
            // InternalScadeEquations.g:4333:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:4333:2: (this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )? )
            // InternalScadeEquations.g:4334:3: this_LogicalAndExpression_0= ruleLogicalAndExpression ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getLogicalAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_59);
            this_LogicalAndExpression_0=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_LogicalAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:4345:3: ( () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )* )?
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==61) ) {
                alt86=1;
            }
            switch (alt86) {
                case 1 :
                    // InternalScadeEquations.g:4346:4: () ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) ) (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    {
                    // InternalScadeEquations.g:4346:4: ()
                    // InternalScadeEquations.g:4347:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4356:4: ( ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) ) )
                    // InternalScadeEquations.g:4357:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) ) ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    {
                    // InternalScadeEquations.g:4357:5: ( (lv_operator_2_0= ruleLogicalOrOperator ) )
                    // InternalScadeEquations.g:4358:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    {
                    // InternalScadeEquations.g:4358:6: (lv_operator_2_0= ruleLogicalOrOperator )
                    // InternalScadeEquations.g:4359:7: lv_operator_2_0= ruleLogicalOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getOperatorLogicalOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleLogicalOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:4376:5: ( (lv_subExpressions_3_0= ruleLogicalAndExpression ) )
                    // InternalScadeEquations.g:4377:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    {
                    // InternalScadeEquations.g:4377:6: (lv_subExpressions_3_0= ruleLogicalAndExpression )
                    // InternalScadeEquations.g:4378:7: lv_subExpressions_3_0= ruleLogicalAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_59);
                    lv_subExpressions_3_0=ruleLogicalAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:4396:4: (otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) ) )*
                    loop85:
                    do {
                        int alt85=2;
                        int LA85_0 = input.LA(1);

                        if ( (LA85_0==61) ) {
                            alt85=1;
                        }


                        switch (alt85) {
                    	case 1 :
                    	    // InternalScadeEquations.g:4397:5: otherlv_4= 'or' ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,61,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalOrExpressionAccess().getOrKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:4401:5: ( (lv_subExpressions_5_0= ruleLogicalAndExpression ) )
                    	    // InternalScadeEquations.g:4402:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    {
                    	    // InternalScadeEquations.g:4402:6: (lv_subExpressions_5_0= ruleLogicalAndExpression )
                    	    // InternalScadeEquations.g:4403:7: lv_subExpressions_5_0= ruleLogicalAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalOrExpressionAccess().getSubExpressionsLogicalAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_59);
                    	    lv_subExpressions_5_0=ruleLogicalAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.lustre.Lustre.LogicalAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop85;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrExpression"


    // $ANTLR start "entryRuleLogicalAndExpression"
    // InternalScadeEquations.g:4426:1: entryRuleLogicalAndExpression returns [EObject current=null] : iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF ;
    public final EObject entryRuleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLogicalAndExpression = null;


        try {
            // InternalScadeEquations.g:4426:61: (iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF )
            // InternalScadeEquations.g:4427:2: iv_ruleLogicalAndExpression= ruleLogicalAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLogicalAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleLogicalAndExpression=ruleLogicalAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLogicalAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLogicalAndExpression"


    // $ANTLR start "ruleLogicalAndExpression"
    // InternalScadeEquations.g:4433:1: ruleLogicalAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleLogicalAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4439:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalScadeEquations.g:4440:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalScadeEquations.g:4440:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalScadeEquations.g:4441:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_60);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:4452:3: ( () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==62) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalScadeEquations.g:4453:4: () ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalScadeEquations.g:4453:4: ()
                    // InternalScadeEquations.g:4454:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getLogicalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4463:4: ( ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalScadeEquations.g:4464:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalScadeEquations.g:4464:5: ( (lv_operator_2_0= ruleLogicalAndOperator ) )
                    // InternalScadeEquations.g:4465:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    {
                    // InternalScadeEquations.g:4465:6: (lv_operator_2_0= ruleLogicalAndOperator )
                    // InternalScadeEquations.g:4466:7: lv_operator_2_0= ruleLogicalAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getOperatorLogicalAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleLogicalAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.lustre.Lustre.LogicalAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:4483:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalScadeEquations.g:4484:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalScadeEquations.g:4484:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalScadeEquations.g:4485:7: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_60);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:4503:4: (otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop87:
                    do {
                        int alt87=2;
                        int LA87_0 = input.LA(1);

                        if ( (LA87_0==62) ) {
                            alt87=1;
                        }


                        switch (alt87) {
                    	case 1 :
                    	    // InternalScadeEquations.g:4504:5: otherlv_4= 'and' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,62,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getLogicalAndExpressionAccess().getAndKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:4508:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalScadeEquations.g:4509:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalScadeEquations.g:4509:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalScadeEquations.g:4510:7: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getLogicalAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_60);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getLogicalAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop87;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndExpression"


    // $ANTLR start "entryRuleValuedExpression"
    // InternalScadeEquations.g:4533:1: entryRuleValuedExpression returns [EObject current=null] : iv_ruleValuedExpression= ruleValuedExpression EOF ;
    public final EObject entryRuleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedExpression = null;


        try {
            // InternalScadeEquations.g:4533:57: (iv_ruleValuedExpression= ruleValuedExpression EOF )
            // InternalScadeEquations.g:4534:2: iv_ruleValuedExpression= ruleValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedExpression=ruleValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedExpression"


    // $ANTLR start "ruleValuedExpression"
    // InternalScadeEquations.g:4540:1: ruleValuedExpression returns [EObject current=null] : this_SumExpression_0= ruleSumExpression ;
    public final EObject ruleValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_SumExpression_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4546:2: (this_SumExpression_0= ruleSumExpression )
            // InternalScadeEquations.g:4547:2: this_SumExpression_0= ruleSumExpression
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getValuedExpressionAccess().getSumExpressionParserRuleCall());
              	
            }
            pushFollow(FollowSets000.FOLLOW_2);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_SumExpression_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedExpression"


    // $ANTLR start "entryRuleAtomicExpression"
    // InternalScadeEquations.g:4561:1: entryRuleAtomicExpression returns [EObject current=null] : iv_ruleAtomicExpression= ruleAtomicExpression EOF ;
    public final EObject entryRuleAtomicExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicExpression = null;


        try {
            // InternalScadeEquations.g:4561:57: (iv_ruleAtomicExpression= ruleAtomicExpression EOF )
            // InternalScadeEquations.g:4562:2: iv_ruleAtomicExpression= ruleAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicExpression=ruleAtomicExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicExpression"


    // $ANTLR start "ruleAtomicExpression"
    // InternalScadeEquations.g:4568:1: ruleAtomicExpression returns [EObject current=null] : (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression | this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression ) ;
    public final EObject ruleAtomicExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject this_BoolValue_0 = null;

        EObject this_BoolExpression_2 = null;

        EObject this_ReferenceCall_4 = null;

        EObject this_ValuedObjectTestExpression_5 = null;

        EObject this_NorAtMostOneExpression_6 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4574:2: ( (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression | this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression ) )
            // InternalScadeEquations.g:4575:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression | this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression )
            {
            // InternalScadeEquations.g:4575:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression | this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression )
            int alt89=5;
            alt89 = dfa89.predict(input);
            switch (alt89) {
                case 1 :
                    // InternalScadeEquations.g:4576:3: this_BoolValue_0= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_0=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:4588:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    {
                    // InternalScadeEquations.g:4588:3: (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' )
                    // InternalScadeEquations.g:4589:4: otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,17,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicExpressionAccess().getBoolExpressionParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_13);
                    this_BoolExpression_2=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_BoolExpression_2;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_3=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:4610:3: this_ReferenceCall_4= ruleReferenceCall
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getReferenceCallParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCall_4=ruleReferenceCall();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCall_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:4622:3: this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedObjectTestExpression_5=ruleValuedObjectTestExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedObjectTestExpression_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:4634:3: this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicExpressionAccess().getNorAtMostOneExpressionParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NorAtMostOneExpression_6=ruleNorAtMostOneExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NorAtMostOneExpression_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicExpression"


    // $ANTLR start "entryRuleNorAtMostOneExpression"
    // InternalScadeEquations.g:4649:1: entryRuleNorAtMostOneExpression returns [EObject current=null] : iv_ruleNorAtMostOneExpression= ruleNorAtMostOneExpression EOF ;
    public final EObject entryRuleNorAtMostOneExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNorAtMostOneExpression = null;


        try {
            // InternalScadeEquations.g:4649:63: (iv_ruleNorAtMostOneExpression= ruleNorAtMostOneExpression EOF )
            // InternalScadeEquations.g:4650:2: iv_ruleNorAtMostOneExpression= ruleNorAtMostOneExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNorAtMostOneExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNorAtMostOneExpression=ruleNorAtMostOneExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNorAtMostOneExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNorAtMostOneExpression"


    // $ANTLR start "ruleNorAtMostOneExpression"
    // InternalScadeEquations.g:4656:1: ruleNorAtMostOneExpression returns [EObject current=null] : ( () ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) ) otherlv_3= '(' ( (lv_subExpressions_4_0= ruleExpression ) ) (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )* otherlv_7= ')' ) ;
    public final EObject ruleNorAtMostOneExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Enumerator lv_operator_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_4_0 = null;

        EObject lv_subExpressions_6_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4662:2: ( ( () ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) ) otherlv_3= '(' ( (lv_subExpressions_4_0= ruleExpression ) ) (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )* otherlv_7= ')' ) )
            // InternalScadeEquations.g:4663:2: ( () ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) ) otherlv_3= '(' ( (lv_subExpressions_4_0= ruleExpression ) ) (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )* otherlv_7= ')' )
            {
            // InternalScadeEquations.g:4663:2: ( () ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) ) otherlv_3= '(' ( (lv_subExpressions_4_0= ruleExpression ) ) (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )* otherlv_7= ')' )
            // InternalScadeEquations.g:4664:3: () ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) ) otherlv_3= '(' ( (lv_subExpressions_4_0= ruleExpression ) ) (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )* otherlv_7= ')'
            {
            // InternalScadeEquations.g:4664:3: ()
            // InternalScadeEquations.g:4665:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNorAtMostOneExpressionAccess().getOperatorExpressionAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:4674:3: ( ( (lv_operator_1_0= ruleAtMostOneOperator ) ) | ( (lv_operator_2_0= ruleNorOperator ) ) )
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==91) ) {
                alt90=1;
            }
            else if ( (LA90_0==102) ) {
                alt90=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 90, 0, input);

                throw nvae;
            }
            switch (alt90) {
                case 1 :
                    // InternalScadeEquations.g:4675:4: ( (lv_operator_1_0= ruleAtMostOneOperator ) )
                    {
                    // InternalScadeEquations.g:4675:4: ( (lv_operator_1_0= ruleAtMostOneOperator ) )
                    // InternalScadeEquations.g:4676:5: (lv_operator_1_0= ruleAtMostOneOperator )
                    {
                    // InternalScadeEquations.g:4676:5: (lv_operator_1_0= ruleAtMostOneOperator )
                    // InternalScadeEquations.g:4677:6: lv_operator_1_0= ruleAtMostOneOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNorAtMostOneExpressionAccess().getOperatorAtMostOneOperatorEnumRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_operator_1_0=ruleAtMostOneOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNorAtMostOneExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.AtMostOneOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:4695:4: ( (lv_operator_2_0= ruleNorOperator ) )
                    {
                    // InternalScadeEquations.g:4695:4: ( (lv_operator_2_0= ruleNorOperator ) )
                    // InternalScadeEquations.g:4696:5: (lv_operator_2_0= ruleNorOperator )
                    {
                    // InternalScadeEquations.g:4696:5: (lv_operator_2_0= ruleNorOperator )
                    // InternalScadeEquations.g:4697:6: lv_operator_2_0= ruleNorOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNorAtMostOneExpressionAccess().getOperatorNorOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_11);
                    lv_operator_2_0=ruleNorOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNorAtMostOneExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NorOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,17,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getNorAtMostOneExpressionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalScadeEquations.g:4719:3: ( (lv_subExpressions_4_0= ruleExpression ) )
            // InternalScadeEquations.g:4720:4: (lv_subExpressions_4_0= ruleExpression )
            {
            // InternalScadeEquations.g:4720:4: (lv_subExpressions_4_0= ruleExpression )
            // InternalScadeEquations.g:4721:5: lv_subExpressions_4_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNorAtMostOneExpressionAccess().getSubExpressionsExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_6);
            lv_subExpressions_4_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNorAtMostOneExpressionRule());
              					}
              					add(
              						current,
              						"subExpressions",
              						lv_subExpressions_4_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:4738:3: (otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==18) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // InternalScadeEquations.g:4739:4: otherlv_5= ',' ( (lv_subExpressions_6_0= ruleExpression ) )
            	    {
            	    otherlv_5=(Token)match(input,18,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getNorAtMostOneExpressionAccess().getCommaKeyword_4_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:4743:4: ( (lv_subExpressions_6_0= ruleExpression ) )
            	    // InternalScadeEquations.g:4744:5: (lv_subExpressions_6_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:4744:5: (lv_subExpressions_6_0= ruleExpression )
            	    // InternalScadeEquations.g:4745:6: lv_subExpressions_6_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getNorAtMostOneExpressionAccess().getSubExpressionsExpressionParserRuleCall_4_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_subExpressions_6_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getNorAtMostOneExpressionRule());
            	      						}
            	      						add(
            	      							current,
            	      							"subExpressions",
            	      							lv_subExpressions_6_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getNorAtMostOneExpressionAccess().getRightParenthesisKeyword_5());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNorAtMostOneExpression"


    // $ANTLR start "entryRuleNotExpression"
    // InternalScadeEquations.g:4771:1: entryRuleNotExpression returns [EObject current=null] : iv_ruleNotExpression= ruleNotExpression EOF ;
    public final EObject entryRuleNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotExpression = null;


        try {
            // InternalScadeEquations.g:4771:54: (iv_ruleNotExpression= ruleNotExpression EOF )
            // InternalScadeEquations.g:4772:2: iv_ruleNotExpression= ruleNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotExpression=ruleNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotExpression"


    // $ANTLR start "ruleNotExpression"
    // InternalScadeEquations.g:4778:1: ruleNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4784:2: ( ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalScadeEquations.g:4785:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalScadeEquations.g:4785:2: ( ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==100) ) {
                alt92=1;
            }
            else if ( (LA92_0==RULE_ID||LA92_0==RULE_BOOLEAN||LA92_0==17||LA92_0==91||LA92_0==102||LA92_0==108||LA92_0==111) ) {
                alt92=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 92, 0, input);

                throw nvae;
            }
            switch (alt92) {
                case 1 :
                    // InternalScadeEquations.g:4786:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    {
                    // InternalScadeEquations.g:4786:3: ( () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) ) )
                    // InternalScadeEquations.g:4787:4: () ( (lv_operator_1_0= ruleNotOperator ) ) ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    {
                    // InternalScadeEquations.g:4787:4: ()
                    // InternalScadeEquations.g:4788:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:4797:4: ( (lv_operator_1_0= ruleNotOperator ) )
                    // InternalScadeEquations.g:4798:5: (lv_operator_1_0= ruleNotOperator )
                    {
                    // InternalScadeEquations.g:4798:5: (lv_operator_1_0= ruleNotOperator )
                    // InternalScadeEquations.g:4799:6: lv_operator_1_0= ruleNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_1_0=ruleNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:4816:4: ( (lv_subExpressions_2_0= ruleNotExpression ) )
                    // InternalScadeEquations.g:4817:5: (lv_subExpressions_2_0= ruleNotExpression )
                    {
                    // InternalScadeEquations.g:4817:5: (lv_subExpressions_2_0= ruleNotExpression )
                    // InternalScadeEquations.g:4818:6: lv_subExpressions_2_0= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.NotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:4837:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotExpression"


    // $ANTLR start "entryRuleRootScope"
    // InternalScadeEquations.g:4852:1: entryRuleRootScope returns [EObject current=null] : iv_ruleRootScope= ruleRootScope EOF ;
    public final EObject entryRuleRootScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRootScope = null;


        try {
            // InternalScadeEquations.g:4852:50: (iv_ruleRootScope= ruleRootScope EOF )
            // InternalScadeEquations.g:4853:2: iv_ruleRootScope= ruleRootScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRootScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRootScope=ruleRootScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRootScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRootScope"


    // $ANTLR start "ruleRootScope"
    // InternalScadeEquations.g:4859:1: ruleRootScope returns [EObject current=null] : ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) ;
    public final EObject ruleRootScope() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_declarations_1_0 = null;

        EObject lv_entities_2_0 = null;

        EObject lv_scopes_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4865:2: ( ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* ) )
            // InternalScadeEquations.g:4866:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            {
            // InternalScadeEquations.g:4866:2: ( () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )* )
            // InternalScadeEquations.g:4867:3: () ( (lv_declarations_1_0= ruleDeclaration ) )* ( (lv_entities_2_0= ruleTestEntity ) )* (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            {
            // InternalScadeEquations.g:4867:3: ()
            // InternalScadeEquations.g:4868:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRootScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:4877:3: ( (lv_declarations_1_0= ruleDeclaration ) )*
            loop93:
            do {
                int alt93=2;
                alt93 = dfa93.predict(input);
                switch (alt93) {
            	case 1 :
            	    // InternalScadeEquations.g:4878:4: (lv_declarations_1_0= ruleDeclaration )
            	    {
            	    // InternalScadeEquations.g:4878:4: (lv_declarations_1_0= ruleDeclaration )
            	    // InternalScadeEquations.g:4879:5: lv_declarations_1_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_61);
            	    lv_declarations_1_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop93;
                }
            } while (true);

            // InternalScadeEquations.g:4896:3: ( (lv_entities_2_0= ruleTestEntity ) )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==RULE_ID||LA94_0==RULE_HOSTCODE||LA94_0==RULE_COMMENT_ANNOTATION||LA94_0==25||(LA94_0>=64 && LA94_0<=65)||(LA94_0>=80 && LA94_0<=81)||LA94_0==92) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalScadeEquations.g:4897:4: (lv_entities_2_0= ruleTestEntity )
            	    {
            	    // InternalScadeEquations.g:4897:4: (lv_entities_2_0= ruleTestEntity )
            	    // InternalScadeEquations.g:4898:5: lv_entities_2_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRootScopeAccess().getEntitiesTestEntityParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_62);
            	    lv_entities_2_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_2_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            // InternalScadeEquations.g:4915:3: (otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) ) )*
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( (LA95_0==63) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalScadeEquations.g:4916:4: otherlv_3= 'scope' ( (lv_scopes_4_0= ruleScope ) )
            	    {
            	    otherlv_3=(Token)match(input,63,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRootScopeAccess().getScopeKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:4920:4: ( (lv_scopes_4_0= ruleScope ) )
            	    // InternalScadeEquations.g:4921:5: (lv_scopes_4_0= ruleScope )
            	    {
            	    // InternalScadeEquations.g:4921:5: (lv_scopes_4_0= ruleScope )
            	    // InternalScadeEquations.g:4922:6: lv_scopes_4_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRootScopeAccess().getScopesScopeParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_64);
            	    lv_scopes_4_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRootScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_4_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRootScope"


    // $ANTLR start "entryRuleScope"
    // InternalScadeEquations.g:4944:1: entryRuleScope returns [EObject current=null] : iv_ruleScope= ruleScope EOF ;
    public final EObject entryRuleScope() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScope = null;


        try {
            // InternalScadeEquations.g:4944:46: (iv_ruleScope= ruleScope EOF )
            // InternalScadeEquations.g:4945:2: iv_ruleScope= ruleScope EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScopeRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScope=ruleScope();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScope; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScope"


    // $ANTLR start "ruleScope"
    // InternalScadeEquations.g:4951:1: ruleScope returns [EObject current=null] : ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) ;
    public final EObject ruleScope() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_declarations_3_0 = null;

        EObject lv_entities_4_0 = null;

        EObject lv_scopes_6_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:4957:2: ( ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' ) )
            // InternalScadeEquations.g:4958:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            {
            // InternalScadeEquations.g:4958:2: ( () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}' )
            // InternalScadeEquations.g:4959:3: () ( (lv_name_1_0= RULE_ID ) )? otherlv_2= '{' ( (lv_declarations_3_0= ruleDeclaration ) )* ( (lv_entities_4_0= ruleTestEntity ) )* (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )* otherlv_7= '}'
            {
            // InternalScadeEquations.g:4959:3: ()
            // InternalScadeEquations.g:4960:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getScopeAccess().getKExtScopeAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:4969:3: ( (lv_name_1_0= RULE_ID ) )?
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==RULE_ID) ) {
                alt96=1;
            }
            switch (alt96) {
                case 1 :
                    // InternalScadeEquations.g:4970:4: (lv_name_1_0= RULE_ID )
                    {
                    // InternalScadeEquations.g:4970:4: (lv_name_1_0= RULE_ID )
                    // InternalScadeEquations.g:4971:5: lv_name_1_0= RULE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getScopeAccess().getNameIDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScopeRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"de.cau.cs.kieler.annotations.Annotations.ID");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,22,FollowSets000.FOLLOW_65); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScopeAccess().getLeftCurlyBracketKeyword_2());
              		
            }
            // InternalScadeEquations.g:4991:3: ( (lv_declarations_3_0= ruleDeclaration ) )*
            loop97:
            do {
                int alt97=2;
                alt97 = dfa97.predict(input);
                switch (alt97) {
            	case 1 :
            	    // InternalScadeEquations.g:4992:4: (lv_declarations_3_0= ruleDeclaration )
            	    {
            	    // InternalScadeEquations.g:4992:4: (lv_declarations_3_0= ruleDeclaration )
            	    // InternalScadeEquations.g:4993:5: lv_declarations_3_0= ruleDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_65);
            	    lv_declarations_3_0=ruleDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"declarations",
            	      						lv_declarations_3_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop97;
                }
            } while (true);

            // InternalScadeEquations.g:5010:3: ( (lv_entities_4_0= ruleTestEntity ) )*
            loop98:
            do {
                int alt98=2;
                int LA98_0 = input.LA(1);

                if ( (LA98_0==RULE_ID||LA98_0==RULE_HOSTCODE||LA98_0==RULE_COMMENT_ANNOTATION||LA98_0==25||(LA98_0>=64 && LA98_0<=65)||(LA98_0>=80 && LA98_0<=81)||LA98_0==92) ) {
                    alt98=1;
                }


                switch (alt98) {
            	case 1 :
            	    // InternalScadeEquations.g:5011:4: (lv_entities_4_0= ruleTestEntity )
            	    {
            	    // InternalScadeEquations.g:5011:4: (lv_entities_4_0= ruleTestEntity )
            	    // InternalScadeEquations.g:5012:5: lv_entities_4_0= ruleTestEntity
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScopeAccess().getEntitiesTestEntityParserRuleCall_4_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_66);
            	    lv_entities_4_0=ruleTestEntity();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScopeRule());
            	      					}
            	      					add(
            	      						current,
            	      						"entities",
            	      						lv_entities_4_0,
            	      						"de.cau.cs.kieler.kexpressions.kext.KExt.TestEntity");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop98;
                }
            } while (true);

            // InternalScadeEquations.g:5029:3: (otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) ) )*
            loop99:
            do {
                int alt99=2;
                int LA99_0 = input.LA(1);

                if ( (LA99_0==63) ) {
                    alt99=1;
                }


                switch (alt99) {
            	case 1 :
            	    // InternalScadeEquations.g:5030:4: otherlv_5= 'scope' ( (lv_scopes_6_0= ruleScope ) )
            	    {
            	    otherlv_5=(Token)match(input,63,FollowSets000.FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getScopeAccess().getScopeKeyword_5_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:5034:4: ( (lv_scopes_6_0= ruleScope ) )
            	    // InternalScadeEquations.g:5035:5: (lv_scopes_6_0= ruleScope )
            	    {
            	    // InternalScadeEquations.g:5035:5: (lv_scopes_6_0= ruleScope )
            	    // InternalScadeEquations.g:5036:6: lv_scopes_6_0= ruleScope
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScopeAccess().getScopesScopeParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_67);
            	    lv_scopes_6_0=ruleScope();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScopeRule());
            	      						}
            	      						add(
            	      							current,
            	      							"scopes",
            	      							lv_scopes_6_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.Scope");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);

            otherlv_7=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getScopeAccess().getRightCurlyBracketKeyword_6());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScope"


    // $ANTLR start "entryRuleTestEntity"
    // InternalScadeEquations.g:5062:1: entryRuleTestEntity returns [EObject current=null] : iv_ruleTestEntity= ruleTestEntity EOF ;
    public final EObject entryRuleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTestEntity = null;


        try {
            // InternalScadeEquations.g:5062:51: (iv_ruleTestEntity= ruleTestEntity EOF )
            // InternalScadeEquations.g:5063:2: iv_ruleTestEntity= ruleTestEntity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTestEntityRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTestEntity=ruleTestEntity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTestEntity; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTestEntity"


    // $ANTLR start "ruleTestEntity"
    // InternalScadeEquations.g:5069:1: ruleTestEntity returns [EObject current=null] : ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) ;
    public final EObject ruleTestEntity() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_1 = null;

        EObject lv_expression_0_2 = null;

        EObject lv_effect_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5075:2: ( ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) ) )
            // InternalScadeEquations.g:5076:2: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            {
            // InternalScadeEquations.g:5076:2: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) )
            int alt101=2;
            alt101 = dfa101.predict(input);
            switch (alt101) {
                case 1 :
                    // InternalScadeEquations.g:5077:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
                    {
                    // InternalScadeEquations.g:5077:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
                    // InternalScadeEquations.g:5078:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
                    {
                    // InternalScadeEquations.g:5078:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
                    // InternalScadeEquations.g:5079:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
                    {
                    // InternalScadeEquations.g:5079:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
                    int alt100=2;
                    switch ( input.LA(1) ) {
                    case RULE_COMMENT_ANNOTATION:
                        {
                        int LA100_1 = input.LA(2);

                        if ( (synpred119_InternalScadeEquations()) ) {
                            alt100=1;
                        }
                        else if ( (true) ) {
                            alt100=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 100, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 92:
                        {
                        int LA100_2 = input.LA(2);

                        if ( (synpred119_InternalScadeEquations()) ) {
                            alt100=1;
                        }
                        else if ( (true) ) {
                            alt100=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 100, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case 64:
                        {
                        alt100=1;
                        }
                        break;
                    case 65:
                        {
                        alt100=2;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 100, 0, input);

                        throw nvae;
                    }

                    switch (alt100) {
                        case 1 :
                            // InternalScadeEquations.g:5080:6: lv_expression_0_1= ruleAnnotatedExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_0_1=ruleAnnotatedExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTestEntityRule());
                              						}
                              						set(
                              							current,
                              							"expression",
                              							lv_expression_0_1,
                              							"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedExpression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalScadeEquations.g:5096:6: lv_expression_0_2= ruleAnnotatedJsonExpression
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedJsonExpressionParserRuleCall_0_0_1());
                              					
                            }
                            pushFollow(FollowSets000.FOLLOW_2);
                            lv_expression_0_2=ruleAnnotatedJsonExpression();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getTestEntityRule());
                              						}
                              						set(
                              							current,
                              							"expression",
                              							lv_expression_0_2,
                              							"de.cau.cs.kieler.kexpressions.kext.KExt.AnnotatedJsonExpression");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:5115:3: ( (lv_effect_1_0= ruleEffect ) )
                    {
                    // InternalScadeEquations.g:5115:3: ( (lv_effect_1_0= ruleEffect ) )
                    // InternalScadeEquations.g:5116:4: (lv_effect_1_0= ruleEffect )
                    {
                    // InternalScadeEquations.g:5116:4: (lv_effect_1_0= ruleEffect )
                    // InternalScadeEquations.g:5117:5: lv_effect_1_0= ruleEffect
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTestEntityAccess().getEffectEffectParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_effect_1_0=ruleEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTestEntityRule());
                      					}
                      					set(
                      						current,
                      						"effect",
                      						lv_effect_1_0,
                      						"de.cau.cs.kieler.kexpressions.keffects.KEffects.Effect");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTestEntity"


    // $ANTLR start "entryRuleAnnotatedExpression"
    // InternalScadeEquations.g:5138:1: entryRuleAnnotatedExpression returns [EObject current=null] : iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF ;
    public final EObject entryRuleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedExpression = null;


        try {
            // InternalScadeEquations.g:5138:60: (iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF )
            // InternalScadeEquations.g:5139:2: iv_ruleAnnotatedExpression= ruleAnnotatedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedExpression=ruleAnnotatedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedExpression"


    // $ANTLR start "ruleAnnotatedExpression"
    // InternalScadeEquations.g:5145:1: ruleAnnotatedExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleAnnotatedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5151:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalScadeEquations.g:5152:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalScadeEquations.g:5152:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) ) )
            // InternalScadeEquations.g:5153:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'expression' ( (lv_expression_2_0= ruleExpression ) )
            {
            // InternalScadeEquations.g:5153:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop102:
            do {
                int alt102=2;
                int LA102_0 = input.LA(1);

                if ( (LA102_0==RULE_COMMENT_ANNOTATION||LA102_0==92) ) {
                    alt102=1;
                }


                switch (alt102) {
            	case 1 :
            	    // InternalScadeEquations.g:5154:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:5154:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:5155:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_68);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop102;
                }
            } while (true);

            otherlv_1=(Token)match(input,64,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedExpressionAccess().getExpressionKeyword_1());
              		
            }
            // InternalScadeEquations.g:5176:3: ( (lv_expression_2_0= ruleExpression ) )
            // InternalScadeEquations.g:5177:4: (lv_expression_2_0= ruleExpression )
            {
            // InternalScadeEquations.g:5177:4: (lv_expression_2_0= ruleExpression )
            // InternalScadeEquations.g:5178:5: lv_expression_2_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedExpressionAccess().getExpressionExpressionParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedExpression"


    // $ANTLR start "entryRuleAnnotatedJsonExpression"
    // InternalScadeEquations.g:5199:1: entryRuleAnnotatedJsonExpression returns [EObject current=null] : iv_ruleAnnotatedJsonExpression= ruleAnnotatedJsonExpression EOF ;
    public final EObject entryRuleAnnotatedJsonExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedJsonExpression = null;


        try {
            // InternalScadeEquations.g:5199:64: (iv_ruleAnnotatedJsonExpression= ruleAnnotatedJsonExpression EOF )
            // InternalScadeEquations.g:5200:2: iv_ruleAnnotatedJsonExpression= ruleAnnotatedJsonExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedJsonExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotatedJsonExpression=ruleAnnotatedJsonExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedJsonExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedJsonExpression"


    // $ANTLR start "ruleAnnotatedJsonExpression"
    // InternalScadeEquations.g:5206:1: ruleAnnotatedJsonExpression returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleAnnotatedJsonExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5212:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) ) )
            // InternalScadeEquations.g:5213:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalScadeEquations.g:5213:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) ) )
            // InternalScadeEquations.g:5214:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'json' ( (lv_expression_2_0= ruleJsonObjectValue ) )
            {
            // InternalScadeEquations.g:5214:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop103:
            do {
                int alt103=2;
                int LA103_0 = input.LA(1);

                if ( (LA103_0==RULE_COMMENT_ANNOTATION||LA103_0==92) ) {
                    alt103=1;
                }


                switch (alt103) {
            	case 1 :
            	    // InternalScadeEquations.g:5215:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:5215:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:5216:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedJsonExpressionAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_69);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedJsonExpressionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop103;
                }
            } while (true);

            otherlv_1=(Token)match(input,65,FollowSets000.FOLLOW_16); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getAnnotatedJsonExpressionAccess().getJsonKeyword_1());
              		
            }
            // InternalScadeEquations.g:5237:3: ( (lv_expression_2_0= ruleJsonObjectValue ) )
            // InternalScadeEquations.g:5238:4: (lv_expression_2_0= ruleJsonObjectValue )
            {
            // InternalScadeEquations.g:5238:4: (lv_expression_2_0= ruleJsonObjectValue )
            // InternalScadeEquations.g:5239:5: lv_expression_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedJsonExpressionAccess().getExpressionJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_expression_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedJsonExpressionRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedJsonExpression"


    // $ANTLR start "entryRuleDeclaration"
    // InternalScadeEquations.g:5260:1: entryRuleDeclaration returns [EObject current=null] : iv_ruleDeclaration= ruleDeclaration EOF ;
    public final EObject entryRuleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclaration = null;


        try {
            // InternalScadeEquations.g:5260:52: (iv_ruleDeclaration= ruleDeclaration EOF )
            // InternalScadeEquations.g:5261:2: iv_ruleDeclaration= ruleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclaration=ruleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclaration"


    // $ANTLR start "ruleDeclaration"
    // InternalScadeEquations.g:5267:1: ruleDeclaration returns [EObject current=null] : (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration ) ;
    public final EObject ruleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclaration_0 = null;

        EObject this_ReferenceDeclaration_1 = null;

        EObject this_ScheduleDeclaration_2 = null;

        EObject this_ClassDeclaration_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5273:2: ( (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration ) )
            // InternalScadeEquations.g:5274:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )
            {
            // InternalScadeEquations.g:5274:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )
            int alt104=4;
            alt104 = dfa104.predict(input);
            switch (alt104) {
                case 1 :
                    // InternalScadeEquations.g:5275:3: this_VariableDeclaration_0= ruleVariableDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getVariableDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclaration_0=ruleVariableDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:5287:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getReferenceDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclaration_1=ruleReferenceDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:5299:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getScheduleDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclaration_2=ruleScheduleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:5311:3: this_ClassDeclaration_3= ruleClassDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationAccess().getClassDeclarationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclaration_3=ruleClassDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclaration_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclaration"


    // $ANTLR start "entryRuleDeclarationWOSemicolon"
    // InternalScadeEquations.g:5326:1: entryRuleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:5326:63: (iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:5327:2: iv_ruleDeclarationWOSemicolon= ruleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationWOSemicolon=ruleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationWOSemicolon"


    // $ANTLR start "ruleDeclarationWOSemicolon"
    // InternalScadeEquations.g:5333:1: ruleDeclarationWOSemicolon returns [EObject current=null] : (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_VariableDeclarationWOSemicolon_0 = null;

        EObject this_ReferenceDeclarationWOSemicolon_1 = null;

        EObject this_ScheduleDeclarationWOSemicolon_2 = null;

        EObject this_ClassDeclarationWOSemicolon_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5339:2: ( (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon ) )
            // InternalScadeEquations.g:5340:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )
            {
            // InternalScadeEquations.g:5340:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )
            int alt105=4;
            alt105 = dfa105.predict(input);
            switch (alt105) {
                case 1 :
                    // InternalScadeEquations.g:5341:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getVariableDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VariableDeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:5353:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getReferenceDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:5365:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getScheduleDeclarationWOSemicolonParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ScheduleDeclarationWOSemicolon_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:5377:3: this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationWOSemicolonAccess().getClassDeclarationWOSemicolonParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ClassDeclarationWOSemicolon_3=ruleClassDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ClassDeclarationWOSemicolon_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleVariableDeclaration"
    // InternalScadeEquations.g:5392:1: entryRuleVariableDeclaration returns [EObject current=null] : iv_ruleVariableDeclaration= ruleVariableDeclaration EOF ;
    public final EObject entryRuleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclaration = null;


        try {
            // InternalScadeEquations.g:5392:60: (iv_ruleVariableDeclaration= ruleVariableDeclaration EOF )
            // InternalScadeEquations.g:5393:2: iv_ruleVariableDeclaration= ruleVariableDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclaration=ruleVariableDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclaration"


    // $ANTLR start "ruleVariableDeclaration"
    // InternalScadeEquations.g:5399:1: ruleVariableDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_16_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5405:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:5406:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:5406:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:5407:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* otherlv_15= ';' ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:5407:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop106:
            do {
                int alt106=2;
                int LA106_0 = input.LA(1);

                if ( (LA106_0==RULE_COMMENT_ANNOTATION||LA106_0==92) ) {
                    alt106=1;
                }


                switch (alt106) {
            	case 1 :
            	    // InternalScadeEquations.g:5408:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:5408:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:5409:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop106;
                }
            } while (true);

            // InternalScadeEquations.g:5426:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( ((LA107_0>=119 && LA107_0<=121)) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalScadeEquations.g:5427:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:5427:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:5428:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_70);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5445:3: ( (lv_const_2_0= 'const' ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==33) ) {
                alt108=1;
            }
            switch (alt108) {
                case 1 :
                    // InternalScadeEquations.g:5446:4: (lv_const_2_0= 'const' )
                    {
                    // InternalScadeEquations.g:5446:4: (lv_const_2_0= 'const' )
                    // InternalScadeEquations.g:5447:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,33,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "const", lv_const_2_0 != null, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5459:3: ( (lv_input_3_0= 'input' ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==66) ) {
                alt109=1;
            }
            switch (alt109) {
                case 1 :
                    // InternalScadeEquations.g:5460:4: (lv_input_3_0= 'input' )
                    {
                    // InternalScadeEquations.g:5460:4: (lv_input_3_0= 'input' )
                    // InternalScadeEquations.g:5461:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,66,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "input", lv_input_3_0 != null, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5473:3: ( (lv_output_4_0= 'output' ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==67) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalScadeEquations.g:5474:4: (lv_output_4_0= 'output' )
                    {
                    // InternalScadeEquations.g:5474:4: (lv_output_4_0= 'output' )
                    // InternalScadeEquations.g:5475:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,67,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "output", lv_output_4_0 != null, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5487:3: ( (lv_global_5_0= 'global' ) )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==68) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalScadeEquations.g:5488:4: (lv_global_5_0= 'global' )
                    {
                    // InternalScadeEquations.g:5488:4: (lv_global_5_0= 'global' )
                    // InternalScadeEquations.g:5489:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,68,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "global", lv_global_5_0 != null, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5501:3: ( (lv_static_6_0= 'static' ) )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==69) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalScadeEquations.g:5502:4: (lv_static_6_0= 'static' )
                    {
                    // InternalScadeEquations.g:5502:4: (lv_static_6_0= 'static' )
                    // InternalScadeEquations.g:5503:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,69,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "static", lv_static_6_0 != null, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5515:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt114=3;
            switch ( input.LA(1) ) {
            case 70:
                {
                int LA114_1 = input.LA(2);

                if ( (LA114_1==RULE_ID||LA114_1==RULE_COMMENT_ANNOTATION||LA114_1==92) ) {
                    alt114=2;
                }
                else if ( ((LA114_1>=93 && LA114_1<=95)) ) {
                    alt114=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 114, 1, input);

                    throw nvae;
                }
                }
                break;
            case 93:
            case 94:
            case 95:
                {
                alt114=1;
                }
                break;
            case 71:
                {
                alt114=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }

            switch (alt114) {
                case 1 :
                    // InternalScadeEquations.g:5516:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalScadeEquations.g:5516:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalScadeEquations.g:5517:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalScadeEquations.g:5517:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt113=2;
                    int LA113_0 = input.LA(1);

                    if ( (LA113_0==70) ) {
                        alt113=1;
                    }
                    switch (alt113) {
                        case 1 :
                            // InternalScadeEquations.g:5518:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalScadeEquations.g:5518:6: (lv_signal_7_0= 'signal' )
                            // InternalScadeEquations.g:5519:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,70,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "signal", lv_signal_7_0 != null, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalScadeEquations.g:5531:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalScadeEquations.g:5532:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalScadeEquations.g:5532:6: (lv_type_8_0= ruleValueType )
                    // InternalScadeEquations.g:5533:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_36);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.lustre.Lustre.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:5552:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalScadeEquations.g:5552:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalScadeEquations.g:5553:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalScadeEquations.g:5553:5: (lv_signal_9_0= 'signal' )
                    // InternalScadeEquations.g:5554:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,70,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      						}
                      						setWithLastConsumed(current, "signal", lv_signal_9_0 != null, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:5567:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalScadeEquations.g:5567:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalScadeEquations.g:5568:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalScadeEquations.g:5568:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalScadeEquations.g:5569:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalScadeEquations.g:5569:6: (lv_type_10_0= ruleHostType )
                    // InternalScadeEquations.g:5570:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_71);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:5587:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalScadeEquations.g:5588:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:5588:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalScadeEquations.g:5589:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5607:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalScadeEquations.g:5608:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalScadeEquations.g:5608:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalScadeEquations.g:5609:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_72);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:5626:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop115:
            do {
                int alt115=2;
                int LA115_0 = input.LA(1);

                if ( (LA115_0==18) ) {
                    alt115=1;
                }


                switch (alt115) {
            	case 1 :
            	    // InternalScadeEquations.g:5627:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:5631:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalScadeEquations.g:5632:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalScadeEquations.g:5632:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalScadeEquations.g:5633:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_72);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop115;
                }
            } while (true);

            otherlv_15=(Token)match(input,20,FollowSets000.FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_15, grammarAccess.getVariableDeclarationAccess().getSemicolonKeyword_10());
              		
            }
            // InternalScadeEquations.g:5655:3: ( (lv_annotations_16_0= ruleCommentAnnotatonSL ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalScadeEquations.g:5656:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:5656:4: (lv_annotations_16_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:5657:5: lv_annotations_16_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_11_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_16_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_16_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclaration"


    // $ANTLR start "entryRuleVariableDeclarationWOSemicolon"
    // InternalScadeEquations.g:5678:1: entryRuleVariableDeclarationWOSemicolon returns [EObject current=null] : iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF ;
    public final EObject entryRuleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVariableDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:5678:71: (iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:5679:2: iv_ruleVariableDeclarationWOSemicolon= ruleVariableDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVariableDeclarationWOSemicolon=ruleVariableDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVariableDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVariableDeclarationWOSemicolon"


    // $ANTLR start "ruleVariableDeclarationWOSemicolon"
    // InternalScadeEquations.g:5685:1: ruleVariableDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleVariableDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_const_2_0=null;
        Token lv_input_3_0=null;
        Token lv_output_4_0=null;
        Token lv_global_5_0=null;
        Token lv_static_6_0=null;
        Token lv_signal_7_0=null;
        Token lv_signal_9_0=null;
        Token lv_hostType_11_0=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_type_8_0 = null;

        Enumerator lv_type_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5691:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:5692:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:5692:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:5693:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( (lv_const_2_0= 'const' ) )? ( (lv_input_3_0= 'input' ) )? ( (lv_output_4_0= 'output' ) )? ( (lv_global_5_0= 'global' ) )? ( (lv_static_6_0= 'static' ) )? ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) ) ( (lv_valuedObjects_12_0= ruleValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )* ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:5693:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop117:
            do {
                int alt117=2;
                int LA117_0 = input.LA(1);

                if ( (LA117_0==RULE_COMMENT_ANNOTATION||LA117_0==92) ) {
                    alt117=1;
                }


                switch (alt117) {
            	case 1 :
            	    // InternalScadeEquations.g:5694:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:5694:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:5695:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_70);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop117;
                }
            } while (true);

            // InternalScadeEquations.g:5712:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt118=2;
            int LA118_0 = input.LA(1);

            if ( ((LA118_0>=119 && LA118_0<=121)) ) {
                alt118=1;
            }
            switch (alt118) {
                case 1 :
                    // InternalScadeEquations.g:5713:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:5713:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:5714:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_70);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5731:3: ( (lv_const_2_0= 'const' ) )?
            int alt119=2;
            int LA119_0 = input.LA(1);

            if ( (LA119_0==33) ) {
                alt119=1;
            }
            switch (alt119) {
                case 1 :
                    // InternalScadeEquations.g:5732:4: (lv_const_2_0= 'const' )
                    {
                    // InternalScadeEquations.g:5732:4: (lv_const_2_0= 'const' )
                    // InternalScadeEquations.g:5733:5: lv_const_2_0= 'const'
                    {
                    lv_const_2_0=(Token)match(input,33,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_const_2_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getConstConstKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "const", lv_const_2_0 != null, "const");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5745:3: ( (lv_input_3_0= 'input' ) )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==66) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalScadeEquations.g:5746:4: (lv_input_3_0= 'input' )
                    {
                    // InternalScadeEquations.g:5746:4: (lv_input_3_0= 'input' )
                    // InternalScadeEquations.g:5747:5: lv_input_3_0= 'input'
                    {
                    lv_input_3_0=(Token)match(input,66,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_input_3_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getInputInputKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "input", lv_input_3_0 != null, "input");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5759:3: ( (lv_output_4_0= 'output' ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==67) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalScadeEquations.g:5760:4: (lv_output_4_0= 'output' )
                    {
                    // InternalScadeEquations.g:5760:4: (lv_output_4_0= 'output' )
                    // InternalScadeEquations.g:5761:5: lv_output_4_0= 'output'
                    {
                    lv_output_4_0=(Token)match(input,67,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_output_4_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getOutputOutputKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "output", lv_output_4_0 != null, "output");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5773:3: ( (lv_global_5_0= 'global' ) )?
            int alt122=2;
            int LA122_0 = input.LA(1);

            if ( (LA122_0==68) ) {
                alt122=1;
            }
            switch (alt122) {
                case 1 :
                    // InternalScadeEquations.g:5774:4: (lv_global_5_0= 'global' )
                    {
                    // InternalScadeEquations.g:5774:4: (lv_global_5_0= 'global' )
                    // InternalScadeEquations.g:5775:5: lv_global_5_0= 'global'
                    {
                    lv_global_5_0=(Token)match(input,68,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_global_5_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getGlobalGlobalKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "global", lv_global_5_0 != null, "global");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5787:3: ( (lv_static_6_0= 'static' ) )?
            int alt123=2;
            int LA123_0 = input.LA(1);

            if ( (LA123_0==69) ) {
                alt123=1;
            }
            switch (alt123) {
                case 1 :
                    // InternalScadeEquations.g:5788:4: (lv_static_6_0= 'static' )
                    {
                    // InternalScadeEquations.g:5788:4: (lv_static_6_0= 'static' )
                    // InternalScadeEquations.g:5789:5: lv_static_6_0= 'static'
                    {
                    lv_static_6_0=(Token)match(input,69,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_static_6_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getStaticStaticKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "static", lv_static_6_0 != null, "static");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5801:3: ( ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) ) | ( (lv_signal_9_0= 'signal' ) ) | ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) ) )
            int alt125=3;
            switch ( input.LA(1) ) {
            case 70:
                {
                int LA125_1 = input.LA(2);

                if ( ((LA125_1>=93 && LA125_1<=95)) ) {
                    alt125=1;
                }
                else if ( (LA125_1==RULE_ID||LA125_1==RULE_COMMENT_ANNOTATION||LA125_1==92) ) {
                    alt125=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 125, 1, input);

                    throw nvae;
                }
                }
                break;
            case 93:
            case 94:
            case 95:
                {
                alt125=1;
                }
                break;
            case 71:
                {
                alt125=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 125, 0, input);

                throw nvae;
            }

            switch (alt125) {
                case 1 :
                    // InternalScadeEquations.g:5802:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    {
                    // InternalScadeEquations.g:5802:4: ( ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) ) )
                    // InternalScadeEquations.g:5803:5: ( (lv_signal_7_0= 'signal' ) )? ( (lv_type_8_0= ruleValueType ) )
                    {
                    // InternalScadeEquations.g:5803:5: ( (lv_signal_7_0= 'signal' ) )?
                    int alt124=2;
                    int LA124_0 = input.LA(1);

                    if ( (LA124_0==70) ) {
                        alt124=1;
                    }
                    switch (alt124) {
                        case 1 :
                            // InternalScadeEquations.g:5804:6: (lv_signal_7_0= 'signal' )
                            {
                            // InternalScadeEquations.g:5804:6: (lv_signal_7_0= 'signal' )
                            // InternalScadeEquations.g:5805:7: lv_signal_7_0= 'signal'
                            {
                            lv_signal_7_0=(Token)match(input,70,FollowSets000.FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_signal_7_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(current, "signal", lv_signal_7_0 != null, "signal");
                              						
                            }

                            }


                            }
                            break;

                    }

                    // InternalScadeEquations.g:5817:5: ( (lv_type_8_0= ruleValueType ) )
                    // InternalScadeEquations.g:5818:6: (lv_type_8_0= ruleValueType )
                    {
                    // InternalScadeEquations.g:5818:6: (lv_type_8_0= ruleValueType )
                    // InternalScadeEquations.g:5819:7: lv_type_8_0= ruleValueType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeValueTypeEnumRuleCall_7_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_36);
                    lv_type_8_0=ruleValueType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_8_0,
                      								"de.cau.cs.kieler.lustre.Lustre.ValueType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:5838:4: ( (lv_signal_9_0= 'signal' ) )
                    {
                    // InternalScadeEquations.g:5838:4: ( (lv_signal_9_0= 'signal' ) )
                    // InternalScadeEquations.g:5839:5: (lv_signal_9_0= 'signal' )
                    {
                    // InternalScadeEquations.g:5839:5: (lv_signal_9_0= 'signal' )
                    // InternalScadeEquations.g:5840:6: lv_signal_9_0= 'signal'
                    {
                    lv_signal_9_0=(Token)match(input,70,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_signal_9_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getSignalSignalKeyword_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      						}
                      						setWithLastConsumed(current, "signal", lv_signal_9_0 != null, "signal");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:5853:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    {
                    // InternalScadeEquations.g:5853:4: ( ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) ) )
                    // InternalScadeEquations.g:5854:5: ( (lv_type_10_0= ruleHostType ) ) ( (lv_hostType_11_0= RULE_STRING ) )
                    {
                    // InternalScadeEquations.g:5854:5: ( (lv_type_10_0= ruleHostType ) )
                    // InternalScadeEquations.g:5855:6: (lv_type_10_0= ruleHostType )
                    {
                    // InternalScadeEquations.g:5855:6: (lv_type_10_0= ruleHostType )
                    // InternalScadeEquations.g:5856:7: lv_type_10_0= ruleHostType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getTypeHostTypeEnumRuleCall_7_2_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_71);
                    lv_type_10_0=ruleHostType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_10_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.HostType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:5873:5: ( (lv_hostType_11_0= RULE_STRING ) )
                    // InternalScadeEquations.g:5874:6: (lv_hostType_11_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:5874:6: (lv_hostType_11_0= RULE_STRING )
                    // InternalScadeEquations.g:5875:7: lv_hostType_11_0= RULE_STRING
                    {
                    lv_hostType_11_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_hostType_11_0, grammarAccess.getVariableDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_7_2_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"hostType",
                      								lv_hostType_11_0,
                      								"de.cau.cs.kieler.annotations.Annotations.STRING");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:5893:3: ( (lv_valuedObjects_12_0= ruleValuedObject ) )
            // InternalScadeEquations.g:5894:4: (lv_valuedObjects_12_0= ruleValuedObject )
            {
            // InternalScadeEquations.g:5894:4: (lv_valuedObjects_12_0= ruleValuedObject )
            // InternalScadeEquations.g:5895:5: lv_valuedObjects_12_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_74);
            lv_valuedObjects_12_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_12_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:5912:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*
            loop126:
            do {
                int alt126=2;
                alt126 = dfa126.predict(input);
                switch (alt126) {
            	case 1 :
            	    // InternalScadeEquations.g:5913:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    {
            	    otherlv_13=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_13, grammarAccess.getVariableDeclarationWOSemicolonAccess().getCommaKeyword_9_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:5917:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
            	    // InternalScadeEquations.g:5918:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    {
            	    // InternalScadeEquations.g:5918:5: (lv_valuedObjects_14_0= ruleValuedObject )
            	    // InternalScadeEquations.g:5919:6: lv_valuedObjects_14_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_74);
            	    lv_valuedObjects_14_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_14_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop126;
                }
            } while (true);

            // InternalScadeEquations.g:5937:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalScadeEquations.g:5938:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:5938:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:5939:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getVariableDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVariableDeclarationWOSemicolon"


    // $ANTLR start "entryRuleClassDeclaration"
    // InternalScadeEquations.g:5960:1: entryRuleClassDeclaration returns [EObject current=null] : iv_ruleClassDeclaration= ruleClassDeclaration EOF ;
    public final EObject entryRuleClassDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclaration = null;


        try {
            // InternalScadeEquations.g:5960:57: (iv_ruleClassDeclaration= ruleClassDeclaration EOF )
            // InternalScadeEquations.g:5961:2: iv_ruleClassDeclaration= ruleClassDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclaration=ruleClassDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclaration"


    // $ANTLR start "ruleClassDeclaration"
    // InternalScadeEquations.g:5967:1: ruleClassDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethod ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ) ) ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_host_3_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_declarations_7_0 = null;

        Enumerator lv_type_9_0 = null;

        AntlrDatatypeRuleToken lv_name_10_0 = null;

        EObject lv_declarations_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_valuedObjects_16_0 = null;

        EObject lv_annotations_18_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:5973:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethod ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ) ) ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:5974:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethod ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ) ) ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:5974:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethod ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ) ) ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:5975:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethod ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ) ) ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? otherlv_17= ';' ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:5975:3: ()
            // InternalScadeEquations.g:5976:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:5985:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop128:
            do {
                int alt128=2;
                int LA128_0 = input.LA(1);

                if ( (LA128_0==RULE_COMMENT_ANNOTATION||LA128_0==92) ) {
                    alt128=1;
                }


                switch (alt128) {
            	case 1 :
            	    // InternalScadeEquations.g:5986:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:5986:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:5987:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_75);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop128;
                }
            } while (true);

            // InternalScadeEquations.g:6004:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt129=2;
            int LA129_0 = input.LA(1);

            if ( ((LA129_0>=119 && LA129_0<=121)) ) {
                alt129=1;
            }
            switch (alt129) {
                case 1 :
                    // InternalScadeEquations.g:6005:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:6005:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalScadeEquations.g:6006:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6023:3: ( (lv_host_3_0= 'host' ) )?
            int alt130=2;
            int LA130_0 = input.LA(1);

            if ( (LA130_0==71) ) {
                alt130=1;
            }
            switch (alt130) {
                case 1 :
                    // InternalScadeEquations.g:6024:4: (lv_host_3_0= 'host' )
                    {
                    // InternalScadeEquations.g:6024:4: (lv_host_3_0= 'host' )
                    // InternalScadeEquations.g:6025:5: lv_host_3_0= 'host'
                    {
                    lv_host_3_0=(Token)match(input,71,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_3_0, grammarAccess.getClassDeclarationAccess().getHostHostKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "host", lv_host_3_0 != null, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6037:3: ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethod ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' ) )
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==115) ) {
                alt135=1;
            }
            else if ( (LA135_0==114) ) {
                alt135=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }
            switch (alt135) {
                case 1 :
                    // InternalScadeEquations.g:6038:4: ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethod ) )* otherlv_8= '}' )
                    {
                    // InternalScadeEquations.g:6038:4: ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethod ) )* otherlv_8= '}' )
                    // InternalScadeEquations.g:6039:5: ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethod ) )* otherlv_8= '}'
                    {
                    // InternalScadeEquations.g:6039:5: ( (lv_type_4_0= ruleClassType ) )
                    // InternalScadeEquations.g:6040:6: (lv_type_4_0= ruleClassType )
                    {
                    // InternalScadeEquations.g:6040:6: (lv_type_4_0= ruleClassType )
                    // InternalScadeEquations.g:6041:7: lv_type_4_0= ruleClassType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeClassTypeEnumRuleCall_4_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_78);
                    lv_type_4_0=ruleClassType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:6058:5: ( (lv_name_5_0= ruleEString ) )?
                    int alt131=2;
                    int LA131_0 = input.LA(1);

                    if ( ((LA131_0>=RULE_ID && LA131_0<=RULE_STRING)) ) {
                        alt131=1;
                    }
                    switch (alt131) {
                        case 1 :
                            // InternalScadeEquations.g:6059:6: (lv_name_5_0= ruleEString )
                            {
                            // InternalScadeEquations.g:6059:6: (lv_name_5_0= ruleEString )
                            // InternalScadeEquations.g:6060:7: lv_name_5_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameEStringParserRuleCall_4_0_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_name_5_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_5_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_4_0_2());
                      				
                    }
                    // InternalScadeEquations.g:6081:5: ( (lv_declarations_7_0= ruleDeclarationOrMethod ) )*
                    loop132:
                    do {
                        int alt132=2;
                        int LA132_0 = input.LA(1);

                        if ( (LA132_0==RULE_ID||LA132_0==RULE_COMMENT_ANNOTATION||LA132_0==25||LA132_0==33||(LA132_0>=66 && LA132_0<=73)||(LA132_0>=92 && LA132_0<=96)||(LA132_0>=114 && LA132_0<=115)||(LA132_0>=119 && LA132_0<=124)) ) {
                            alt132=1;
                        }


                        switch (alt132) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6082:6: (lv_declarations_7_0= ruleDeclarationOrMethod )
                    	    {
                    	    // InternalScadeEquations.g:6082:6: (lv_declarations_7_0= ruleDeclarationOrMethod )
                    	    // InternalScadeEquations.g:6083:7: lv_declarations_7_0= ruleDeclarationOrMethod
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationOrMethodParserRuleCall_4_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_79);
                    	    lv_declarations_7_0=ruleDeclarationOrMethod();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_7_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethod");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop132;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,23,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_4_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:6106:4: ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' )
                    {
                    // InternalScadeEquations.g:6106:4: ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}' )
                    // InternalScadeEquations.g:6107:5: ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclaration ) )* otherlv_13= '}'
                    {
                    // InternalScadeEquations.g:6107:5: ( (lv_type_9_0= ruleStructType ) )
                    // InternalScadeEquations.g:6108:6: (lv_type_9_0= ruleStructType )
                    {
                    // InternalScadeEquations.g:6108:6: (lv_type_9_0= ruleStructType )
                    // InternalScadeEquations.g:6109:7: lv_type_9_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getTypeStructTypeEnumRuleCall_4_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_78);
                    lv_type_9_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_9_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:6126:5: ( (lv_name_10_0= ruleEString ) )?
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( ((LA133_0>=RULE_ID && LA133_0<=RULE_STRING)) ) {
                        alt133=1;
                    }
                    switch (alt133) {
                        case 1 :
                            // InternalScadeEquations.g:6127:6: (lv_name_10_0= ruleEString )
                            {
                            // InternalScadeEquations.g:6127:6: (lv_name_10_0= ruleEString )
                            // InternalScadeEquations.g:6128:7: lv_name_10_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationAccess().getNameEStringParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_name_10_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_10_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,22,FollowSets000.FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationAccess().getLeftCurlyBracketKeyword_4_1_2());
                      				
                    }
                    // InternalScadeEquations.g:6149:5: ( (lv_declarations_12_0= ruleDeclaration ) )*
                    loop134:
                    do {
                        int alt134=2;
                        int LA134_0 = input.LA(1);

                        if ( (LA134_0==RULE_COMMENT_ANNOTATION||LA134_0==25||LA134_0==33||(LA134_0>=66 && LA134_0<=73)||(LA134_0>=92 && LA134_0<=95)||(LA134_0>=114 && LA134_0<=115)||(LA134_0>=119 && LA134_0<=121)) ) {
                            alt134=1;
                        }


                        switch (alt134) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6150:6: (lv_declarations_12_0= ruleDeclaration )
                    	    {
                    	    // InternalScadeEquations.g:6150:6: (lv_declarations_12_0= ruleDeclaration )
                    	    // InternalScadeEquations.g:6151:7: lv_declarations_12_0= ruleDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getDeclarationsDeclarationParserRuleCall_4_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_65);
                    	    lv_declarations_12_0=ruleDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_12_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.Declaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop134;
                        }
                    } while (true);

                    otherlv_13=(Token)match(input,23,FollowSets000.FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getClassDeclarationAccess().getRightCurlyBracketKeyword_4_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6174:3: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==RULE_ID||LA137_0==RULE_COMMENT_ANNOTATION||LA137_0==92) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalScadeEquations.g:6175:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    {
                    // InternalScadeEquations.g:6175:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
                    // InternalScadeEquations.g:6176:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    {
                    // InternalScadeEquations.g:6176:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    // InternalScadeEquations.g:6177:6: lv_valuedObjects_14_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_valuedObjects_14_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_14_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:6194:4: (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    loop136:
                    do {
                        int alt136=2;
                        int LA136_0 = input.LA(1);

                        if ( (LA136_0==18) ) {
                            alt136=1;
                        }


                        switch (alt136) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6195:5: otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_15=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getClassDeclarationAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:6199:5: ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    // InternalScadeEquations.g:6200:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    {
                    	    // InternalScadeEquations.g:6200:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    // InternalScadeEquations.g:6201:7: lv_valuedObjects_16_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_72);
                    	    lv_valuedObjects_16_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_16_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop136;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_17=(Token)match(input,20,FollowSets000.FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_17, grammarAccess.getClassDeclarationAccess().getSemicolonKeyword_6());
              		
            }
            // InternalScadeEquations.g:6224:3: ( (lv_annotations_18_0= ruleCommentAnnotatonSL ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalScadeEquations.g:6225:4: (lv_annotations_18_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:6225:4: (lv_annotations_18_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:6226:5: lv_annotations_18_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_18_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_18_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclaration"


    // $ANTLR start "entryRuleDeclarationOrMethod"
    // InternalScadeEquations.g:6247:1: entryRuleDeclarationOrMethod returns [EObject current=null] : iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF ;
    public final EObject entryRuleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethod = null;


        try {
            // InternalScadeEquations.g:6247:60: (iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF )
            // InternalScadeEquations.g:6248:2: iv_ruleDeclarationOrMethod= ruleDeclarationOrMethod EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethod=ruleDeclarationOrMethod();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethod; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethod"


    // $ANTLR start "ruleDeclarationOrMethod"
    // InternalScadeEquations.g:6254:1: ruleDeclarationOrMethod returns [EObject current=null] : (this_Declaration_0= ruleDeclaration | this_EnumDeclaration_1= ruleEnumDeclaration | this_MethodDeclaration_2= ruleMethodDeclaration ) ;
    public final EObject ruleDeclarationOrMethod() throws RecognitionException {
        EObject current = null;

        EObject this_Declaration_0 = null;

        EObject this_EnumDeclaration_1 = null;

        EObject this_MethodDeclaration_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6260:2: ( (this_Declaration_0= ruleDeclaration | this_EnumDeclaration_1= ruleEnumDeclaration | this_MethodDeclaration_2= ruleMethodDeclaration ) )
            // InternalScadeEquations.g:6261:2: (this_Declaration_0= ruleDeclaration | this_EnumDeclaration_1= ruleEnumDeclaration | this_MethodDeclaration_2= ruleMethodDeclaration )
            {
            // InternalScadeEquations.g:6261:2: (this_Declaration_0= ruleDeclaration | this_EnumDeclaration_1= ruleEnumDeclaration | this_MethodDeclaration_2= ruleMethodDeclaration )
            int alt139=3;
            alt139 = dfa139.predict(input);
            switch (alt139) {
                case 1 :
                    // InternalScadeEquations.g:6262:3: this_Declaration_0= ruleDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getDeclarationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Declaration_0=ruleDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Declaration_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:6274:3: this_EnumDeclaration_1= ruleEnumDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getEnumDeclarationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumDeclaration_1=ruleEnumDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EnumDeclaration_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:6286:3: this_MethodDeclaration_2= ruleMethodDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodAccess().getMethodDeclarationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclaration_2=ruleMethodDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclaration_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethod"


    // $ANTLR start "entryRuleClassDeclarationWOSemicolon"
    // InternalScadeEquations.g:6301:1: entryRuleClassDeclarationWOSemicolon returns [EObject current=null] : iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF ;
    public final EObject entryRuleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:6301:68: (iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:6302:2: iv_ruleClassDeclarationWOSemicolon= ruleClassDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleClassDeclarationWOSemicolon=ruleClassDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassDeclarationWOSemicolon"


    // $ANTLR start "ruleClassDeclarationWOSemicolon"
    // InternalScadeEquations.g:6308:1: ruleClassDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ) ) ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleClassDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_host_3_0=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_4_0 = null;

        AntlrDatatypeRuleToken lv_name_5_0 = null;

        EObject lv_declarations_7_0 = null;

        Enumerator lv_type_9_0 = null;

        AntlrDatatypeRuleToken lv_name_10_0 = null;

        EObject lv_declarations_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_valuedObjects_16_0 = null;

        EObject lv_annotations_17_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6314:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ) ) ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:6315:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ) ) ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:6315:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ) ) ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:6316:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ) ) ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )? ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:6316:3: ()
            // InternalScadeEquations.g:6317:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getClassDeclarationWOSemicolonAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:6326:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop140:
            do {
                int alt140=2;
                int LA140_0 = input.LA(1);

                if ( (LA140_0==RULE_COMMENT_ANNOTATION||LA140_0==92) ) {
                    alt140=1;
                }


                switch (alt140) {
            	case 1 :
            	    // InternalScadeEquations.g:6327:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:6327:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:6328:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_75);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop140;
                }
            } while (true);

            // InternalScadeEquations.g:6345:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt141=2;
            int LA141_0 = input.LA(1);

            if ( ((LA141_0>=119 && LA141_0<=121)) ) {
                alt141=1;
            }
            switch (alt141) {
                case 1 :
                    // InternalScadeEquations.g:6346:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:6346:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalScadeEquations.g:6347:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_76);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6364:3: ( (lv_host_3_0= 'host' ) )?
            int alt142=2;
            int LA142_0 = input.LA(1);

            if ( (LA142_0==71) ) {
                alt142=1;
            }
            switch (alt142) {
                case 1 :
                    // InternalScadeEquations.g:6365:4: (lv_host_3_0= 'host' )
                    {
                    // InternalScadeEquations.g:6365:4: (lv_host_3_0= 'host' )
                    // InternalScadeEquations.g:6366:5: lv_host_3_0= 'host'
                    {
                    lv_host_3_0=(Token)match(input,71,FollowSets000.FOLLOW_77); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_3_0, grammarAccess.getClassDeclarationWOSemicolonAccess().getHostHostKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "host", lv_host_3_0 != null, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6378:3: ( ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_8= '}' ) | ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' ) )
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( (LA147_0==115) ) {
                alt147=1;
            }
            else if ( (LA147_0==114) ) {
                alt147=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }
            switch (alt147) {
                case 1 :
                    // InternalScadeEquations.g:6379:4: ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_8= '}' )
                    {
                    // InternalScadeEquations.g:6379:4: ( ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_8= '}' )
                    // InternalScadeEquations.g:6380:5: ( (lv_type_4_0= ruleClassType ) ) ( (lv_name_5_0= ruleEString ) )? otherlv_6= '{' ( (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon ) )* otherlv_8= '}'
                    {
                    // InternalScadeEquations.g:6380:5: ( (lv_type_4_0= ruleClassType ) )
                    // InternalScadeEquations.g:6381:6: (lv_type_4_0= ruleClassType )
                    {
                    // InternalScadeEquations.g:6381:6: (lv_type_4_0= ruleClassType )
                    // InternalScadeEquations.g:6382:7: lv_type_4_0= ruleClassType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeClassTypeEnumRuleCall_4_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_78);
                    lv_type_4_0=ruleClassType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ClassType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:6399:5: ( (lv_name_5_0= ruleEString ) )?
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( ((LA143_0>=RULE_ID && LA143_0<=RULE_STRING)) ) {
                        alt143=1;
                    }
                    switch (alt143) {
                        case 1 :
                            // InternalScadeEquations.g:6400:6: (lv_name_5_0= ruleEString )
                            {
                            // InternalScadeEquations.g:6400:6: (lv_name_5_0= ruleEString )
                            // InternalScadeEquations.g:6401:7: lv_name_5_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getNameEStringParserRuleCall_4_0_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_name_5_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_5_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_4_0_2());
                      				
                    }
                    // InternalScadeEquations.g:6422:5: ( (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon ) )*
                    loop144:
                    do {
                        int alt144=2;
                        int LA144_0 = input.LA(1);

                        if ( (LA144_0==RULE_ID||LA144_0==RULE_COMMENT_ANNOTATION||LA144_0==25||LA144_0==33||(LA144_0>=66 && LA144_0<=73)||(LA144_0>=92 && LA144_0<=96)||(LA144_0>=114 && LA144_0<=115)||(LA144_0>=119 && LA144_0<=124)) ) {
                            alt144=1;
                        }


                        switch (alt144) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6423:6: (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon )
                    	    {
                    	    // InternalScadeEquations.g:6423:6: (lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon )
                    	    // InternalScadeEquations.g:6424:7: lv_declarations_7_0= ruleDeclarationOrMethodWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationOrMethodWOSemicolonParserRuleCall_4_0_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_79);
                    	    lv_declarations_7_0=ruleDeclarationOrMethodWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_7_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationOrMethodWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop144;
                        }
                    } while (true);

                    otherlv_8=(Token)match(input,23,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_4_0_4());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:6447:4: ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' )
                    {
                    // InternalScadeEquations.g:6447:4: ( ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}' )
                    // InternalScadeEquations.g:6448:5: ( (lv_type_9_0= ruleStructType ) ) ( (lv_name_10_0= ruleEString ) )? otherlv_11= '{' ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )* otherlv_13= '}'
                    {
                    // InternalScadeEquations.g:6448:5: ( (lv_type_9_0= ruleStructType ) )
                    // InternalScadeEquations.g:6449:6: (lv_type_9_0= ruleStructType )
                    {
                    // InternalScadeEquations.g:6449:6: (lv_type_9_0= ruleStructType )
                    // InternalScadeEquations.g:6450:7: lv_type_9_0= ruleStructType
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getTypeStructTypeEnumRuleCall_4_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_78);
                    lv_type_9_0=ruleStructType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      							}
                      							set(
                      								current,
                      								"type",
                      								lv_type_9_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.StructType");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:6467:5: ( (lv_name_10_0= ruleEString ) )?
                    int alt145=2;
                    int LA145_0 = input.LA(1);

                    if ( ((LA145_0>=RULE_ID && LA145_0<=RULE_STRING)) ) {
                        alt145=1;
                    }
                    switch (alt145) {
                        case 1 :
                            // InternalScadeEquations.g:6468:6: (lv_name_10_0= ruleEString )
                            {
                            // InternalScadeEquations.g:6468:6: (lv_name_10_0= ruleEString )
                            // InternalScadeEquations.g:6469:7: lv_name_10_0= ruleEString
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getNameEStringParserRuleCall_4_1_1_0());
                              						
                            }
                            pushFollow(FollowSets000.FOLLOW_16);
                            lv_name_10_0=ruleEString();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                              							}
                              							set(
                              								current,
                              								"name",
                              								lv_name_10_0,
                              								"de.cau.cs.kieler.annotations.Annotations.EString");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_11=(Token)match(input,22,FollowSets000.FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getClassDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_4_1_2());
                      				
                    }
                    // InternalScadeEquations.g:6490:5: ( (lv_declarations_12_0= ruleDeclarationWOSemicolon ) )*
                    loop146:
                    do {
                        int alt146=2;
                        int LA146_0 = input.LA(1);

                        if ( (LA146_0==RULE_COMMENT_ANNOTATION||LA146_0==25||LA146_0==33||(LA146_0>=66 && LA146_0<=73)||(LA146_0>=92 && LA146_0<=95)||(LA146_0>=114 && LA146_0<=115)||(LA146_0>=119 && LA146_0<=121)) ) {
                            alt146=1;
                        }


                        switch (alt146) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6491:6: (lv_declarations_12_0= ruleDeclarationWOSemicolon )
                    	    {
                    	    // InternalScadeEquations.g:6491:6: (lv_declarations_12_0= ruleDeclarationWOSemicolon )
                    	    // InternalScadeEquations.g:6492:7: lv_declarations_12_0= ruleDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getDeclarationsDeclarationWOSemicolonParserRuleCall_4_1_3_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_82);
                    	    lv_declarations_12_0=ruleDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"declarations",
                    	      								lv_declarations_12_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.DeclarationWOSemicolon");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop146;
                        }
                    } while (true);

                    otherlv_13=(Token)match(input,23,FollowSets000.FOLLOW_81); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_13, grammarAccess.getClassDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_4_1_4());
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6515:3: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )?
            int alt149=2;
            alt149 = dfa149.predict(input);
            switch (alt149) {
                case 1 :
                    // InternalScadeEquations.g:6516:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    {
                    // InternalScadeEquations.g:6516:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
                    // InternalScadeEquations.g:6517:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    {
                    // InternalScadeEquations.g:6517:5: (lv_valuedObjects_14_0= ruleValuedObject )
                    // InternalScadeEquations.g:6518:6: lv_valuedObjects_14_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_5_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_valuedObjects_14_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"valuedObjects",
                      							lv_valuedObjects_14_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:6535:4: (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
                    loop148:
                    do {
                        int alt148=2;
                        int LA148_0 = input.LA(1);

                        if ( (LA148_0==18) ) {
                            alt148=1;
                        }


                        switch (alt148) {
                    	case 1 :
                    	    // InternalScadeEquations.g:6536:5: otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_15=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getClassDeclarationWOSemicolonAccess().getCommaKeyword_5_1_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:6540:5: ( (lv_valuedObjects_16_0= ruleValuedObject ) )
                    	    // InternalScadeEquations.g:6541:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    {
                    	    // InternalScadeEquations.g:6541:6: (lv_valuedObjects_16_0= ruleValuedObject )
                    	    // InternalScadeEquations.g:6542:7: lv_valuedObjects_16_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_5_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_74);
                    	    lv_valuedObjects_16_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"valuedObjects",
                    	      								lv_valuedObjects_16_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop148;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalScadeEquations.g:6561:3: ( (lv_annotations_17_0= ruleCommentAnnotatonSL ) )?
            int alt150=2;
            int LA150_0 = input.LA(1);

            if ( (LA150_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt150=1;
            }
            switch (alt150) {
                case 1 :
                    // InternalScadeEquations.g:6562:4: (lv_annotations_17_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:6562:4: (lv_annotations_17_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:6563:5: lv_annotations_17_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_17_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_17_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassDeclarationWOSemicolon"


    // $ANTLR start "entryRuleDeclarationOrMethodWOSemicolon"
    // InternalScadeEquations.g:6584:1: entryRuleDeclarationOrMethodWOSemicolon returns [EObject current=null] : iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF ;
    public final EObject entryRuleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDeclarationOrMethodWOSemicolon = null;


        try {
            // InternalScadeEquations.g:6584:71: (iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF )
            // InternalScadeEquations.g:6585:2: iv_ruleDeclarationOrMethodWOSemicolon= ruleDeclarationOrMethodWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleDeclarationOrMethodWOSemicolon=ruleDeclarationOrMethodWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDeclarationOrMethodWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "ruleDeclarationOrMethodWOSemicolon"
    // InternalScadeEquations.g:6591:1: ruleDeclarationOrMethodWOSemicolon returns [EObject current=null] : (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_EnumDeclarationWOSemicolon_1= ruleEnumDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_2= ruleMethodDeclarationWOSemicolon ) ;
    public final EObject ruleDeclarationOrMethodWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject this_DeclarationWOSemicolon_0 = null;

        EObject this_EnumDeclarationWOSemicolon_1 = null;

        EObject this_MethodDeclarationWOSemicolon_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6597:2: ( (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_EnumDeclarationWOSemicolon_1= ruleEnumDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_2= ruleMethodDeclarationWOSemicolon ) )
            // InternalScadeEquations.g:6598:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_EnumDeclarationWOSemicolon_1= ruleEnumDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_2= ruleMethodDeclarationWOSemicolon )
            {
            // InternalScadeEquations.g:6598:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_EnumDeclarationWOSemicolon_1= ruleEnumDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_2= ruleMethodDeclarationWOSemicolon )
            int alt151=3;
            alt151 = dfa151.predict(input);
            switch (alt151) {
                case 1 :
                    // InternalScadeEquations.g:6599:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getDeclarationWOSemicolonParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_DeclarationWOSemicolon_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:6611:3: this_EnumDeclarationWOSemicolon_1= ruleEnumDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getEnumDeclarationWOSemicolonParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_EnumDeclarationWOSemicolon_1=ruleEnumDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_EnumDeclarationWOSemicolon_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:6623:3: this_MethodDeclarationWOSemicolon_2= ruleMethodDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDeclarationOrMethodWOSemicolonAccess().getMethodDeclarationWOSemicolonParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_MethodDeclarationWOSemicolon_2=ruleMethodDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_MethodDeclarationWOSemicolon_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDeclarationOrMethodWOSemicolon"


    // $ANTLR start "entryRuleEnumDeclaration"
    // InternalScadeEquations.g:6638:1: entryRuleEnumDeclaration returns [EObject current=null] : iv_ruleEnumDeclaration= ruleEnumDeclaration EOF ;
    public final EObject entryRuleEnumDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumDeclaration = null;


        try {
            // InternalScadeEquations.g:6638:56: (iv_ruleEnumDeclaration= ruleEnumDeclaration EOF )
            // InternalScadeEquations.g:6639:2: iv_ruleEnumDeclaration= ruleEnumDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumDeclaration=ruleEnumDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumDeclaration"


    // $ANTLR start "ruleEnumDeclaration"
    // InternalScadeEquations.g:6645:1: ruleEnumDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( (lv_type_4_0= ruleEnumType ) ) ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (lv_hostType_6_0= RULE_STRING ) )? otherlv_7= '{' ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) ) otherlv_9= ';' otherlv_10= '}' otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleEnumDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_host_3_0=null;
        Token lv_hostType_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_4_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_declarations_8_0 = null;

        EObject lv_annotations_12_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6651:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( (lv_type_4_0= ruleEnumType ) ) ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (lv_hostType_6_0= RULE_STRING ) )? otherlv_7= '{' ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) ) otherlv_9= ';' otherlv_10= '}' otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:6652:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( (lv_type_4_0= ruleEnumType ) ) ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (lv_hostType_6_0= RULE_STRING ) )? otherlv_7= '{' ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) ) otherlv_9= ';' otherlv_10= '}' otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:6652:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( (lv_type_4_0= ruleEnumType ) ) ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (lv_hostType_6_0= RULE_STRING ) )? otherlv_7= '{' ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) ) otherlv_9= ';' otherlv_10= '}' otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:6653:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( (lv_type_4_0= ruleEnumType ) ) ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (lv_hostType_6_0= RULE_STRING ) )? otherlv_7= '{' ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) ) otherlv_9= ';' otherlv_10= '}' otherlv_11= ';' ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:6653:3: ()
            // InternalScadeEquations.g:6654:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEnumDeclarationAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:6663:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop152:
            do {
                int alt152=2;
                int LA152_0 = input.LA(1);

                if ( (LA152_0==RULE_COMMENT_ANNOTATION||LA152_0==92) ) {
                    alt152=1;
                }


                switch (alt152) {
            	case 1 :
            	    // InternalScadeEquations.g:6664:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:6664:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:6665:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_83);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop152;
                }
            } while (true);

            // InternalScadeEquations.g:6682:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt153=2;
            int LA153_0 = input.LA(1);

            if ( ((LA153_0>=119 && LA153_0<=121)) ) {
                alt153=1;
            }
            switch (alt153) {
                case 1 :
                    // InternalScadeEquations.g:6683:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:6683:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalScadeEquations.g:6684:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_84);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6701:3: ( (lv_host_3_0= 'host' ) )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==71) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalScadeEquations.g:6702:4: (lv_host_3_0= 'host' )
                    {
                    // InternalScadeEquations.g:6702:4: (lv_host_3_0= 'host' )
                    // InternalScadeEquations.g:6703:5: lv_host_3_0= 'host'
                    {
                    lv_host_3_0=(Token)match(input,71,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_3_0, grammarAccess.getEnumDeclarationAccess().getHostHostKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEnumDeclarationRule());
                      					}
                      					setWithLastConsumed(current, "host", lv_host_3_0 != null, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6715:3: ( (lv_type_4_0= ruleEnumType ) )
            // InternalScadeEquations.g:6716:4: (lv_type_4_0= ruleEnumType )
            {
            // InternalScadeEquations.g:6716:4: (lv_type_4_0= ruleEnumType )
            // InternalScadeEquations.g:6717:5: lv_type_4_0= ruleEnumType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getTypeEnumTypeEnumRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_86);
            lv_type_4_0=ruleEnumType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_4_0,
              						"de.cau.cs.kieler.lustre.Lustre.EnumType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:6734:3: ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) )
            // InternalScadeEquations.g:6735:4: (lv_valuedObjects_5_0= ruleSimpleValuedObject )
            {
            // InternalScadeEquations.g:6735:4: (lv_valuedObjects_5_0= ruleSimpleValuedObject )
            // InternalScadeEquations.g:6736:5: lv_valuedObjects_5_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_87);
            lv_valuedObjects_5_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_5_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:6753:3: ( (lv_hostType_6_0= RULE_STRING ) )?
            int alt155=2;
            int LA155_0 = input.LA(1);

            if ( (LA155_0==RULE_STRING) ) {
                alt155=1;
            }
            switch (alt155) {
                case 1 :
                    // InternalScadeEquations.g:6754:4: (lv_hostType_6_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:6754:4: (lv_hostType_6_0= RULE_STRING )
                    // InternalScadeEquations.g:6755:5: lv_hostType_6_0= RULE_STRING
                    {
                    lv_hostType_6_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_hostType_6_0, grammarAccess.getEnumDeclarationAccess().getHostTypeSTRINGTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEnumDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"hostType",
                      						lv_hostType_6_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getEnumDeclarationAccess().getLeftCurlyBracketKeyword_7());
              		
            }
            // InternalScadeEquations.g:6775:3: ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) )
            // InternalScadeEquations.g:6776:4: (lv_declarations_8_0= ruleEnumMemberDeclaration )
            {
            // InternalScadeEquations.g:6776:4: (lv_declarations_8_0= ruleEnumMemberDeclaration )
            // InternalScadeEquations.g:6777:5: lv_declarations_8_0= ruleEnumMemberDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getDeclarationsEnumMemberDeclarationParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_10);
            lv_declarations_8_0=ruleEnumMemberDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
              					}
              					add(
              						current,
              						"declarations",
              						lv_declarations_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.EnumMemberDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_9=(Token)match(input,20,FollowSets000.FOLLOW_19); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getEnumDeclarationAccess().getSemicolonKeyword_9());
              		
            }
            otherlv_10=(Token)match(input,23,FollowSets000.FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_10, grammarAccess.getEnumDeclarationAccess().getRightCurlyBracketKeyword_10());
              		
            }
            otherlv_11=(Token)match(input,20,FollowSets000.FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_11, grammarAccess.getEnumDeclarationAccess().getSemicolonKeyword_11());
              		
            }
            // InternalScadeEquations.g:6806:3: ( (lv_annotations_12_0= ruleCommentAnnotatonSL ) )?
            int alt156=2;
            int LA156_0 = input.LA(1);

            if ( (LA156_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt156=1;
            }
            switch (alt156) {
                case 1 :
                    // InternalScadeEquations.g:6807:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:6807:4: (lv_annotations_12_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:6808:5: lv_annotations_12_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEnumDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_12_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_12_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEnumDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_12_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumDeclaration"


    // $ANTLR start "entryRuleEnumMemberDeclaration"
    // InternalScadeEquations.g:6829:1: entryRuleEnumMemberDeclaration returns [EObject current=null] : iv_ruleEnumMemberDeclaration= ruleEnumMemberDeclaration EOF ;
    public final EObject entryRuleEnumMemberDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumMemberDeclaration = null;


        try {
            // InternalScadeEquations.g:6829:62: (iv_ruleEnumMemberDeclaration= ruleEnumMemberDeclaration EOF )
            // InternalScadeEquations.g:6830:2: iv_ruleEnumMemberDeclaration= ruleEnumMemberDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumMemberDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumMemberDeclaration=ruleEnumMemberDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumMemberDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumMemberDeclaration"


    // $ANTLR start "ruleEnumMemberDeclaration"
    // InternalScadeEquations.g:6836:1: ruleEnumMemberDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_valuedObjects_1_0= ruleSimpleValuedObject ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleSimpleValuedObject ) ) )* ( (lv_annotations_4_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleEnumMemberDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_valuedObjects_1_0 = null;

        EObject lv_valuedObjects_3_0 = null;

        EObject lv_annotations_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6842:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_valuedObjects_1_0= ruleSimpleValuedObject ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleSimpleValuedObject ) ) )* ( (lv_annotations_4_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:6843:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_valuedObjects_1_0= ruleSimpleValuedObject ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleSimpleValuedObject ) ) )* ( (lv_annotations_4_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:6843:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_valuedObjects_1_0= ruleSimpleValuedObject ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleSimpleValuedObject ) ) )* ( (lv_annotations_4_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:6844:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_valuedObjects_1_0= ruleSimpleValuedObject ) ) (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleSimpleValuedObject ) ) )* ( (lv_annotations_4_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:6844:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop157:
            do {
                int alt157=2;
                int LA157_0 = input.LA(1);

                if ( (LA157_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA157_1 = input.LA(2);

                    if ( (synpred184_InternalScadeEquations()) ) {
                        alt157=1;
                    }


                }
                else if ( (LA157_0==92) ) {
                    int LA157_2 = input.LA(2);

                    if ( (LA157_2==RULE_ID) ) {
                        int LA157_5 = input.LA(3);

                        if ( (synpred184_InternalScadeEquations()) ) {
                            alt157=1;
                        }


                    }


                }


                switch (alt157) {
            	case 1 :
            	    // InternalScadeEquations.g:6845:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalScadeEquations.g:6845:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalScadeEquations.g:6846:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_86);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop157;
                }
            } while (true);

            // InternalScadeEquations.g:6863:3: ( (lv_valuedObjects_1_0= ruleSimpleValuedObject ) )
            // InternalScadeEquations.g:6864:4: (lv_valuedObjects_1_0= ruleSimpleValuedObject )
            {
            // InternalScadeEquations.g:6864:4: (lv_valuedObjects_1_0= ruleSimpleValuedObject )
            // InternalScadeEquations.g:6865:5: lv_valuedObjects_1_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_74);
            lv_valuedObjects_1_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_1_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:6882:3: (otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleSimpleValuedObject ) ) )*
            loop158:
            do {
                int alt158=2;
                int LA158_0 = input.LA(1);

                if ( (LA158_0==18) ) {
                    alt158=1;
                }


                switch (alt158) {
            	case 1 :
            	    // InternalScadeEquations.g:6883:4: otherlv_2= ',' ( (lv_valuedObjects_3_0= ruleSimpleValuedObject ) )
            	    {
            	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_86); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getEnumMemberDeclarationAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:6887:4: ( (lv_valuedObjects_3_0= ruleSimpleValuedObject ) )
            	    // InternalScadeEquations.g:6888:5: (lv_valuedObjects_3_0= ruleSimpleValuedObject )
            	    {
            	    // InternalScadeEquations.g:6888:5: (lv_valuedObjects_3_0= ruleSimpleValuedObject )
            	    // InternalScadeEquations.g:6889:6: lv_valuedObjects_3_0= ruleSimpleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_74);
            	    lv_valuedObjects_3_0=ruleSimpleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_3_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop158;
                }
            } while (true);

            // InternalScadeEquations.g:6907:3: ( (lv_annotations_4_0= ruleCommentAnnotatonSL ) )?
            int alt159=2;
            int LA159_0 = input.LA(1);

            if ( (LA159_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt159=1;
            }
            switch (alt159) {
                case 1 :
                    // InternalScadeEquations.g:6908:4: (lv_annotations_4_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:6908:4: (lv_annotations_4_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:6909:5: lv_annotations_4_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_4_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEnumMemberDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_4_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumMemberDeclaration"


    // $ANTLR start "entryRuleEnumDeclarationWOSemicolon"
    // InternalScadeEquations.g:6930:1: entryRuleEnumDeclarationWOSemicolon returns [EObject current=null] : iv_ruleEnumDeclarationWOSemicolon= ruleEnumDeclarationWOSemicolon EOF ;
    public final EObject entryRuleEnumDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEnumDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:6930:67: (iv_ruleEnumDeclarationWOSemicolon= ruleEnumDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:6931:2: iv_ruleEnumDeclarationWOSemicolon= ruleEnumDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEnumDeclarationWOSemicolon=ruleEnumDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEnumDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEnumDeclarationWOSemicolon"


    // $ANTLR start "ruleEnumDeclarationWOSemicolon"
    // InternalScadeEquations.g:6937:1: ruleEnumDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( (lv_type_4_0= ruleEnumType ) ) ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (lv_hostType_6_0= RULE_STRING ) )? otherlv_7= '{' ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) ) otherlv_9= '}' ( (lv_annotations_10_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleEnumDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_host_3_0=null;
        Token lv_hostType_6_0=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_type_4_0 = null;

        EObject lv_valuedObjects_5_0 = null;

        EObject lv_declarations_8_0 = null;

        EObject lv_annotations_10_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:6943:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( (lv_type_4_0= ruleEnumType ) ) ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (lv_hostType_6_0= RULE_STRING ) )? otherlv_7= '{' ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) ) otherlv_9= '}' ( (lv_annotations_10_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:6944:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( (lv_type_4_0= ruleEnumType ) ) ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (lv_hostType_6_0= RULE_STRING ) )? otherlv_7= '{' ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) ) otherlv_9= '}' ( (lv_annotations_10_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:6944:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( (lv_type_4_0= ruleEnumType ) ) ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (lv_hostType_6_0= RULE_STRING ) )? otherlv_7= '{' ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) ) otherlv_9= '}' ( (lv_annotations_10_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:6945:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_host_3_0= 'host' ) )? ( (lv_type_4_0= ruleEnumType ) ) ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) ) ( (lv_hostType_6_0= RULE_STRING ) )? otherlv_7= '{' ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) ) otherlv_9= '}' ( (lv_annotations_10_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:6945:3: ()
            // InternalScadeEquations.g:6946:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getEnumDeclarationWOSemicolonAccess().getClassDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:6955:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop160:
            do {
                int alt160=2;
                int LA160_0 = input.LA(1);

                if ( (LA160_0==RULE_COMMENT_ANNOTATION||LA160_0==92) ) {
                    alt160=1;
                }


                switch (alt160) {
            	case 1 :
            	    // InternalScadeEquations.g:6956:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:6956:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:6957:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_83);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop160;
                }
            } while (true);

            // InternalScadeEquations.g:6974:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt161=2;
            int LA161_0 = input.LA(1);

            if ( ((LA161_0>=119 && LA161_0<=121)) ) {
                alt161=1;
            }
            switch (alt161) {
                case 1 :
                    // InternalScadeEquations.g:6975:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:6975:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalScadeEquations.g:6976:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_84);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:6993:3: ( (lv_host_3_0= 'host' ) )?
            int alt162=2;
            int LA162_0 = input.LA(1);

            if ( (LA162_0==71) ) {
                alt162=1;
            }
            switch (alt162) {
                case 1 :
                    // InternalScadeEquations.g:6994:4: (lv_host_3_0= 'host' )
                    {
                    // InternalScadeEquations.g:6994:4: (lv_host_3_0= 'host' )
                    // InternalScadeEquations.g:6995:5: lv_host_3_0= 'host'
                    {
                    lv_host_3_0=(Token)match(input,71,FollowSets000.FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_host_3_0, grammarAccess.getEnumDeclarationWOSemicolonAccess().getHostHostKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEnumDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(current, "host", lv_host_3_0 != null, "host");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7007:3: ( (lv_type_4_0= ruleEnumType ) )
            // InternalScadeEquations.g:7008:4: (lv_type_4_0= ruleEnumType )
            {
            // InternalScadeEquations.g:7008:4: (lv_type_4_0= ruleEnumType )
            // InternalScadeEquations.g:7009:5: lv_type_4_0= ruleEnumType
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getTypeEnumTypeEnumRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_86);
            lv_type_4_0=ruleEnumType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_4_0,
              						"de.cau.cs.kieler.lustre.Lustre.EnumType");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:7026:3: ( (lv_valuedObjects_5_0= ruleSimpleValuedObject ) )
            // InternalScadeEquations.g:7027:4: (lv_valuedObjects_5_0= ruleSimpleValuedObject )
            {
            // InternalScadeEquations.g:7027:4: (lv_valuedObjects_5_0= ruleSimpleValuedObject )
            // InternalScadeEquations.g:7028:5: lv_valuedObjects_5_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_87);
            lv_valuedObjects_5_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_5_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:7045:3: ( (lv_hostType_6_0= RULE_STRING ) )?
            int alt163=2;
            int LA163_0 = input.LA(1);

            if ( (LA163_0==RULE_STRING) ) {
                alt163=1;
            }
            switch (alt163) {
                case 1 :
                    // InternalScadeEquations.g:7046:4: (lv_hostType_6_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:7046:4: (lv_hostType_6_0= RULE_STRING )
                    // InternalScadeEquations.g:7047:5: lv_hostType_6_0= RULE_STRING
                    {
                    lv_hostType_6_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_16); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_hostType_6_0, grammarAccess.getEnumDeclarationWOSemicolonAccess().getHostTypeSTRINGTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getEnumDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"hostType",
                      						lv_hostType_6_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,22,FollowSets000.FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getEnumDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_7());
              		
            }
            // InternalScadeEquations.g:7067:3: ( (lv_declarations_8_0= ruleEnumMemberDeclaration ) )
            // InternalScadeEquations.g:7068:4: (lv_declarations_8_0= ruleEnumMemberDeclaration )
            {
            // InternalScadeEquations.g:7068:4: (lv_declarations_8_0= ruleEnumMemberDeclaration )
            // InternalScadeEquations.g:7069:5: lv_declarations_8_0= ruleEnumMemberDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getDeclarationsEnumMemberDeclarationParserRuleCall_8_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_19);
            lv_declarations_8_0=ruleEnumMemberDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"declarations",
              						lv_declarations_8_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.EnumMemberDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_9=(Token)match(input,23,FollowSets000.FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_9, grammarAccess.getEnumDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_9());
              		
            }
            // InternalScadeEquations.g:7090:3: ( (lv_annotations_10_0= ruleCommentAnnotatonSL ) )?
            int alt164=2;
            int LA164_0 = input.LA(1);

            if ( (LA164_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt164=1;
            }
            switch (alt164) {
                case 1 :
                    // InternalScadeEquations.g:7091:4: (lv_annotations_10_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:7091:4: (lv_annotations_10_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:7092:5: lv_annotations_10_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getEnumDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_10_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getEnumDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_10_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumDeclarationWOSemicolon"


    // $ANTLR start "entryRuleMethodDeclaration"
    // InternalScadeEquations.g:7113:1: entryRuleMethodDeclaration returns [EObject current=null] : iv_ruleMethodDeclaration= ruleMethodDeclaration EOF ;
    public final EObject entryRuleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclaration = null;


        try {
            // InternalScadeEquations.g:7113:58: (iv_ruleMethodDeclaration= ruleMethodDeclaration EOF )
            // InternalScadeEquations.g:7114:2: iv_ruleMethodDeclaration= ruleMethodDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclaration=ruleMethodDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclaration"


    // $ANTLR start "ruleMethodDeclaration"
    // InternalScadeEquations.g:7120:1: ruleMethodDeclaration returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? otherlv_13= ';' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleMethodDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_14_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:7126:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? otherlv_13= ';' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:7127:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? otherlv_13= ';' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:7127:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? otherlv_13= ';' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:7128:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? otherlv_13= ';' ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:7128:3: ()
            // InternalScadeEquations.g:7129:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationAccess().getMethodDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:7138:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop165:
            do {
                int alt165=2;
                int LA165_0 = input.LA(1);

                if ( (LA165_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA165_2 = input.LA(2);

                    if ( (synpred192_InternalScadeEquations()) ) {
                        alt165=1;
                    }


                }
                else if ( (LA165_0==92) ) {
                    int LA165_3 = input.LA(2);

                    if ( (LA165_3==RULE_ID) ) {
                        int LA165_5 = input.LA(3);

                        if ( (synpred192_InternalScadeEquations()) ) {
                            alt165=1;
                        }


                    }


                }


                switch (alt165) {
            	case 1 :
            	    // InternalScadeEquations.g:7139:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:7139:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:7140:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_86);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop165;
                }
            } while (true);

            // InternalScadeEquations.g:7157:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( ((LA166_0>=119 && LA166_0<=121)) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalScadeEquations.g:7158:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:7158:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalScadeEquations.g:7159:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_86);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7176:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt167=2;
            int LA167_0 = input.LA(1);

            if ( ((LA167_0>=93 && LA167_0<=94)||(LA167_0>=122 && LA167_0<=124)) ) {
                alt167=1;
            }
            switch (alt167) {
                case 1 :
                    // InternalScadeEquations.g:7177:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalScadeEquations.g:7177:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalScadeEquations.g:7178:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_86);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7195:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalScadeEquations.g:7196:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalScadeEquations.g:7196:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalScadeEquations.g:7197:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:7214:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt169=2;
            int LA169_0 = input.LA(1);

            if ( (LA169_0==17) ) {
                alt169=1;
            }
            else if ( (LA169_0==28) ) {
                alt169=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 169, 0, input);

                throw nvae;
            }
            switch (alt169) {
                case 1 :
                    // InternalScadeEquations.g:7215:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalScadeEquations.g:7215:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalScadeEquations.g:7216:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,17,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalScadeEquations.g:7220:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalScadeEquations.g:7221:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalScadeEquations.g:7221:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalScadeEquations.g:7222:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:7239:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop168:
                    do {
                        int alt168=2;
                        int LA168_0 = input.LA(1);

                        if ( (LA168_0==18) ) {
                            alt168=1;
                        }


                        switch (alt168) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7240:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,18,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:7244:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalScadeEquations.g:7245:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalScadeEquations.g:7245:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalScadeEquations.g:7246:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop168;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:7270:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,28,FollowSets000.FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:7275:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt171=2;
            int LA171_0 = input.LA(1);

            if ( (LA171_0==72) ) {
                alt171=1;
            }
            switch (alt171) {
                case 1 :
                    // InternalScadeEquations.g:7276:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,72,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalScadeEquations.g:7280:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt170=0;
                    loop170:
                    do {
                        int alt170=2;
                        int LA170_0 = input.LA(1);

                        if ( (LA170_0==RULE_ID) ) {
                            alt170=1;
                        }


                        switch (alt170) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7281:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:7281:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:7282:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_89);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt170 >= 1 ) break loop170;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(170, input);
                                throw eee;
                        }
                        cnt170++;
                    } while (true);


                    }
                    break;

            }

            otherlv_13=(Token)match(input,20,FollowSets000.FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_13, grammarAccess.getMethodDeclarationAccess().getSemicolonKeyword_7());
              		
            }
            // InternalScadeEquations.g:7304:3: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            int alt172=2;
            int LA172_0 = input.LA(1);

            if ( (LA172_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt172=1;
            }
            switch (alt172) {
                case 1 :
                    // InternalScadeEquations.g:7305:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:7305:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:7306:5: lv_annotations_14_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_14_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_14_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclaration"


    // $ANTLR start "entryRuleMethodDeclarationWOSemicolon"
    // InternalScadeEquations.g:7327:1: entryRuleMethodDeclarationWOSemicolon returns [EObject current=null] : iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF ;
    public final EObject entryRuleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMethodDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:7327:69: (iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:7328:2: iv_ruleMethodDeclarationWOSemicolon= ruleMethodDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleMethodDeclarationWOSemicolon=ruleMethodDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMethodDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMethodDeclarationWOSemicolon"


    // $ANTLR start "ruleMethodDeclarationWOSemicolon"
    // InternalScadeEquations.g:7334:1: ruleMethodDeclarationWOSemicolon returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleMethodDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_annotations_1_0 = null;

        Enumerator lv_access_2_0 = null;

        Enumerator lv_returnType_3_0 = null;

        EObject lv_valuedObjects_4_0 = null;

        EObject lv_parameterDeclarations_6_0 = null;

        EObject lv_parameterDeclarations_8_0 = null;

        EObject lv_schedule_12_0 = null;

        EObject lv_annotations_13_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:7340:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:7341:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:7341:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:7342:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* ( (lv_access_2_0= ruleAccessModifier ) )? ( (lv_returnType_3_0= ruleMethodReturnType ) )? ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) ) ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' ) (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )? ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:7342:3: ()
            // InternalScadeEquations.g:7343:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMethodDeclarationWOSemicolonAccess().getMethodDeclarationAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:7352:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop173:
            do {
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( (LA173_0==RULE_COMMENT_ANNOTATION) ) {
                    int LA173_2 = input.LA(2);

                    if ( (synpred200_InternalScadeEquations()) ) {
                        alt173=1;
                    }


                }
                else if ( (LA173_0==92) ) {
                    int LA173_3 = input.LA(2);

                    if ( (LA173_3==RULE_ID) ) {
                        int LA173_5 = input.LA(3);

                        if ( (synpred200_InternalScadeEquations()) ) {
                            alt173=1;
                        }


                    }


                }


                switch (alt173) {
            	case 1 :
            	    // InternalScadeEquations.g:7353:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:7353:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:7354:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_86);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);

            // InternalScadeEquations.g:7371:3: ( (lv_access_2_0= ruleAccessModifier ) )?
            int alt174=2;
            int LA174_0 = input.LA(1);

            if ( ((LA174_0>=119 && LA174_0<=121)) ) {
                alt174=1;
            }
            switch (alt174) {
                case 1 :
                    // InternalScadeEquations.g:7372:4: (lv_access_2_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:7372:4: (lv_access_2_0= ruleAccessModifier )
                    // InternalScadeEquations.g:7373:5: lv_access_2_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_2_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_86);
                    lv_access_2_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7390:3: ( (lv_returnType_3_0= ruleMethodReturnType ) )?
            int alt175=2;
            int LA175_0 = input.LA(1);

            if ( ((LA175_0>=93 && LA175_0<=94)||(LA175_0>=122 && LA175_0<=124)) ) {
                alt175=1;
            }
            switch (alt175) {
                case 1 :
                    // InternalScadeEquations.g:7391:4: (lv_returnType_3_0= ruleMethodReturnType )
                    {
                    // InternalScadeEquations.g:7391:4: (lv_returnType_3_0= ruleMethodReturnType )
                    // InternalScadeEquations.g:7392:5: lv_returnType_3_0= ruleMethodReturnType
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getReturnTypeMethodReturnTypeEnumRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_86);
                    lv_returnType_3_0=ruleMethodReturnType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"returnType",
                      						lv_returnType_3_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.MethodReturnType");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7409:3: ( (lv_valuedObjects_4_0= ruleSimpleValuedObject ) )
            // InternalScadeEquations.g:7410:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            {
            // InternalScadeEquations.g:7410:4: (lv_valuedObjects_4_0= ruleSimpleValuedObject )
            // InternalScadeEquations.g:7411:5: lv_valuedObjects_4_0= ruleSimpleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getValuedObjectsSimpleValuedObjectParserRuleCall_4_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_22);
            lv_valuedObjects_4_0=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_4_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.SimpleValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:7428:3: ( (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' ) | otherlv_10= '()' )
            int alt177=2;
            int LA177_0 = input.LA(1);

            if ( (LA177_0==17) ) {
                alt177=1;
            }
            else if ( (LA177_0==28) ) {
                alt177=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 177, 0, input);

                throw nvae;
            }
            switch (alt177) {
                case 1 :
                    // InternalScadeEquations.g:7429:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    {
                    // InternalScadeEquations.g:7429:4: (otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')' )
                    // InternalScadeEquations.g:7430:5: otherlv_5= '(' ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) ) (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )* otherlv_9= ')'
                    {
                    otherlv_5=(Token)match(input,17,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalScadeEquations.g:7434:5: ( (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon ) )
                    // InternalScadeEquations.g:7435:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    {
                    // InternalScadeEquations.g:7435:6: (lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon )
                    // InternalScadeEquations.g:7436:7: lv_parameterDeclarations_6_0= ruleVariableDeclarationWOSemicolon
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameterDeclarations_6_0=ruleVariableDeclarationWOSemicolon();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"parameterDeclarations",
                      								lv_parameterDeclarations_6_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:7453:5: (otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) ) )*
                    loop176:
                    do {
                        int alt176=2;
                        int LA176_0 = input.LA(1);

                        if ( (LA176_0==18) ) {
                            alt176=1;
                        }


                        switch (alt176) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7454:6: otherlv_7= ',' ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    {
                    	    otherlv_7=(Token)match(input,18,FollowSets000.FOLLOW_70); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getMethodDeclarationWOSemicolonAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:7458:6: ( (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon ) )
                    	    // InternalScadeEquations.g:7459:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    {
                    	    // InternalScadeEquations.g:7459:7: (lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon )
                    	    // InternalScadeEquations.g:7460:8: lv_parameterDeclarations_8_0= ruleVariableDeclarationWOSemicolon
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getParameterDeclarationsVariableDeclarationWOSemicolonParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameterDeclarations_8_0=ruleVariableDeclarationWOSemicolon();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameterDeclarations",
                    	      									lv_parameterDeclarations_8_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.VariableDeclarationWOSemicolon");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop176;
                        }
                    } while (true);

                    otherlv_9=(Token)match(input,19,FollowSets000.FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getMethodDeclarationWOSemicolonAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:7484:4: otherlv_10= '()'
                    {
                    otherlv_10=(Token)match(input,28,FollowSets000.FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getMethodDeclarationWOSemicolonAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:7489:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?
            int alt179=2;
            alt179 = dfa179.predict(input);
            switch (alt179) {
                case 1 :
                    // InternalScadeEquations.g:7490:4: otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_11=(Token)match(input,72,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleKeyword_6_0());
                      			
                    }
                    // InternalScadeEquations.g:7494:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+
                    int cnt178=0;
                    loop178:
                    do {
                        int alt178=2;
                        alt178 = dfa178.predict(input);
                        switch (alt178) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7495:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:7495:5: (lv_schedule_12_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:7496:6: lv_schedule_12_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getScheduleScheduleObjectReferenceParserRuleCall_6_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_91);
                    	    lv_schedule_12_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_12_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt178 >= 1 ) break loop178;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(178, input);
                                throw eee;
                        }
                        cnt178++;
                    } while (true);


                    }
                    break;

            }

            // InternalScadeEquations.g:7514:3: ( (lv_annotations_13_0= ruleCommentAnnotatonSL ) )?
            int alt180=2;
            int LA180_0 = input.LA(1);

            if ( (LA180_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt180=1;
            }
            switch (alt180) {
                case 1 :
                    // InternalScadeEquations.g:7515:4: (lv_annotations_13_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:7515:4: (lv_annotations_13_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:7516:5: lv_annotations_13_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_13_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getMethodDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_13_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodDeclarationWOSemicolon"


    // $ANTLR start "entryRuleReferenceDeclaration"
    // InternalScadeEquations.g:7537:1: entryRuleReferenceDeclaration returns [EObject current=null] : iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF ;
    public final EObject entryRuleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclaration = null;


        try {
            // InternalScadeEquations.g:7537:61: (iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF )
            // InternalScadeEquations.g:7538:2: iv_ruleReferenceDeclaration= ruleReferenceDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclaration=ruleReferenceDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclaration"


    // $ANTLR start "ruleReferenceDeclaration"
    // InternalScadeEquations.g:7544:1: ruleReferenceDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) ) otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_input_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_genericParameters_8_0 = null;

        EObject lv_genericParameters_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_extern_16_0 = null;

        EObject lv_extern_18_0 = null;

        EObject lv_valuedObjects_19_0 = null;

        EObject lv_valuedObjects_21_0 = null;

        EObject lv_annotations_23_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:7550:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) ) otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:7551:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) ) otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:7551:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) ) otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:7552:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) ) otherlv_22= ';' ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:7552:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop181:
            do {
                int alt181=2;
                int LA181_0 = input.LA(1);

                if ( (LA181_0==RULE_COMMENT_ANNOTATION||LA181_0==92) ) {
                    alt181=1;
                }


                switch (alt181) {
            	case 1 :
            	    // InternalScadeEquations.g:7553:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:7553:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:7554:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_92);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop181;
                }
            } while (true);

            // InternalScadeEquations.g:7571:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt182=2;
            int LA182_0 = input.LA(1);

            if ( ((LA182_0>=119 && LA182_0<=121)) ) {
                alt182=1;
            }
            switch (alt182) {
                case 1 :
                    // InternalScadeEquations.g:7572:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:7572:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:7573:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_93);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7590:3: ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) )
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==66||LA190_0==73) ) {
                alt190=1;
            }
            else if ( (LA190_0==25) ) {
                alt190=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 190, 0, input);

                throw nvae;
            }
            switch (alt190) {
                case 1 :
                    // InternalScadeEquations.g:7591:4: ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* )
                    {
                    // InternalScadeEquations.g:7591:4: ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* )
                    // InternalScadeEquations.g:7592:5: ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )*
                    {
                    // InternalScadeEquations.g:7592:5: ( (lv_input_2_0= 'input' ) )?
                    int alt183=2;
                    int LA183_0 = input.LA(1);

                    if ( (LA183_0==66) ) {
                        alt183=1;
                    }
                    switch (alt183) {
                        case 1 :
                            // InternalScadeEquations.g:7593:6: (lv_input_2_0= 'input' )
                            {
                            // InternalScadeEquations.g:7593:6: (lv_input_2_0= 'input' )
                            // InternalScadeEquations.g:7594:7: lv_input_2_0= 'input'
                            {
                            lv_input_2_0=(Token)match(input,66,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_input_2_0, grammarAccess.getReferenceDeclarationAccess().getInputInputKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                              							}
                              							setWithLastConsumed(current, "input", lv_input_2_0 != null, "input");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,73,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getReferenceDeclarationAccess().getRefKeyword_2_0_1());
                      				
                    }
                    // InternalScadeEquations.g:7610:5: ( ( ( rulePrimeID ) ) otherlv_5= '.' )?
                    int alt184=2;
                    alt184 = dfa184.predict(input);
                    switch (alt184) {
                        case 1 :
                            // InternalScadeEquations.g:7611:6: ( ( rulePrimeID ) ) otherlv_5= '.'
                            {
                            // InternalScadeEquations.g:7611:6: ( ( rulePrimeID ) )
                            // InternalScadeEquations.g:7612:7: ( rulePrimeID )
                            {
                            // InternalScadeEquations.g:7612:7: ( rulePrimeID )
                            // InternalScadeEquations.g:7613:8: rulePrimeID
                            {
                            if ( state.backtracking==0 ) {

                              								/* */
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                              								}
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceContainerNamedObjectCrossReference_2_0_2_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_95);
                            rulePrimeID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getReferenceDeclarationAccess().getFullStopKeyword_2_0_2_1());
                              					
                            }

                            }
                            break;

                    }

                    // InternalScadeEquations.g:7635:5: ( ( rulePrimeID ) )
                    // InternalScadeEquations.g:7636:6: ( rulePrimeID )
                    {
                    // InternalScadeEquations.g:7636:6: ( rulePrimeID )
                    // InternalScadeEquations.g:7637:7: rulePrimeID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getReferenceNamedObjectCrossReference_2_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    rulePrimeID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:7654:5: (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )?
                    int alt186=2;
                    int LA186_0 = input.LA(1);

                    if ( (LA186_0==74) ) {
                        alt186=1;
                    }
                    switch (alt186) {
                        case 1 :
                            // InternalScadeEquations.g:7655:6: otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>'
                            {
                            otherlv_7=(Token)match(input,74,FollowSets000.FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getReferenceDeclarationAccess().getLessThanSignKeyword_2_0_4_0());
                              					
                            }
                            // InternalScadeEquations.g:7659:6: ( (lv_genericParameters_8_0= ruleGenericParameter ) )
                            // InternalScadeEquations.g:7660:7: (lv_genericParameters_8_0= ruleGenericParameter )
                            {
                            // InternalScadeEquations.g:7660:7: (lv_genericParameters_8_0= ruleGenericParameter )
                            // InternalScadeEquations.g:7661:8: lv_genericParameters_8_0= ruleGenericParameter
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getGenericParametersGenericParameterParserRuleCall_2_0_4_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_98);
                            lv_genericParameters_8_0=ruleGenericParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                              								}
                              								add(
                              									current,
                              									"genericParameters",
                              									lv_genericParameters_8_0,
                              									"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalScadeEquations.g:7678:6: (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )*
                            loop185:
                            do {
                                int alt185=2;
                                int LA185_0 = input.LA(1);

                                if ( (LA185_0==18) ) {
                                    alt185=1;
                                }


                                switch (alt185) {
                            	case 1 :
                            	    // InternalScadeEquations.g:7679:7: otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) )
                            	    {
                            	    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_97); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_0_4_2_0());
                            	      						
                            	    }
                            	    // InternalScadeEquations.g:7683:7: ( (lv_genericParameters_10_0= ruleGenericParameter ) )
                            	    // InternalScadeEquations.g:7684:8: (lv_genericParameters_10_0= ruleGenericParameter )
                            	    {
                            	    // InternalScadeEquations.g:7684:8: (lv_genericParameters_10_0= ruleGenericParameter )
                            	    // InternalScadeEquations.g:7685:9: lv_genericParameters_10_0= ruleGenericParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getGenericParametersGenericParameterParserRuleCall_2_0_4_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_98);
                            	    lv_genericParameters_10_0=ruleGenericParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"genericParameters",
                            	      										lv_genericParameters_10_0,
                            	      										"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop185;
                                }
                            } while (true);

                            otherlv_11=(Token)match(input,75,FollowSets000.FOLLOW_96); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationAccess().getGreaterThanSignKeyword_2_0_4_3());
                              					
                            }

                            }
                            break;

                    }

                    // InternalScadeEquations.g:7708:5: ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) )
                    // InternalScadeEquations.g:7709:6: (lv_valuedObjects_12_0= ruleReferenceValuedObject )
                    {
                    // InternalScadeEquations.g:7709:6: (lv_valuedObjects_12_0= ruleReferenceValuedObject )
                    // InternalScadeEquations.g:7710:7: lv_valuedObjects_12_0= ruleReferenceValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsReferenceValuedObjectParserRuleCall_2_0_5_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_valuedObjects_12_0=ruleReferenceValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"valuedObjects",
                      								lv_valuedObjects_12_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ReferenceValuedObject");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:7727:5: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )*
                    loop187:
                    do {
                        int alt187=2;
                        int LA187_0 = input.LA(1);

                        if ( (LA187_0==18) ) {
                            alt187=1;
                        }


                        switch (alt187) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7728:6: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) )
                    	    {
                    	    otherlv_13=(Token)match(input,18,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_13, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_0_6_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:7732:6: ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) )
                    	    // InternalScadeEquations.g:7733:7: (lv_valuedObjects_14_0= ruleReferenceValuedObject )
                    	    {
                    	    // InternalScadeEquations.g:7733:7: (lv_valuedObjects_14_0= ruleReferenceValuedObject )
                    	    // InternalScadeEquations.g:7734:8: lv_valuedObjects_14_0= ruleReferenceValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsReferenceValuedObjectParserRuleCall_2_0_6_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_72);
                    	    lv_valuedObjects_14_0=ruleReferenceValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"valuedObjects",
                    	      									lv_valuedObjects_14_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ReferenceValuedObject");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop187;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:7754:4: (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )
                    {
                    // InternalScadeEquations.g:7754:4: (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )
                    // InternalScadeEquations.g:7755:5: otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    {
                    otherlv_15=(Token)match(input,25,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_15, grammarAccess.getReferenceDeclarationAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalScadeEquations.g:7759:5: ( (lv_extern_16_0= ruleExternString ) )
                    // InternalScadeEquations.g:7760:6: (lv_extern_16_0= ruleExternString )
                    {
                    // InternalScadeEquations.g:7760:6: (lv_extern_16_0= ruleExternString )
                    // InternalScadeEquations.g:7761:7: lv_extern_16_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_extern_16_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_16_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:7778:5: (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )*
                    loop188:
                    do {
                        int alt188=2;
                        int LA188_0 = input.LA(1);

                        if ( (LA188_0==18) ) {
                            alt188=1;
                        }


                        switch (alt188) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7779:6: otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) )
                    	    {
                    	    otherlv_17=(Token)match(input,18,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_17, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:7783:6: ( (lv_extern_18_0= ruleExternString ) )
                    	    // InternalScadeEquations.g:7784:7: (lv_extern_18_0= ruleExternString )
                    	    {
                    	    // InternalScadeEquations.g:7784:7: (lv_extern_18_0= ruleExternString )
                    	    // InternalScadeEquations.g:7785:8: lv_extern_18_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_100);
                    	    lv_extern_18_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_18_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop188;
                        }
                    } while (true);

                    // InternalScadeEquations.g:7803:5: ( (lv_valuedObjects_19_0= ruleValuedObject ) )
                    // InternalScadeEquations.g:7804:6: (lv_valuedObjects_19_0= ruleValuedObject )
                    {
                    // InternalScadeEquations.g:7804:6: (lv_valuedObjects_19_0= ruleValuedObject )
                    // InternalScadeEquations.g:7805:7: lv_valuedObjects_19_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_1_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_72);
                    lv_valuedObjects_19_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      							}
                      							add(
                      								current,
                      								"valuedObjects",
                      								lv_valuedObjects_19_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:7822:5: (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    loop189:
                    do {
                        int alt189=2;
                        int LA189_0 = input.LA(1);

                        if ( (LA189_0==18) ) {
                            alt189=1;
                        }


                        switch (alt189) {
                    	case 1 :
                    	    // InternalScadeEquations.g:7823:6: otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_20=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_20, grammarAccess.getReferenceDeclarationAccess().getCommaKeyword_2_1_4_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:7827:6: ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    // InternalScadeEquations.g:7828:7: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    {
                    	    // InternalScadeEquations.g:7828:7: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    // InternalScadeEquations.g:7829:8: lv_valuedObjects_21_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_2_1_4_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_72);
                    	    lv_valuedObjects_21_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"valuedObjects",
                    	      									lv_valuedObjects_21_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop189;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            otherlv_22=(Token)match(input,20,FollowSets000.FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_22, grammarAccess.getReferenceDeclarationAccess().getSemicolonKeyword_3());
              		
            }
            // InternalScadeEquations.g:7853:3: ( (lv_annotations_23_0= ruleCommentAnnotatonSL ) )?
            int alt191=2;
            int LA191_0 = input.LA(1);

            if ( (LA191_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt191=1;
            }
            switch (alt191) {
                case 1 :
                    // InternalScadeEquations.g:7854:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:7854:4: (lv_annotations_23_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:7855:5: lv_annotations_23_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_23_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_23_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclaration"


    // $ANTLR start "entryRuleReferenceDeclarationWOSemicolon"
    // InternalScadeEquations.g:7876:1: entryRuleReferenceDeclarationWOSemicolon returns [EObject current=null] : iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF ;
    public final EObject entryRuleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:7876:72: (iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:7877:2: iv_ruleReferenceDeclarationWOSemicolon= ruleReferenceDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceDeclarationWOSemicolon=ruleReferenceDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceDeclarationWOSemicolon"


    // $ANTLR start "ruleReferenceDeclarationWOSemicolon"
    // InternalScadeEquations.g:7883:1: ruleReferenceDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) ) ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleReferenceDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token lv_input_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_20=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        EObject lv_genericParameters_8_0 = null;

        EObject lv_genericParameters_10_0 = null;

        EObject lv_valuedObjects_12_0 = null;

        EObject lv_valuedObjects_14_0 = null;

        EObject lv_extern_16_0 = null;

        EObject lv_extern_18_0 = null;

        EObject lv_valuedObjects_19_0 = null;

        EObject lv_valuedObjects_21_0 = null;

        EObject lv_annotations_22_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:7889:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) ) ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:7890:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) ) ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:7890:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) ) ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:7891:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) ) ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:7891:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop192:
            do {
                int alt192=2;
                int LA192_0 = input.LA(1);

                if ( (LA192_0==RULE_COMMENT_ANNOTATION||LA192_0==92) ) {
                    alt192=1;
                }


                switch (alt192) {
            	case 1 :
            	    // InternalScadeEquations.g:7892:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:7892:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:7893:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_92);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop192;
                }
            } while (true);

            // InternalScadeEquations.g:7910:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt193=2;
            int LA193_0 = input.LA(1);

            if ( ((LA193_0>=119 && LA193_0<=121)) ) {
                alt193=1;
            }
            switch (alt193) {
                case 1 :
                    // InternalScadeEquations.g:7911:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:7911:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:7912:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_93);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:7929:3: ( ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* ) | (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* ) )
            int alt201=2;
            int LA201_0 = input.LA(1);

            if ( (LA201_0==66||LA201_0==73) ) {
                alt201=1;
            }
            else if ( (LA201_0==25) ) {
                alt201=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 201, 0, input);

                throw nvae;
            }
            switch (alt201) {
                case 1 :
                    // InternalScadeEquations.g:7930:4: ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* )
                    {
                    // InternalScadeEquations.g:7930:4: ( ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )* )
                    // InternalScadeEquations.g:7931:5: ( (lv_input_2_0= 'input' ) )? otherlv_3= 'ref' ( ( ( rulePrimeID ) ) otherlv_5= '.' )? ( ( rulePrimeID ) ) (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )? ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) ) (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )*
                    {
                    // InternalScadeEquations.g:7931:5: ( (lv_input_2_0= 'input' ) )?
                    int alt194=2;
                    int LA194_0 = input.LA(1);

                    if ( (LA194_0==66) ) {
                        alt194=1;
                    }
                    switch (alt194) {
                        case 1 :
                            // InternalScadeEquations.g:7932:6: (lv_input_2_0= 'input' )
                            {
                            // InternalScadeEquations.g:7932:6: (lv_input_2_0= 'input' )
                            // InternalScadeEquations.g:7933:7: lv_input_2_0= 'input'
                            {
                            lv_input_2_0=(Token)match(input,66,FollowSets000.FOLLOW_94); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_input_2_0, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getInputInputKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                              							}
                              							setWithLastConsumed(current, "input", lv_input_2_0 != null, "input");
                              						
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,73,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getRefKeyword_2_0_1());
                      				
                    }
                    // InternalScadeEquations.g:7949:5: ( ( ( rulePrimeID ) ) otherlv_5= '.' )?
                    int alt195=2;
                    alt195 = dfa195.predict(input);
                    switch (alt195) {
                        case 1 :
                            // InternalScadeEquations.g:7950:6: ( ( rulePrimeID ) ) otherlv_5= '.'
                            {
                            // InternalScadeEquations.g:7950:6: ( ( rulePrimeID ) )
                            // InternalScadeEquations.g:7951:7: ( rulePrimeID )
                            {
                            // InternalScadeEquations.g:7951:7: ( rulePrimeID )
                            // InternalScadeEquations.g:7952:8: rulePrimeID
                            {
                            if ( state.backtracking==0 ) {

                              								/* */
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                              								}
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceContainerNamedObjectCrossReference_2_0_2_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_95);
                            rulePrimeID();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getFullStopKeyword_2_0_2_1());
                              					
                            }

                            }
                            break;

                    }

                    // InternalScadeEquations.g:7974:5: ( ( rulePrimeID ) )
                    // InternalScadeEquations.g:7975:6: ( rulePrimeID )
                    {
                    // InternalScadeEquations.g:7975:6: ( rulePrimeID )
                    // InternalScadeEquations.g:7976:7: rulePrimeID
                    {
                    if ( state.backtracking==0 ) {

                      							/* */
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getReferenceNamedObjectCrossReference_2_0_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_96);
                    rulePrimeID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:7993:5: (otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>' )?
                    int alt197=2;
                    int LA197_0 = input.LA(1);

                    if ( (LA197_0==74) ) {
                        alt197=1;
                    }
                    switch (alt197) {
                        case 1 :
                            // InternalScadeEquations.g:7994:6: otherlv_7= '<' ( (lv_genericParameters_8_0= ruleGenericParameter ) ) (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )* otherlv_11= '>'
                            {
                            otherlv_7=(Token)match(input,74,FollowSets000.FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getLessThanSignKeyword_2_0_4_0());
                              					
                            }
                            // InternalScadeEquations.g:7998:6: ( (lv_genericParameters_8_0= ruleGenericParameter ) )
                            // InternalScadeEquations.g:7999:7: (lv_genericParameters_8_0= ruleGenericParameter )
                            {
                            // InternalScadeEquations.g:7999:7: (lv_genericParameters_8_0= ruleGenericParameter )
                            // InternalScadeEquations.g:8000:8: lv_genericParameters_8_0= ruleGenericParameter
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGenericParametersGenericParameterParserRuleCall_2_0_4_1_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_98);
                            lv_genericParameters_8_0=ruleGenericParameter();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                              								}
                              								add(
                              									current,
                              									"genericParameters",
                              									lv_genericParameters_8_0,
                              									"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalScadeEquations.g:8017:6: (otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) ) )*
                            loop196:
                            do {
                                int alt196=2;
                                int LA196_0 = input.LA(1);

                                if ( (LA196_0==18) ) {
                                    alt196=1;
                                }


                                switch (alt196) {
                            	case 1 :
                            	    // InternalScadeEquations.g:8018:7: otherlv_9= ',' ( (lv_genericParameters_10_0= ruleGenericParameter ) )
                            	    {
                            	    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_97); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_9, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_0_4_2_0());
                            	      						
                            	    }
                            	    // InternalScadeEquations.g:8022:7: ( (lv_genericParameters_10_0= ruleGenericParameter ) )
                            	    // InternalScadeEquations.g:8023:8: (lv_genericParameters_10_0= ruleGenericParameter )
                            	    {
                            	    // InternalScadeEquations.g:8023:8: (lv_genericParameters_10_0= ruleGenericParameter )
                            	    // InternalScadeEquations.g:8024:9: lv_genericParameters_10_0= ruleGenericParameter
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGenericParametersGenericParameterParserRuleCall_2_0_4_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FollowSets000.FOLLOW_98);
                            	    lv_genericParameters_10_0=ruleGenericParameter();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"genericParameters",
                            	      										lv_genericParameters_10_0,
                            	      										"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop196;
                                }
                            } while (true);

                            otherlv_11=(Token)match(input,75,FollowSets000.FOLLOW_96); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getGreaterThanSignKeyword_2_0_4_3());
                              					
                            }

                            }
                            break;

                    }

                    // InternalScadeEquations.g:8047:5: ( (lv_valuedObjects_12_0= ruleReferenceValuedObject ) )
                    // InternalScadeEquations.g:8048:6: (lv_valuedObjects_12_0= ruleReferenceValuedObject )
                    {
                    // InternalScadeEquations.g:8048:6: (lv_valuedObjects_12_0= ruleReferenceValuedObject )
                    // InternalScadeEquations.g:8049:7: lv_valuedObjects_12_0= ruleReferenceValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsReferenceValuedObjectParserRuleCall_2_0_5_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_valuedObjects_12_0=ruleReferenceValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"valuedObjects",
                      								lv_valuedObjects_12_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ReferenceValuedObject");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:8066:5: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) ) )*
                    loop198:
                    do {
                        int alt198=2;
                        int LA198_0 = input.LA(1);

                        if ( (LA198_0==18) ) {
                            alt198=1;
                        }


                        switch (alt198) {
                    	case 1 :
                    	    // InternalScadeEquations.g:8067:6: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) )
                    	    {
                    	    otherlv_13=(Token)match(input,18,FollowSets000.FOLLOW_96); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_13, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_0_6_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:8071:6: ( (lv_valuedObjects_14_0= ruleReferenceValuedObject ) )
                    	    // InternalScadeEquations.g:8072:7: (lv_valuedObjects_14_0= ruleReferenceValuedObject )
                    	    {
                    	    // InternalScadeEquations.g:8072:7: (lv_valuedObjects_14_0= ruleReferenceValuedObject )
                    	    // InternalScadeEquations.g:8073:8: lv_valuedObjects_14_0= ruleReferenceValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsReferenceValuedObjectParserRuleCall_2_0_6_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_74);
                    	    lv_valuedObjects_14_0=ruleReferenceValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"valuedObjects",
                    	      									lv_valuedObjects_14_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ReferenceValuedObject");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop198;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:8093:4: (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )
                    {
                    // InternalScadeEquations.g:8093:4: (otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )* )
                    // InternalScadeEquations.g:8094:5: otherlv_15= 'extern' ( (lv_extern_16_0= ruleExternString ) ) (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )* ( (lv_valuedObjects_19_0= ruleValuedObject ) ) (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    {
                    otherlv_15=(Token)match(input,25,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_15, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternKeyword_2_1_0());
                      				
                    }
                    // InternalScadeEquations.g:8098:5: ( (lv_extern_16_0= ruleExternString ) )
                    // InternalScadeEquations.g:8099:6: (lv_extern_16_0= ruleExternString )
                    {
                    // InternalScadeEquations.g:8099:6: (lv_extern_16_0= ruleExternString )
                    // InternalScadeEquations.g:8100:7: lv_extern_16_0= ruleExternString
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_100);
                    lv_extern_16_0=ruleExternString();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"extern",
                      								lv_extern_16_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:8117:5: (otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) ) )*
                    loop199:
                    do {
                        int alt199=2;
                        int LA199_0 = input.LA(1);

                        if ( (LA199_0==18) ) {
                            alt199=1;
                        }


                        switch (alt199) {
                    	case 1 :
                    	    // InternalScadeEquations.g:8118:6: otherlv_17= ',' ( (lv_extern_18_0= ruleExternString ) )
                    	    {
                    	    otherlv_17=(Token)match(input,18,FollowSets000.FOLLOW_99); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_17, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:8122:6: ( (lv_extern_18_0= ruleExternString ) )
                    	    // InternalScadeEquations.g:8123:7: (lv_extern_18_0= ruleExternString )
                    	    {
                    	    // InternalScadeEquations.g:8123:7: (lv_extern_18_0= ruleExternString )
                    	    // InternalScadeEquations.g:8124:8: lv_extern_18_0= ruleExternString
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getExternExternStringParserRuleCall_2_1_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_100);
                    	    lv_extern_18_0=ruleExternString();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"extern",
                    	      									lv_extern_18_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ExternString");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop199;
                        }
                    } while (true);

                    // InternalScadeEquations.g:8142:5: ( (lv_valuedObjects_19_0= ruleValuedObject ) )
                    // InternalScadeEquations.g:8143:6: (lv_valuedObjects_19_0= ruleValuedObject )
                    {
                    // InternalScadeEquations.g:8143:6: (lv_valuedObjects_19_0= ruleValuedObject )
                    // InternalScadeEquations.g:8144:7: lv_valuedObjects_19_0= ruleValuedObject
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_2_1_3_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_74);
                    lv_valuedObjects_19_0=ruleValuedObject();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      							}
                      							add(
                      								current,
                      								"valuedObjects",
                      								lv_valuedObjects_19_0,
                      								"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:8161:5: (otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) ) )*
                    loop200:
                    do {
                        int alt200=2;
                        int LA200_0 = input.LA(1);

                        if ( (LA200_0==18) ) {
                            alt200=1;
                        }


                        switch (alt200) {
                    	case 1 :
                    	    // InternalScadeEquations.g:8162:6: otherlv_20= ',' ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    {
                    	    otherlv_20=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_20, grammarAccess.getReferenceDeclarationWOSemicolonAccess().getCommaKeyword_2_1_4_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:8166:6: ( (lv_valuedObjects_21_0= ruleValuedObject ) )
                    	    // InternalScadeEquations.g:8167:7: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    {
                    	    // InternalScadeEquations.g:8167:7: (lv_valuedObjects_21_0= ruleValuedObject )
                    	    // InternalScadeEquations.g:8168:8: lv_valuedObjects_21_0= ruleValuedObject
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_2_1_4_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_74);
                    	    lv_valuedObjects_21_0=ruleValuedObject();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"valuedObjects",
                    	      									lv_valuedObjects_21_0,
                    	      									"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop200;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:8188:3: ( (lv_annotations_22_0= ruleCommentAnnotatonSL ) )?
            int alt202=2;
            int LA202_0 = input.LA(1);

            if ( (LA202_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt202=1;
            }
            switch (alt202) {
                case 1 :
                    // InternalScadeEquations.g:8189:4: (lv_annotations_22_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:8189:4: (lv_annotations_22_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:8190:5: lv_annotations_22_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getReferenceDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_22_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getReferenceDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_22_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceDeclarationWOSemicolon"


    // $ANTLR start "entryRuleExternString"
    // InternalScadeEquations.g:8211:1: entryRuleExternString returns [EObject current=null] : iv_ruleExternString= ruleExternString EOF ;
    public final EObject entryRuleExternString() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExternString = null;


        try {
            // InternalScadeEquations.g:8211:53: (iv_ruleExternString= ruleExternString EOF )
            // InternalScadeEquations.g:8212:2: iv_ruleExternString= ruleExternString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExternStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExternString=ruleExternString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExternString; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExternString"


    // $ANTLR start "ruleExternString"
    // InternalScadeEquations.g:8218:1: ruleExternString returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) ;
    public final EObject ruleExternString() throws RecognitionException {
        EObject current = null;

        Token lv_code_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8224:2: ( ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) ) )
            // InternalScadeEquations.g:8225:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            {
            // InternalScadeEquations.g:8225:2: ( ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) ) )
            // InternalScadeEquations.g:8226:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )* ( (lv_code_1_0= RULE_STRING ) )
            {
            // InternalScadeEquations.g:8226:3: ( (lv_annotations_0_0= ruleTagAnnotation ) )*
            loop203:
            do {
                int alt203=2;
                int LA203_0 = input.LA(1);

                if ( (LA203_0==92) ) {
                    alt203=1;
                }


                switch (alt203) {
            	case 1 :
            	    // InternalScadeEquations.g:8227:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    {
            	    // InternalScadeEquations.g:8227:4: (lv_annotations_0_0= ruleTagAnnotation )
            	    // InternalScadeEquations.g:8228:5: lv_annotations_0_0= ruleTagAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getExternStringAccess().getAnnotationsTagAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_99);
            	    lv_annotations_0_0=ruleTagAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getExternStringRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.annotations.Annotations.TagAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop203;
                }
            } while (true);

            // InternalScadeEquations.g:8245:3: ( (lv_code_1_0= RULE_STRING ) )
            // InternalScadeEquations.g:8246:4: (lv_code_1_0= RULE_STRING )
            {
            // InternalScadeEquations.g:8246:4: (lv_code_1_0= RULE_STRING )
            // InternalScadeEquations.g:8247:5: lv_code_1_0= RULE_STRING
            {
            lv_code_1_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_code_1_0, grammarAccess.getExternStringAccess().getCodeSTRINGTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getExternStringRule());
              					}
              					setWithLastConsumed(
              						current,
              						"code",
              						lv_code_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExternString"


    // $ANTLR start "entryRuleGenericParameter"
    // InternalScadeEquations.g:8267:1: entryRuleGenericParameter returns [EObject current=null] : iv_ruleGenericParameter= ruleGenericParameter EOF ;
    public final EObject entryRuleGenericParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGenericParameter = null;


        try {
            // InternalScadeEquations.g:8267:57: (iv_ruleGenericParameter= ruleGenericParameter EOF )
            // InternalScadeEquations.g:8268:2: iv_ruleGenericParameter= ruleGenericParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGenericParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGenericParameter=ruleGenericParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGenericParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGenericParameter"


    // $ANTLR start "ruleGenericParameter"
    // InternalScadeEquations.g:8274:1: ruleGenericParameter returns [EObject current=null] : ( ( (lv_expression_0_1= ruleValueTypeReference | lv_expression_0_2= ruleAnyValue | lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized | lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array | lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub | lv_expression_0_6= ruleGenericTypeReference | lv_expression_0_7= ruleValuedObjectReference ) ) ) ;
    public final EObject ruleGenericParameter() throws RecognitionException {
        EObject current = null;

        EObject lv_expression_0_1 = null;

        EObject lv_expression_0_2 = null;

        EObject lv_expression_0_3 = null;

        EObject lv_expression_0_4 = null;

        EObject lv_expression_0_5 = null;

        EObject lv_expression_0_6 = null;

        EObject lv_expression_0_7 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8280:2: ( ( ( (lv_expression_0_1= ruleValueTypeReference | lv_expression_0_2= ruleAnyValue | lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized | lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array | lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub | lv_expression_0_6= ruleGenericTypeReference | lv_expression_0_7= ruleValuedObjectReference ) ) ) )
            // InternalScadeEquations.g:8281:2: ( ( (lv_expression_0_1= ruleValueTypeReference | lv_expression_0_2= ruleAnyValue | lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized | lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array | lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub | lv_expression_0_6= ruleGenericTypeReference | lv_expression_0_7= ruleValuedObjectReference ) ) )
            {
            // InternalScadeEquations.g:8281:2: ( ( (lv_expression_0_1= ruleValueTypeReference | lv_expression_0_2= ruleAnyValue | lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized | lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array | lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub | lv_expression_0_6= ruleGenericTypeReference | lv_expression_0_7= ruleValuedObjectReference ) ) )
            // InternalScadeEquations.g:8282:3: ( (lv_expression_0_1= ruleValueTypeReference | lv_expression_0_2= ruleAnyValue | lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized | lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array | lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub | lv_expression_0_6= ruleGenericTypeReference | lv_expression_0_7= ruleValuedObjectReference ) )
            {
            // InternalScadeEquations.g:8282:3: ( (lv_expression_0_1= ruleValueTypeReference | lv_expression_0_2= ruleAnyValue | lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized | lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array | lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub | lv_expression_0_6= ruleGenericTypeReference | lv_expression_0_7= ruleValuedObjectReference ) )
            // InternalScadeEquations.g:8283:4: (lv_expression_0_1= ruleValueTypeReference | lv_expression_0_2= ruleAnyValue | lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized | lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array | lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub | lv_expression_0_6= ruleGenericTypeReference | lv_expression_0_7= ruleValuedObjectReference )
            {
            // InternalScadeEquations.g:8283:4: (lv_expression_0_1= ruleValueTypeReference | lv_expression_0_2= ruleAnyValue | lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized | lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array | lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub | lv_expression_0_6= ruleGenericTypeReference | lv_expression_0_7= ruleValuedObjectReference )
            int alt204=7;
            alt204 = dfa204.predict(input);
            switch (alt204) {
                case 1 :
                    // InternalScadeEquations.g:8284:5: lv_expression_0_1= ruleValueTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionValueTypeReferenceParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_1=ruleValueTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGenericParameterRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_1,
                      						"de.cau.cs.kieler.kexpressions.kext.KExt.ValueTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:8300:5: lv_expression_0_2= ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionAnyValueParserRuleCall_0_1());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_2=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGenericParameterRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_2,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AnyValue");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:8316:5: lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericParameter_GenericTypeReference_ParameterizedParserRuleCall_0_2());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_3=ruleGenericParameter_GenericTypeReference_Parameterized();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGenericParameterRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_3,
                      						"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter_GenericTypeReference_Parameterized");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:8332:5: lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericParameter_ValuedObjectReference_ArrayParserRuleCall_0_3());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_4=ruleGenericParameter_ValuedObjectReference_Array();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGenericParameterRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_4,
                      						"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter_ValuedObjectReference_Array");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:8348:5: lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericParameter_ValuedObjectReference_SubParserRuleCall_0_4());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_5=ruleGenericParameter_ValuedObjectReference_Sub();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGenericParameterRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_5,
                      						"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter_ValuedObjectReference_Sub");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 6 :
                    // InternalScadeEquations.g:8364:5: lv_expression_0_6= ruleGenericTypeReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericTypeReferenceParserRuleCall_0_5());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_6=ruleGenericTypeReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGenericParameterRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_6,
                      						"de.cau.cs.kieler.kexpressions.kext.KExt.GenericTypeReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 7 :
                    // InternalScadeEquations.g:8380:5: lv_expression_0_7= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_6());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_0_7=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getGenericParameterRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_0_7,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGenericParameter"


    // $ANTLR start "entryRuleValueTypeReference"
    // InternalScadeEquations.g:8401:1: entryRuleValueTypeReference returns [EObject current=null] : iv_ruleValueTypeReference= ruleValueTypeReference EOF ;
    public final EObject entryRuleValueTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueTypeReference = null;


        try {
            // InternalScadeEquations.g:8401:59: (iv_ruleValueTypeReference= ruleValueTypeReference EOF )
            // InternalScadeEquations.g:8402:2: iv_ruleValueTypeReference= ruleValueTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueTypeReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValueTypeReference=ruleValueTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueTypeReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueTypeReference"


    // $ANTLR start "ruleValueTypeReference"
    // InternalScadeEquations.g:8408:1: ruleValueTypeReference returns [EObject current=null] : ( (lv_valueType_0_0= ruleValueType ) ) ;
    public final EObject ruleValueTypeReference() throws RecognitionException {
        EObject current = null;

        Enumerator lv_valueType_0_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8414:2: ( ( (lv_valueType_0_0= ruleValueType ) ) )
            // InternalScadeEquations.g:8415:2: ( (lv_valueType_0_0= ruleValueType ) )
            {
            // InternalScadeEquations.g:8415:2: ( (lv_valueType_0_0= ruleValueType ) )
            // InternalScadeEquations.g:8416:3: (lv_valueType_0_0= ruleValueType )
            {
            // InternalScadeEquations.g:8416:3: (lv_valueType_0_0= ruleValueType )
            // InternalScadeEquations.g:8417:4: lv_valueType_0_0= ruleValueType
            {
            if ( state.backtracking==0 ) {

              				newCompositeNode(grammarAccess.getValueTypeReferenceAccess().getValueTypeValueTypeEnumRuleCall_0());
              			
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_valueType_0_0=ruleValueType();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElementForParent(grammarAccess.getValueTypeReferenceRule());
              				}
              				set(
              					current,
              					"valueType",
              					lv_valueType_0_0,
              					"de.cau.cs.kieler.lustre.Lustre.ValueType");
              				afterParserOrEnumRuleCall();
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueTypeReference"


    // $ANTLR start "entryRuleGenericTypeReference"
    // InternalScadeEquations.g:8437:1: entryRuleGenericTypeReference returns [EObject current=null] : iv_ruleGenericTypeReference= ruleGenericTypeReference EOF ;
    public final EObject entryRuleGenericTypeReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGenericTypeReference = null;


        try {
            // InternalScadeEquations.g:8437:61: (iv_ruleGenericTypeReference= ruleGenericTypeReference EOF )
            // InternalScadeEquations.g:8438:2: iv_ruleGenericTypeReference= ruleGenericTypeReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGenericTypeReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGenericTypeReference=ruleGenericTypeReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGenericTypeReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGenericTypeReference"


    // $ANTLR start "ruleGenericTypeReference"
    // InternalScadeEquations.g:8444:1: ruleGenericTypeReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>' )? ) ;
    public final EObject ruleGenericTypeReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_genericParameters_2_0 = null;

        EObject lv_genericParameters_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8450:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>' )? ) )
            // InternalScadeEquations.g:8451:2: ( ( ( rulePrimeID ) ) (otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>' )? )
            {
            // InternalScadeEquations.g:8451:2: ( ( ( rulePrimeID ) ) (otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>' )? )
            // InternalScadeEquations.g:8452:3: ( ( rulePrimeID ) ) (otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>' )?
            {
            // InternalScadeEquations.g:8452:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:8453:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:8453:4: ( rulePrimeID )
            // InternalScadeEquations.g:8454:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGenericTypeReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGenericTypeReferenceAccess().getTypeNamedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_101);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8471:3: (otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>' )?
            int alt206=2;
            int LA206_0 = input.LA(1);

            if ( (LA206_0==74) ) {
                alt206=1;
            }
            switch (alt206) {
                case 1 :
                    // InternalScadeEquations.g:8472:4: otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>'
                    {
                    otherlv_1=(Token)match(input,74,FollowSets000.FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getGenericTypeReferenceAccess().getLessThanSignKeyword_1_0());
                      			
                    }
                    // InternalScadeEquations.g:8476:4: ( (lv_genericParameters_2_0= ruleGenericParameter ) )
                    // InternalScadeEquations.g:8477:5: (lv_genericParameters_2_0= ruleGenericParameter )
                    {
                    // InternalScadeEquations.g:8477:5: (lv_genericParameters_2_0= ruleGenericParameter )
                    // InternalScadeEquations.g:8478:6: lv_genericParameters_2_0= ruleGenericParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGenericTypeReferenceAccess().getGenericParametersGenericParameterParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_genericParameters_2_0=ruleGenericParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGenericTypeReferenceRule());
                      						}
                      						add(
                      							current,
                      							"genericParameters",
                      							lv_genericParameters_2_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:8495:4: (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )*
                    loop205:
                    do {
                        int alt205=2;
                        int LA205_0 = input.LA(1);

                        if ( (LA205_0==18) ) {
                            alt205=1;
                        }


                        switch (alt205) {
                    	case 1 :
                    	    // InternalScadeEquations.g:8496:5: otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_97); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getGenericTypeReferenceAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:8500:5: ( (lv_genericParameters_4_0= ruleGenericParameter ) )
                    	    // InternalScadeEquations.g:8501:6: (lv_genericParameters_4_0= ruleGenericParameter )
                    	    {
                    	    // InternalScadeEquations.g:8501:6: (lv_genericParameters_4_0= ruleGenericParameter )
                    	    // InternalScadeEquations.g:8502:7: lv_genericParameters_4_0= ruleGenericParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getGenericTypeReferenceAccess().getGenericParametersGenericParameterParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_genericParameters_4_0=ruleGenericParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getGenericTypeReferenceRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"genericParameters",
                    	      								lv_genericParameters_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop205;
                        }
                    } while (true);

                    otherlv_5=(Token)match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getGenericTypeReferenceAccess().getGreaterThanSignKeyword_1_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGenericTypeReference"


    // $ANTLR start "entryRuleGenericParameter_GenericTypeReference_Parameterized"
    // InternalScadeEquations.g:8529:1: entryRuleGenericParameter_GenericTypeReference_Parameterized returns [EObject current=null] : iv_ruleGenericParameter_GenericTypeReference_Parameterized= ruleGenericParameter_GenericTypeReference_Parameterized EOF ;
    public final EObject entryRuleGenericParameter_GenericTypeReference_Parameterized() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGenericParameter_GenericTypeReference_Parameterized = null;


        try {
            // InternalScadeEquations.g:8529:92: (iv_ruleGenericParameter_GenericTypeReference_Parameterized= ruleGenericParameter_GenericTypeReference_Parameterized EOF )
            // InternalScadeEquations.g:8530:2: iv_ruleGenericParameter_GenericTypeReference_Parameterized= ruleGenericParameter_GenericTypeReference_Parameterized EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGenericParameter_GenericTypeReference_Parameterized=ruleGenericParameter_GenericTypeReference_Parameterized();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGenericParameter_GenericTypeReference_Parameterized; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGenericParameter_GenericTypeReference_Parameterized"


    // $ANTLR start "ruleGenericParameter_GenericTypeReference_Parameterized"
    // InternalScadeEquations.g:8536:1: ruleGenericParameter_GenericTypeReference_Parameterized returns [EObject current=null] : ( ( ( rulePrimeID ) ) otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>' ) ;
    public final EObject ruleGenericParameter_GenericTypeReference_Parameterized() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_genericParameters_2_0 = null;

        EObject lv_genericParameters_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8542:2: ( ( ( ( rulePrimeID ) ) otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>' ) )
            // InternalScadeEquations.g:8543:2: ( ( ( rulePrimeID ) ) otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>' )
            {
            // InternalScadeEquations.g:8543:2: ( ( ( rulePrimeID ) ) otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>' )
            // InternalScadeEquations.g:8544:3: ( ( rulePrimeID ) ) otherlv_1= '<' ( (lv_genericParameters_2_0= ruleGenericParameter ) ) (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )* otherlv_5= '>'
            {
            // InternalScadeEquations.g:8544:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:8545:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:8545:4: ( rulePrimeID )
            // InternalScadeEquations.g:8546:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getTypeNamedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_102);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,74,FollowSets000.FOLLOW_97); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getLessThanSignKeyword_1());
              		
            }
            // InternalScadeEquations.g:8567:3: ( (lv_genericParameters_2_0= ruleGenericParameter ) )
            // InternalScadeEquations.g:8568:4: (lv_genericParameters_2_0= ruleGenericParameter )
            {
            // InternalScadeEquations.g:8568:4: (lv_genericParameters_2_0= ruleGenericParameter )
            // InternalScadeEquations.g:8569:5: lv_genericParameters_2_0= ruleGenericParameter
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getGenericParametersGenericParameterParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_98);
            lv_genericParameters_2_0=ruleGenericParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedRule());
              					}
              					add(
              						current,
              						"genericParameters",
              						lv_genericParameters_2_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8586:3: (otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) ) )*
            loop207:
            do {
                int alt207=2;
                int LA207_0 = input.LA(1);

                if ( (LA207_0==18) ) {
                    alt207=1;
                }


                switch (alt207) {
            	case 1 :
            	    // InternalScadeEquations.g:8587:4: otherlv_3= ',' ( (lv_genericParameters_4_0= ruleGenericParameter ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_97); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:8591:4: ( (lv_genericParameters_4_0= ruleGenericParameter ) )
            	    // InternalScadeEquations.g:8592:5: (lv_genericParameters_4_0= ruleGenericParameter )
            	    {
            	    // InternalScadeEquations.g:8592:5: (lv_genericParameters_4_0= ruleGenericParameter )
            	    // InternalScadeEquations.g:8593:6: lv_genericParameters_4_0= ruleGenericParameter
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getGenericParametersGenericParameterParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_98);
            	    lv_genericParameters_4_0=ruleGenericParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedRule());
            	      						}
            	      						add(
            	      							current,
            	      							"genericParameters",
            	      							lv_genericParameters_4_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop207;
                }
            } while (true);

            otherlv_5=(Token)match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getGenericParameter_GenericTypeReference_ParameterizedAccess().getGreaterThanSignKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGenericParameter_GenericTypeReference_Parameterized"


    // $ANTLR start "entryRuleGenericParameter_ValuedObjectReference_Array"
    // InternalScadeEquations.g:8619:1: entryRuleGenericParameter_ValuedObjectReference_Array returns [EObject current=null] : iv_ruleGenericParameter_ValuedObjectReference_Array= ruleGenericParameter_ValuedObjectReference_Array EOF ;
    public final EObject entryRuleGenericParameter_ValuedObjectReference_Array() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGenericParameter_ValuedObjectReference_Array = null;


        try {
            // InternalScadeEquations.g:8619:85: (iv_ruleGenericParameter_ValuedObjectReference_Array= ruleGenericParameter_ValuedObjectReference_Array EOF )
            // InternalScadeEquations.g:8620:2: iv_ruleGenericParameter_ValuedObjectReference_Array= ruleGenericParameter_ValuedObjectReference_Array EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGenericParameter_ValuedObjectReference_Array=ruleGenericParameter_ValuedObjectReference_Array();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGenericParameter_ValuedObjectReference_Array; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGenericParameter_ValuedObjectReference_Array"


    // $ANTLR start "ruleGenericParameter_ValuedObjectReference_Array"
    // InternalScadeEquations.g:8626:1: ruleGenericParameter_ValuedObjectReference_Array returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )+ (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleGenericParameter_ValuedObjectReference_Array() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8632:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )+ (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalScadeEquations.g:8633:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )+ (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalScadeEquations.g:8633:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )+ (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalScadeEquations.g:8634:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )+ (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalScadeEquations.g:8634:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:8635:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:8635:4: ( rulePrimeID )
            // InternalScadeEquations.g:8636:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_103);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8653:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )+
            int cnt208=0;
            loop208:
            do {
                int alt208=2;
                int LA208_0 = input.LA(1);

                if ( (LA208_0==76) ) {
                    alt208=1;
                }


                switch (alt208) {
            	case 1 :
            	    // InternalScadeEquations.g:8654:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,76,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:8658:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalScadeEquations.g:8659:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:8659:5: (lv_indices_2_0= ruleExpression )
            	    // InternalScadeEquations.g:8660:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,77,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    if ( cnt208 >= 1 ) break loop208;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(208, input);
                        throw eee;
                }
                cnt208++;
            } while (true);

            // InternalScadeEquations.g:8682:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt209=2;
            int LA209_0 = input.LA(1);

            if ( (LA209_0==37) ) {
                alt209=1;
            }
            switch (alt209) {
                case 1 :
                    // InternalScadeEquations.g:8683:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:8687:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:8688:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:8688:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:8689:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getGenericParameter_ValuedObjectReference_ArrayRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGenericParameter_ValuedObjectReference_Array"


    // $ANTLR start "entryRuleGenericParameter_ValuedObjectReference_Sub"
    // InternalScadeEquations.g:8711:1: entryRuleGenericParameter_ValuedObjectReference_Sub returns [EObject current=null] : iv_ruleGenericParameter_ValuedObjectReference_Sub= ruleGenericParameter_ValuedObjectReference_Sub EOF ;
    public final EObject entryRuleGenericParameter_ValuedObjectReference_Sub() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleGenericParameter_ValuedObjectReference_Sub = null;


        try {
            // InternalScadeEquations.g:8711:83: (iv_ruleGenericParameter_ValuedObjectReference_Sub= ruleGenericParameter_ValuedObjectReference_Sub EOF )
            // InternalScadeEquations.g:8712:2: iv_ruleGenericParameter_ValuedObjectReference_Sub= ruleGenericParameter_ValuedObjectReference_Sub EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_SubRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleGenericParameter_ValuedObjectReference_Sub=ruleGenericParameter_ValuedObjectReference_Sub();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleGenericParameter_ValuedObjectReference_Sub; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleGenericParameter_ValuedObjectReference_Sub"


    // $ANTLR start "ruleGenericParameter_ValuedObjectReference_Sub"
    // InternalScadeEquations.g:8718:1: ruleGenericParameter_ValuedObjectReference_Sub returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) ) ) ;
    public final EObject ruleGenericParameter_ValuedObjectReference_Sub() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8724:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) ) ) )
            // InternalScadeEquations.g:8725:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) ) )
            {
            // InternalScadeEquations.g:8725:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) ) )
            // InternalScadeEquations.g:8726:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )
            {
            // InternalScadeEquations.g:8726:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:8727:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:8727:4: ( rulePrimeID )
            // InternalScadeEquations.g:8728:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getGenericParameter_ValuedObjectReference_SubRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_106);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8745:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop210:
            do {
                int alt210=2;
                int LA210_0 = input.LA(1);

                if ( (LA210_0==76) ) {
                    alt210=1;
                }


                switch (alt210) {
            	case 1 :
            	    // InternalScadeEquations.g:8746:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,76,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:8750:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalScadeEquations.g:8751:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:8751:5: (lv_indices_2_0= ruleExpression )
            	    // InternalScadeEquations.g:8752:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getGenericParameter_ValuedObjectReference_SubRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,77,FollowSets000.FOLLOW_106); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop210;
                }
            } while (true);

            // InternalScadeEquations.g:8774:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )
            // InternalScadeEquations.g:8775:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
            {
            otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_4, grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getFullStopKeyword_2_0());
              			
            }
            // InternalScadeEquations.g:8779:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
            // InternalScadeEquations.g:8780:5: (lv_subReference_5_0= ruleValuedObjectReference )
            {
            // InternalScadeEquations.g:8780:5: (lv_subReference_5_0= ruleValuedObjectReference )
            // InternalScadeEquations.g:8781:6: lv_subReference_5_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getGenericParameter_ValuedObjectReference_SubAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_subReference_5_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getGenericParameter_ValuedObjectReference_SubRule());
              						}
              						set(
              							current,
              							"subReference",
              							lv_subReference_5_0,
              							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleGenericParameter_ValuedObjectReference_Sub"


    // $ANTLR start "entryRuleScheduleDeclaration"
    // InternalScadeEquations.g:8803:1: entryRuleScheduleDeclaration returns [EObject current=null] : iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF ;
    public final EObject entryRuleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclaration = null;


        try {
            // InternalScadeEquations.g:8803:60: (iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF )
            // InternalScadeEquations.g:8804:2: iv_ruleScheduleDeclaration= ruleScheduleDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclaration=ruleScheduleDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclaration; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclaration"


    // $ANTLR start "ruleScheduleDeclaration"
    // InternalScadeEquations.g:8810:1: ruleScheduleDeclaration returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_15_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:8816:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:8817:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:8817:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:8818:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* otherlv_14= ';' ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:8818:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop211:
            do {
                int alt211=2;
                int LA211_0 = input.LA(1);

                if ( (LA211_0==RULE_COMMENT_ANNOTATION||LA211_0==92) ) {
                    alt211=1;
                }


                switch (alt211) {
            	case 1 :
            	    // InternalScadeEquations.g:8819:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:8819:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:8820:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop211;
                }
            } while (true);

            // InternalScadeEquations.g:8837:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt212=2;
            int LA212_0 = input.LA(1);

            if ( ((LA212_0>=119 && LA212_0<=121)) ) {
                alt212=1;
            }
            switch (alt212) {
                case 1 :
                    // InternalScadeEquations.g:8838:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:8838:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:8839:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,72,FollowSets000.FOLLOW_109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationAccess().getScheduleKeyword_2());
              		
            }
            // InternalScadeEquations.g:8860:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt213=2;
            int LA213_0 = input.LA(1);

            if ( (LA213_0==RULE_STRING) ) {
                alt213=1;
            }
            switch (alt213) {
                case 1 :
                    // InternalScadeEquations.g:8861:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:8861:4: (lv_name_3_0= RULE_STRING )
                    // InternalScadeEquations.g:8862:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:8878:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==68) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalScadeEquations.g:8879:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:8883:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalScadeEquations.g:8884:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalScadeEquations.g:8884:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalScadeEquations.g:8885:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_112);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:8903:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==22) ) {
                alt216=1;
            }
            switch (alt216) {
                case 1 :
                    // InternalScadeEquations.g:8904:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:8908:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalScadeEquations.g:8909:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalScadeEquations.g:8909:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalScadeEquations.g:8910:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:8927:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop215:
                    do {
                        int alt215=2;
                        int LA215_0 = input.LA(1);

                        if ( (LA215_0==18) ) {
                            alt215=1;
                        }


                        switch (alt215) {
                    	case 1 :
                    	    // InternalScadeEquations.g:8928:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:8932:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalScadeEquations.g:8933:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalScadeEquations.g:8933:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalScadeEquations.g:8934:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_17);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop215;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,23,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:8957:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalScadeEquations.g:8958:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalScadeEquations.g:8958:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalScadeEquations.g:8959:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_72);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:8976:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop217:
            do {
                int alt217=2;
                int LA217_0 = input.LA(1);

                if ( (LA217_0==18) ) {
                    alt217=1;
                }


                switch (alt217) {
            	case 1 :
            	    // InternalScadeEquations.g:8977:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:8981:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalScadeEquations.g:8982:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalScadeEquations.g:8982:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalScadeEquations.g:8983:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_72);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop217;
                }
            } while (true);

            otherlv_14=(Token)match(input,20,FollowSets000.FOLLOW_73); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_14, grammarAccess.getScheduleDeclarationAccess().getSemicolonKeyword_8());
              		
            }
            // InternalScadeEquations.g:9005:3: ( (lv_annotations_15_0= ruleCommentAnnotatonSL ) )?
            int alt218=2;
            int LA218_0 = input.LA(1);

            if ( (LA218_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt218=1;
            }
            switch (alt218) {
                case 1 :
                    // InternalScadeEquations.g:9006:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:9006:4: (lv_annotations_15_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:9007:5: lv_annotations_15_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_15_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_15_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclaration"


    // $ANTLR start "entryRuleScheduleDeclarationWOSemicolon"
    // InternalScadeEquations.g:9028:1: entryRuleScheduleDeclarationWOSemicolon returns [EObject current=null] : iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF ;
    public final EObject entryRuleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleDeclarationWOSemicolon = null;


        try {
            // InternalScadeEquations.g:9028:71: (iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF )
            // InternalScadeEquations.g:9029:2: iv_ruleScheduleDeclarationWOSemicolon= ruleScheduleDeclarationWOSemicolon EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleDeclarationWOSemicolon=ruleScheduleDeclarationWOSemicolon();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleDeclarationWOSemicolon; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleDeclarationWOSemicolon"


    // $ANTLR start "ruleScheduleDeclarationWOSemicolon"
    // InternalScadeEquations.g:9035:1: ruleScheduleDeclarationWOSemicolon returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) ;
    public final EObject ruleScheduleDeclarationWOSemicolon() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_annotations_0_0 = null;

        Enumerator lv_access_1_0 = null;

        Enumerator lv_global_5_0 = null;

        Enumerator lv_priorities_7_0 = null;

        Enumerator lv_priorities_9_0 = null;

        EObject lv_valuedObjects_11_0 = null;

        EObject lv_valuedObjects_13_0 = null;

        EObject lv_annotations_14_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9041:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? ) )
            // InternalScadeEquations.g:9042:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            {
            // InternalScadeEquations.g:9042:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )? )
            // InternalScadeEquations.g:9043:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_access_1_0= ruleAccessModifier ) )? otherlv_2= 'schedule' ( (lv_name_3_0= RULE_STRING ) )? (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )? (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )? ( (lv_valuedObjects_11_0= ruleValuedObject ) ) (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )* ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            {
            // InternalScadeEquations.g:9043:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop219:
            do {
                int alt219=2;
                int LA219_0 = input.LA(1);

                if ( (LA219_0==RULE_COMMENT_ANNOTATION||LA219_0==92) ) {
                    alt219=1;
                }


                switch (alt219) {
            	case 1 :
            	    // InternalScadeEquations.g:9044:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:9044:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:9045:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_107);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop219;
                }
            } while (true);

            // InternalScadeEquations.g:9062:3: ( (lv_access_1_0= ruleAccessModifier ) )?
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( ((LA220_0>=119 && LA220_0<=121)) ) {
                alt220=1;
            }
            switch (alt220) {
                case 1 :
                    // InternalScadeEquations.g:9063:4: (lv_access_1_0= ruleAccessModifier )
                    {
                    // InternalScadeEquations.g:9063:4: (lv_access_1_0= ruleAccessModifier )
                    // InternalScadeEquations.g:9064:5: lv_access_1_0= ruleAccessModifier
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAccessAccessModifierEnumRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_108);
                    lv_access_1_0=ruleAccessModifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					set(
                      						current,
                      						"access",
                      						lv_access_1_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.AccessModifier");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_2=(Token)match(input,72,FollowSets000.FOLLOW_109); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getScheduleKeyword_2());
              		
            }
            // InternalScadeEquations.g:9085:3: ( (lv_name_3_0= RULE_STRING ) )?
            int alt221=2;
            int LA221_0 = input.LA(1);

            if ( (LA221_0==RULE_STRING) ) {
                alt221=1;
            }
            switch (alt221) {
                case 1 :
                    // InternalScadeEquations.g:9086:4: (lv_name_3_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:9086:4: (lv_name_3_0= RULE_STRING )
                    // InternalScadeEquations.g:9087:5: lv_name_3_0= RULE_STRING
                    {
                    lv_name_3_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_3_0, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getNameSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_3_0,
                      						"de.cau.cs.kieler.annotations.Annotations.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:9103:3: (otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) ) )?
            int alt222=2;
            int LA222_0 = input.LA(1);

            if ( (LA222_0==68) ) {
                alt222=1;
            }
            switch (alt222) {
                case 1 :
                    // InternalScadeEquations.g:9104:4: otherlv_4= 'global' ( (lv_global_5_0= rulePriorityProtocol ) )
                    {
                    otherlv_4=(Token)match(input,68,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:9108:4: ( (lv_global_5_0= rulePriorityProtocol ) )
                    // InternalScadeEquations.g:9109:5: (lv_global_5_0= rulePriorityProtocol )
                    {
                    // InternalScadeEquations.g:9109:5: (lv_global_5_0= rulePriorityProtocol )
                    // InternalScadeEquations.g:9110:6: lv_global_5_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getGlobalPriorityProtocolEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_112);
                    lv_global_5_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						set(
                      							current,
                      							"global",
                      							lv_global_5_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:9128:3: (otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}' )?
            int alt224=2;
            int LA224_0 = input.LA(1);

            if ( (LA224_0==22) ) {
                alt224=1;
            }
            switch (alt224) {
                case 1 :
                    // InternalScadeEquations.g:9129:4: otherlv_6= '{' ( (lv_priorities_7_0= rulePriorityProtocol ) ) (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )* otherlv_10= '}'
                    {
                    otherlv_6=(Token)match(input,22,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getLeftCurlyBracketKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:9133:4: ( (lv_priorities_7_0= rulePriorityProtocol ) )
                    // InternalScadeEquations.g:9134:5: (lv_priorities_7_0= rulePriorityProtocol )
                    {
                    // InternalScadeEquations.g:9134:5: (lv_priorities_7_0= rulePriorityProtocol )
                    // InternalScadeEquations.g:9135:6: lv_priorities_7_0= rulePriorityProtocol
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_priorities_7_0=rulePriorityProtocol();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      						}
                      						add(
                      							current,
                      							"priorities",
                      							lv_priorities_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:9152:4: (otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) ) )*
                    loop223:
                    do {
                        int alt223=2;
                        int LA223_0 = input.LA(1);

                        if ( (LA223_0==18) ) {
                            alt223=1;
                        }


                        switch (alt223) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9153:5: otherlv_8= ',' ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    {
                    	    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_111); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:9157:5: ( (lv_priorities_9_0= rulePriorityProtocol ) )
                    	    // InternalScadeEquations.g:9158:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    {
                    	    // InternalScadeEquations.g:9158:6: (lv_priorities_9_0= rulePriorityProtocol )
                    	    // InternalScadeEquations.g:9159:7: lv_priorities_9_0= rulePriorityProtocol
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getPrioritiesPriorityProtocolEnumRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_17);
                    	    lv_priorities_9_0=rulePriorityProtocol();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"priorities",
                    	      								lv_priorities_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.PriorityProtocol");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop223;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,23,FollowSets000.FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getRightCurlyBracketKeyword_5_3());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:9182:3: ( (lv_valuedObjects_11_0= ruleValuedObject ) )
            // InternalScadeEquations.g:9183:4: (lv_valuedObjects_11_0= ruleValuedObject )
            {
            // InternalScadeEquations.g:9183:4: (lv_valuedObjects_11_0= ruleValuedObject )
            // InternalScadeEquations.g:9184:5: lv_valuedObjects_11_0= ruleValuedObject
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_6_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_74);
            lv_valuedObjects_11_0=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
              					}
              					add(
              						current,
              						"valuedObjects",
              						lv_valuedObjects_11_0,
              						"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:9201:3: (otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) ) )*
            loop225:
            do {
                int alt225=2;
                int LA225_0 = input.LA(1);

                if ( (LA225_0==18) ) {
                    alt225=1;
                }


                switch (alt225) {
            	case 1 :
            	    // InternalScadeEquations.g:9202:4: otherlv_12= ',' ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    {
            	    otherlv_12=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_12, grammarAccess.getScheduleDeclarationWOSemicolonAccess().getCommaKeyword_7_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:9206:4: ( (lv_valuedObjects_13_0= ruleValuedObject ) )
            	    // InternalScadeEquations.g:9207:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    {
            	    // InternalScadeEquations.g:9207:5: (lv_valuedObjects_13_0= ruleValuedObject )
            	    // InternalScadeEquations.g:9208:6: lv_valuedObjects_13_0= ruleValuedObject
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_7_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_74);
            	    lv_valuedObjects_13_0=ruleValuedObject();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
            	      						}
            	      						add(
            	      							current,
            	      							"valuedObjects",
            	      							lv_valuedObjects_13_0,
            	      							"de.cau.cs.kieler.kexpressions.kext.KExt.ValuedObject");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop225;
                }
            } while (true);

            // InternalScadeEquations.g:9226:3: ( (lv_annotations_14_0= ruleCommentAnnotatonSL ) )?
            int alt226=2;
            int LA226_0 = input.LA(1);

            if ( (LA226_0==RULE_SL_COMMENT_ANNOTATION) ) {
                alt226=1;
            }
            switch (alt226) {
                case 1 :
                    // InternalScadeEquations.g:9227:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    {
                    // InternalScadeEquations.g:9227:4: (lv_annotations_14_0= ruleCommentAnnotatonSL )
                    // InternalScadeEquations.g:9228:5: lv_annotations_14_0= ruleCommentAnnotatonSL
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getScheduleDeclarationWOSemicolonAccess().getAnnotationsCommentAnnotatonSLParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_annotations_14_0=ruleCommentAnnotatonSL();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getScheduleDeclarationWOSemicolonRule());
                      					}
                      					add(
                      						current,
                      						"annotations",
                      						lv_annotations_14_0,
                      						"de.cau.cs.kieler.annotations.Annotations.CommentAnnotatonSL");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleDeclarationWOSemicolon"


    // $ANTLR start "entryRuleValuedObject"
    // InternalScadeEquations.g:9249:1: entryRuleValuedObject returns [EObject current=null] : iv_ruleValuedObject= ruleValuedObject EOF ;
    public final EObject entryRuleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObject = null;


        try {
            // InternalScadeEquations.g:9249:53: (iv_ruleValuedObject= ruleValuedObject EOF )
            // InternalScadeEquations.g:9250:2: iv_ruleValuedObject= ruleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObject=ruleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObject"


    // $ANTLR start "ruleValuedObject"
    // InternalScadeEquations.g:9256:1: ruleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token lv_label_10_0=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_cardinalities_3_0 = null;

        EObject lv_initialValue_6_0 = null;

        Enumerator lv_combineOperator_8_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9262:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? ) )
            // InternalScadeEquations.g:9263:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            {
            // InternalScadeEquations.g:9263:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )? )
            // InternalScadeEquations.g:9264:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )? (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )? (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            {
            // InternalScadeEquations.g:9264:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop227:
            do {
                int alt227=2;
                int LA227_0 = input.LA(1);

                if ( (LA227_0==RULE_COMMENT_ANNOTATION||LA227_0==92) ) {
                    alt227=1;
                }


                switch (alt227) {
            	case 1 :
            	    // InternalScadeEquations.g:9265:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalScadeEquations.g:9265:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalScadeEquations.g:9266:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop227;
                }
            } while (true);

            // InternalScadeEquations.g:9283:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalScadeEquations.g:9284:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalScadeEquations.g:9284:4: (lv_name_1_0= rulePrimeID )
            // InternalScadeEquations.g:9285:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_113);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:9302:3: (otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop228:
            do {
                int alt228=2;
                int LA228_0 = input.LA(1);

                if ( (LA228_0==76) ) {
                    alt228=1;
                }


                switch (alt228) {
            	case 1 :
            	    // InternalScadeEquations.g:9303:4: otherlv_2= '[' ( (lv_cardinalities_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,76,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getValuedObjectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:9307:4: ( (lv_cardinalities_3_0= ruleExpression ) )
            	    // InternalScadeEquations.g:9308:5: (lv_cardinalities_3_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:9308:5: (lv_cardinalities_3_0= ruleExpression )
            	    // InternalScadeEquations.g:9309:6: lv_cardinalities_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_cardinalities_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,77,FollowSets000.FOLLOW_113); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop228;
                }
            } while (true);

            // InternalScadeEquations.g:9331:3: (otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) ) )?
            int alt229=2;
            int LA229_0 = input.LA(1);

            if ( (LA229_0==21) ) {
                alt229=1;
            }
            switch (alt229) {
                case 1 :
                    // InternalScadeEquations.g:9332:4: otherlv_5= '=' ( (lv_initialValue_6_0= ruleExpression ) )
                    {
                    otherlv_5=(Token)match(input,21,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedObjectAccess().getEqualsSignKeyword_3_0());
                      			
                    }
                    // InternalScadeEquations.g:9336:4: ( (lv_initialValue_6_0= ruleExpression ) )
                    // InternalScadeEquations.g:9337:5: (lv_initialValue_6_0= ruleExpression )
                    {
                    // InternalScadeEquations.g:9337:5: (lv_initialValue_6_0= ruleExpression )
                    // InternalScadeEquations.g:9338:6: lv_initialValue_6_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getInitialValueExpressionParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_114);
                    lv_initialValue_6_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:9356:3: (otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) ) )?
            int alt230=2;
            int LA230_0 = input.LA(1);

            if ( (LA230_0==78) ) {
                alt230=1;
            }
            switch (alt230) {
                case 1 :
                    // InternalScadeEquations.g:9357:4: otherlv_7= 'combine' ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    {
                    otherlv_7=(Token)match(input,78,FollowSets000.FOLLOW_115); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getValuedObjectAccess().getCombineKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:9361:4: ( (lv_combineOperator_8_0= ruleCombineOperator ) )
                    // InternalScadeEquations.g:9362:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    {
                    // InternalScadeEquations.g:9362:5: (lv_combineOperator_8_0= ruleCombineOperator )
                    // InternalScadeEquations.g:9363:6: lv_combineOperator_8_0= ruleCombineOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_116);
                    lv_combineOperator_8_0=ruleCombineOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"combineOperator",
                      							lv_combineOperator_8_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.CombineOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:9381:3: (otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) ) )?
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( (LA231_0==79) ) {
                alt231=1;
            }
            switch (alt231) {
                case 1 :
                    // InternalScadeEquations.g:9382:4: otherlv_9= 'label' ( (lv_label_10_0= RULE_STRING ) )
                    {
                    otherlv_9=(Token)match(input,79,FollowSets000.FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getValuedObjectAccess().getLabelKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:9386:4: ( (lv_label_10_0= RULE_STRING ) )
                    // InternalScadeEquations.g:9387:5: (lv_label_10_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:9387:5: (lv_label_10_0= RULE_STRING )
                    // InternalScadeEquations.g:9388:6: lv_label_10_0= RULE_STRING
                    {
                    lv_label_10_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_10_0, grammarAccess.getValuedObjectAccess().getLabelSTRINGTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValuedObjectRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_10_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObject"


    // $ANTLR start "entryRuleReferenceValuedObject"
    // InternalScadeEquations.g:9409:1: entryRuleReferenceValuedObject returns [EObject current=null] : iv_ruleReferenceValuedObject= ruleReferenceValuedObject EOF ;
    public final EObject entryRuleReferenceValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceValuedObject = null;


        try {
            // InternalScadeEquations.g:9409:62: (iv_ruleReferenceValuedObject= ruleReferenceValuedObject EOF )
            // InternalScadeEquations.g:9410:2: iv_ruleReferenceValuedObject= ruleReferenceValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceValuedObject=ruleReferenceValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceValuedObject"


    // $ANTLR start "ruleReferenceValuedObject"
    // InternalScadeEquations.g:9416:1: ruleReferenceValuedObject returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleQuotedStringAnnotation ) )* ( (lv_name_2_0= rulePrimeID ) ) (otherlv_3= '[' ( (lv_cardinalities_4_0= ruleExpression ) ) otherlv_5= ']' )* (otherlv_6= '<' ( (lv_genericParameters_7_0= ruleGenericParameter ) ) (otherlv_8= ',' ( (lv_genericParameters_9_0= ruleGenericParameter ) ) )* otherlv_10= '>' )? ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' )? (otherlv_17= '=' ( (lv_initialValue_18_0= ruleExpression ) ) )? (otherlv_19= 'label' ( (lv_label_20_0= RULE_STRING ) ) )? ) ;
    public final EObject ruleReferenceValuedObject() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token lv_label_20_0=null;
        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_cardinalities_4_0 = null;

        EObject lv_genericParameters_7_0 = null;

        EObject lv_genericParameters_9_0 = null;

        EObject lv_parameters_12_0 = null;

        EObject lv_parameters_14_0 = null;

        EObject lv_initialValue_18_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9422:2: ( ( () ( (lv_annotations_1_0= ruleQuotedStringAnnotation ) )* ( (lv_name_2_0= rulePrimeID ) ) (otherlv_3= '[' ( (lv_cardinalities_4_0= ruleExpression ) ) otherlv_5= ']' )* (otherlv_6= '<' ( (lv_genericParameters_7_0= ruleGenericParameter ) ) (otherlv_8= ',' ( (lv_genericParameters_9_0= ruleGenericParameter ) ) )* otherlv_10= '>' )? ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' )? (otherlv_17= '=' ( (lv_initialValue_18_0= ruleExpression ) ) )? (otherlv_19= 'label' ( (lv_label_20_0= RULE_STRING ) ) )? ) )
            // InternalScadeEquations.g:9423:2: ( () ( (lv_annotations_1_0= ruleQuotedStringAnnotation ) )* ( (lv_name_2_0= rulePrimeID ) ) (otherlv_3= '[' ( (lv_cardinalities_4_0= ruleExpression ) ) otherlv_5= ']' )* (otherlv_6= '<' ( (lv_genericParameters_7_0= ruleGenericParameter ) ) (otherlv_8= ',' ( (lv_genericParameters_9_0= ruleGenericParameter ) ) )* otherlv_10= '>' )? ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' )? (otherlv_17= '=' ( (lv_initialValue_18_0= ruleExpression ) ) )? (otherlv_19= 'label' ( (lv_label_20_0= RULE_STRING ) ) )? )
            {
            // InternalScadeEquations.g:9423:2: ( () ( (lv_annotations_1_0= ruleQuotedStringAnnotation ) )* ( (lv_name_2_0= rulePrimeID ) ) (otherlv_3= '[' ( (lv_cardinalities_4_0= ruleExpression ) ) otherlv_5= ']' )* (otherlv_6= '<' ( (lv_genericParameters_7_0= ruleGenericParameter ) ) (otherlv_8= ',' ( (lv_genericParameters_9_0= ruleGenericParameter ) ) )* otherlv_10= '>' )? ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' )? (otherlv_17= '=' ( (lv_initialValue_18_0= ruleExpression ) ) )? (otherlv_19= 'label' ( (lv_label_20_0= RULE_STRING ) ) )? )
            // InternalScadeEquations.g:9424:3: () ( (lv_annotations_1_0= ruleQuotedStringAnnotation ) )* ( (lv_name_2_0= rulePrimeID ) ) (otherlv_3= '[' ( (lv_cardinalities_4_0= ruleExpression ) ) otherlv_5= ']' )* (otherlv_6= '<' ( (lv_genericParameters_7_0= ruleGenericParameter ) ) (otherlv_8= ',' ( (lv_genericParameters_9_0= ruleGenericParameter ) ) )* otherlv_10= '>' )? ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' )? (otherlv_17= '=' ( (lv_initialValue_18_0= ruleExpression ) ) )? (otherlv_19= 'label' ( (lv_label_20_0= RULE_STRING ) ) )?
            {
            // InternalScadeEquations.g:9424:3: ()
            // InternalScadeEquations.g:9425:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getReferenceValuedObjectAccess().getValuedObjectAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:9434:3: ( (lv_annotations_1_0= ruleQuotedStringAnnotation ) )*
            loop232:
            do {
                int alt232=2;
                int LA232_0 = input.LA(1);

                if ( (LA232_0==RULE_COMMENT_ANNOTATION||LA232_0==92) ) {
                    alt232=1;
                }


                switch (alt232) {
            	case 1 :
            	    // InternalScadeEquations.g:9435:4: (lv_annotations_1_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalScadeEquations.g:9435:4: (lv_annotations_1_0= ruleQuotedStringAnnotation )
            	    // InternalScadeEquations.g:9436:5: lv_annotations_1_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_annotations_1_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop232;
                }
            } while (true);

            // InternalScadeEquations.g:9453:3: ( (lv_name_2_0= rulePrimeID ) )
            // InternalScadeEquations.g:9454:4: (lv_name_2_0= rulePrimeID )
            {
            // InternalScadeEquations.g:9454:4: (lv_name_2_0= rulePrimeID )
            // InternalScadeEquations.g:9455:5: lv_name_2_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getNamePrimeIDParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_117);
            lv_name_2_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:9472:3: (otherlv_3= '[' ( (lv_cardinalities_4_0= ruleExpression ) ) otherlv_5= ']' )*
            loop233:
            do {
                int alt233=2;
                int LA233_0 = input.LA(1);

                if ( (LA233_0==76) ) {
                    alt233=1;
                }


                switch (alt233) {
            	case 1 :
            	    // InternalScadeEquations.g:9473:4: otherlv_3= '[' ( (lv_cardinalities_4_0= ruleExpression ) ) otherlv_5= ']'
            	    {
            	    otherlv_3=(Token)match(input,76,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getReferenceValuedObjectAccess().getLeftSquareBracketKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:9477:4: ( (lv_cardinalities_4_0= ruleExpression ) )
            	    // InternalScadeEquations.g:9478:5: (lv_cardinalities_4_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:9478:5: (lv_cardinalities_4_0= ruleExpression )
            	    // InternalScadeEquations.g:9479:6: lv_cardinalities_4_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getCardinalitiesExpressionParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_cardinalities_4_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"cardinalities",
            	      							lv_cardinalities_4_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_5=(Token)match(input,77,FollowSets000.FOLLOW_117); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_5, grammarAccess.getReferenceValuedObjectAccess().getRightSquareBracketKeyword_3_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop233;
                }
            } while (true);

            // InternalScadeEquations.g:9501:3: (otherlv_6= '<' ( (lv_genericParameters_7_0= ruleGenericParameter ) ) (otherlv_8= ',' ( (lv_genericParameters_9_0= ruleGenericParameter ) ) )* otherlv_10= '>' )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==74) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // InternalScadeEquations.g:9502:4: otherlv_6= '<' ( (lv_genericParameters_7_0= ruleGenericParameter ) ) (otherlv_8= ',' ( (lv_genericParameters_9_0= ruleGenericParameter ) ) )* otherlv_10= '>'
                    {
                    otherlv_6=(Token)match(input,74,FollowSets000.FOLLOW_97); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getReferenceValuedObjectAccess().getLessThanSignKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:9506:4: ( (lv_genericParameters_7_0= ruleGenericParameter ) )
                    // InternalScadeEquations.g:9507:5: (lv_genericParameters_7_0= ruleGenericParameter )
                    {
                    // InternalScadeEquations.g:9507:5: (lv_genericParameters_7_0= ruleGenericParameter )
                    // InternalScadeEquations.g:9508:6: lv_genericParameters_7_0= ruleGenericParameter
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getGenericParametersGenericParameterParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_98);
                    lv_genericParameters_7_0=ruleGenericParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
                      						}
                      						add(
                      							current,
                      							"genericParameters",
                      							lv_genericParameters_7_0,
                      							"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:9525:4: (otherlv_8= ',' ( (lv_genericParameters_9_0= ruleGenericParameter ) ) )*
                    loop234:
                    do {
                        int alt234=2;
                        int LA234_0 = input.LA(1);

                        if ( (LA234_0==18) ) {
                            alt234=1;
                        }


                        switch (alt234) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9526:5: otherlv_8= ',' ( (lv_genericParameters_9_0= ruleGenericParameter ) )
                    	    {
                    	    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_97); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_8, grammarAccess.getReferenceValuedObjectAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:9530:5: ( (lv_genericParameters_9_0= ruleGenericParameter ) )
                    	    // InternalScadeEquations.g:9531:6: (lv_genericParameters_9_0= ruleGenericParameter )
                    	    {
                    	    // InternalScadeEquations.g:9531:6: (lv_genericParameters_9_0= ruleGenericParameter )
                    	    // InternalScadeEquations.g:9532:7: lv_genericParameters_9_0= ruleGenericParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getGenericParametersGenericParameterParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_98);
                    	    lv_genericParameters_9_0=ruleGenericParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"genericParameters",
                    	      								lv_genericParameters_9_0,
                    	      								"de.cau.cs.kieler.kexpressions.kext.KExt.GenericParameter");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop234;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,75,FollowSets000.FOLLOW_118); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getReferenceValuedObjectAccess().getGreaterThanSignKeyword_4_3());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:9555:3: ( (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' ) | otherlv_16= '()' )?
            int alt237=3;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==17) ) {
                alt237=1;
            }
            else if ( (LA237_0==28) ) {
                alt237=2;
            }
            switch (alt237) {
                case 1 :
                    // InternalScadeEquations.g:9556:4: (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' )
                    {
                    // InternalScadeEquations.g:9556:4: (otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')' )
                    // InternalScadeEquations.g:9557:5: otherlv_11= '(' ( (lv_parameters_12_0= ruleParameter ) ) (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )* otherlv_15= ')'
                    {
                    otherlv_11=(Token)match(input,17,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getReferenceValuedObjectAccess().getLeftParenthesisKeyword_5_0_0());
                      				
                    }
                    // InternalScadeEquations.g:9561:5: ( (lv_parameters_12_0= ruleParameter ) )
                    // InternalScadeEquations.g:9562:6: (lv_parameters_12_0= ruleParameter )
                    {
                    // InternalScadeEquations.g:9562:6: (lv_parameters_12_0= ruleParameter )
                    // InternalScadeEquations.g:9563:7: lv_parameters_12_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getParametersParameterParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameters_12_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_12_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:9580:5: (otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) ) )*
                    loop236:
                    do {
                        int alt236=2;
                        int LA236_0 = input.LA(1);

                        if ( (LA236_0==18) ) {
                            alt236=1;
                        }


                        switch (alt236) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9581:6: otherlv_13= ',' ( (lv_parameters_14_0= ruleParameter ) )
                    	    {
                    	    otherlv_13=(Token)match(input,18,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_13, grammarAccess.getReferenceValuedObjectAccess().getCommaKeyword_5_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:9585:6: ( (lv_parameters_14_0= ruleParameter ) )
                    	    // InternalScadeEquations.g:9586:7: (lv_parameters_14_0= ruleParameter )
                    	    {
                    	    // InternalScadeEquations.g:9586:7: (lv_parameters_14_0= ruleParameter )
                    	    // InternalScadeEquations.g:9587:8: lv_parameters_14_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getParametersParameterParserRuleCall_5_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameters_14_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_14_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop236;
                        }
                    } while (true);

                    otherlv_15=(Token)match(input,19,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_15, grammarAccess.getReferenceValuedObjectAccess().getRightParenthesisKeyword_5_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:9611:4: otherlv_16= '()'
                    {
                    otherlv_16=(Token)match(input,28,FollowSets000.FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_16, grammarAccess.getReferenceValuedObjectAccess().getLeftParenthesisRightParenthesisKeyword_5_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:9616:3: (otherlv_17= '=' ( (lv_initialValue_18_0= ruleExpression ) ) )?
            int alt238=2;
            int LA238_0 = input.LA(1);

            if ( (LA238_0==21) ) {
                alt238=1;
            }
            switch (alt238) {
                case 1 :
                    // InternalScadeEquations.g:9617:4: otherlv_17= '=' ( (lv_initialValue_18_0= ruleExpression ) )
                    {
                    otherlv_17=(Token)match(input,21,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getReferenceValuedObjectAccess().getEqualsSignKeyword_6_0());
                      			
                    }
                    // InternalScadeEquations.g:9621:4: ( (lv_initialValue_18_0= ruleExpression ) )
                    // InternalScadeEquations.g:9622:5: (lv_initialValue_18_0= ruleExpression )
                    {
                    // InternalScadeEquations.g:9622:5: (lv_initialValue_18_0= ruleExpression )
                    // InternalScadeEquations.g:9623:6: lv_initialValue_18_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceValuedObjectAccess().getInitialValueExpressionParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_116);
                    lv_initialValue_18_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceValuedObjectRule());
                      						}
                      						set(
                      							current,
                      							"initialValue",
                      							lv_initialValue_18_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:9641:3: (otherlv_19= 'label' ( (lv_label_20_0= RULE_STRING ) ) )?
            int alt239=2;
            int LA239_0 = input.LA(1);

            if ( (LA239_0==79) ) {
                alt239=1;
            }
            switch (alt239) {
                case 1 :
                    // InternalScadeEquations.g:9642:4: otherlv_19= 'label' ( (lv_label_20_0= RULE_STRING ) )
                    {
                    otherlv_19=(Token)match(input,79,FollowSets000.FOLLOW_71); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getReferenceValuedObjectAccess().getLabelKeyword_7_0());
                      			
                    }
                    // InternalScadeEquations.g:9646:4: ( (lv_label_20_0= RULE_STRING ) )
                    // InternalScadeEquations.g:9647:5: (lv_label_20_0= RULE_STRING )
                    {
                    // InternalScadeEquations.g:9647:5: (lv_label_20_0= RULE_STRING )
                    // InternalScadeEquations.g:9648:6: lv_label_20_0= RULE_STRING
                    {
                    lv_label_20_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_label_20_0, grammarAccess.getReferenceValuedObjectAccess().getLabelSTRINGTerminalRuleCall_7_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getReferenceValuedObjectRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"label",
                      							lv_label_20_0,
                      							"de.cau.cs.kieler.annotations.Annotations.STRING");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceValuedObject"


    // $ANTLR start "entryRuleSimpleValuedObject"
    // InternalScadeEquations.g:9669:1: entryRuleSimpleValuedObject returns [EObject current=null] : iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF ;
    public final EObject entryRuleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleValuedObject = null;


        try {
            // InternalScadeEquations.g:9669:59: (iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF )
            // InternalScadeEquations.g:9670:2: iv_ruleSimpleValuedObject= ruleSimpleValuedObject EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleValuedObjectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSimpleValuedObject=ruleSimpleValuedObject();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleValuedObject; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleValuedObject"


    // $ANTLR start "ruleSimpleValuedObject"
    // InternalScadeEquations.g:9676:1: ruleSimpleValuedObject returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) ;
    public final EObject ruleSimpleValuedObject() throws RecognitionException {
        EObject current = null;

        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9682:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) ) )
            // InternalScadeEquations.g:9683:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            {
            // InternalScadeEquations.g:9683:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) ) )
            // InternalScadeEquations.g:9684:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_name_1_0= rulePrimeID ) )
            {
            // InternalScadeEquations.g:9684:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop240:
            do {
                int alt240=2;
                int LA240_0 = input.LA(1);

                if ( (LA240_0==RULE_COMMENT_ANNOTATION||LA240_0==92) ) {
                    alt240=1;
                }


                switch (alt240) {
            	case 1 :
            	    // InternalScadeEquations.g:9685:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalScadeEquations.g:9685:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalScadeEquations.g:9686:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop240;
                }
            } while (true);

            // InternalScadeEquations.g:9703:3: ( (lv_name_1_0= rulePrimeID ) )
            // InternalScadeEquations.g:9704:4: (lv_name_1_0= rulePrimeID )
            {
            // InternalScadeEquations.g:9704:4: (lv_name_1_0= rulePrimeID )
            // InternalScadeEquations.g:9705:5: lv_name_1_0= rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleValuedObjectAccess().getNamePrimeIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleValuedObjectRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.PrimeID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleValuedObject"


    // $ANTLR start "entryRuleEffect"
    // InternalScadeEquations.g:9726:1: entryRuleEffect returns [EObject current=null] : iv_ruleEffect= ruleEffect EOF ;
    public final EObject entryRuleEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleEffect = null;


        try {
            // InternalScadeEquations.g:9726:47: (iv_ruleEffect= ruleEffect EOF )
            // InternalScadeEquations.g:9727:2: iv_ruleEffect= ruleEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEffect=ruleEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEffect"


    // $ANTLR start "ruleEffect"
    // InternalScadeEquations.g:9733:1: ruleEffect returns [EObject current=null] : (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) ;
    public final EObject ruleEffect() throws RecognitionException {
        EObject current = null;

        EObject this_Assignment_0 = null;

        EObject this_PostfixEffect_1 = null;

        EObject this_ValuedEmission_2 = null;

        EObject this_HostcodeEffect_3 = null;

        EObject this_ReferenceCallEffect_4 = null;

        EObject this_FunctionCallEffect_5 = null;

        EObject this_PrintCallEffect_6 = null;

        EObject this_RandomizeCallEffect_7 = null;

        EObject this_PureEmission_8 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9739:2: ( (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission ) )
            // InternalScadeEquations.g:9740:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            {
            // InternalScadeEquations.g:9740:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )
            int alt241=9;
            alt241 = dfa241.predict(input);
            switch (alt241) {
                case 1 :
                    // InternalScadeEquations.g:9741:3: this_Assignment_0= ruleAssignment
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Assignment_0=ruleAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Assignment_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:9753:3: this_PostfixEffect_1= rulePostfixEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPostfixEffectParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PostfixEffect_1=rulePostfixEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PostfixEffect_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:9765:3: this_ValuedEmission_2= ruleValuedEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getValuedEmissionParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedEmission_2=ruleValuedEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedEmission_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:9777:3: this_HostcodeEffect_3= ruleHostcodeEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getHostcodeEffectParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_HostcodeEffect_3=ruleHostcodeEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_HostcodeEffect_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:9789:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getReferenceCallEffectParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ReferenceCallEffect_4=ruleReferenceCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ReferenceCallEffect_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalScadeEquations.g:9801:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getFunctionCallEffectParserRuleCall_5());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FunctionCallEffect_5=ruleFunctionCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FunctionCallEffect_5;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalScadeEquations.g:9813:3: this_PrintCallEffect_6= rulePrintCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPrintCallEffectParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PrintCallEffect_6=rulePrintCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PrintCallEffect_6;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalScadeEquations.g:9825:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getRandomizeCallEffectParserRuleCall_7());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_RandomizeCallEffect_7;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalScadeEquations.g:9837:3: this_PureEmission_8= rulePureEmission
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEffectAccess().getPureEmissionParserRuleCall_8());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PureEmission_8=rulePureEmission();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PureEmission_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEffect"


    // $ANTLR start "entryRulePureEmission"
    // InternalScadeEquations.g:9852:1: entryRulePureEmission returns [EObject current=null] : iv_rulePureEmission= rulePureEmission EOF ;
    public final EObject entryRulePureEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePureEmission = null;


        try {
            // InternalScadeEquations.g:9852:53: (iv_rulePureEmission= rulePureEmission EOF )
            // InternalScadeEquations.g:9853:2: iv_rulePureEmission= rulePureEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPureEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePureEmission=rulePureEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePureEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePureEmission"


    // $ANTLR start "rulePureEmission"
    // InternalScadeEquations.g:9859:1: rulePureEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePureEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_schedule_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9865:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:9866:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:9866:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:9867:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:9867:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop242:
            do {
                int alt242=2;
                int LA242_0 = input.LA(1);

                if ( (LA242_0==RULE_COMMENT_ANNOTATION||LA242_0==92) ) {
                    alt242=1;
                }


                switch (alt242) {
            	case 1 :
            	    // InternalScadeEquations.g:9868:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalScadeEquations.g:9868:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalScadeEquations.g:9869:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPureEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop242;
                }
            } while (true);

            // InternalScadeEquations.g:9886:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalScadeEquations.g:9887:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalScadeEquations.g:9887:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalScadeEquations.g:9888:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPureEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_121);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPureEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:9905:3: (otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+ )?
            int alt244=2;
            int LA244_0 = input.LA(1);

            if ( (LA244_0==72) ) {
                alt244=1;
            }
            switch (alt244) {
                case 1 :
                    // InternalScadeEquations.g:9906:4: otherlv_2= 'schedule' ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_2=(Token)match(input,72,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getPureEmissionAccess().getScheduleKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:9910:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+
                    int cnt243=0;
                    loop243:
                    do {
                        int alt243=2;
                        alt243 = dfa243.predict(input);
                        switch (alt243) {
                    	case 1 :
                    	    // InternalScadeEquations.g:9911:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:9911:5: (lv_schedule_3_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:9912:6: lv_schedule_3_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPureEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_2_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_122);
                    	    lv_schedule_3_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPureEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_3_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt243 >= 1 ) break loop243;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(243, input);
                                throw eee;
                        }
                        cnt243++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePureEmission"


    // $ANTLR start "entryRuleValuedEmission"
    // InternalScadeEquations.g:9934:1: entryRuleValuedEmission returns [EObject current=null] : iv_ruleValuedEmission= ruleValuedEmission EOF ;
    public final EObject entryRuleValuedEmission() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedEmission = null;


        try {
            // InternalScadeEquations.g:9934:55: (iv_ruleValuedEmission= ruleValuedEmission EOF )
            // InternalScadeEquations.g:9935:2: iv_ruleValuedEmission= ruleValuedEmission EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedEmissionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedEmission=ruleValuedEmission();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedEmission; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedEmission"


    // $ANTLR start "ruleValuedEmission"
    // InternalScadeEquations.g:9941:1: ruleValuedEmission returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleValuedEmission() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        EObject lv_newValue_3_0 = null;

        EObject lv_schedule_6_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:9947:2: ( ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:9948:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:9948:2: ( ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:9949:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) otherlv_2= '(' ( (lv_newValue_3_0= ruleExpression ) ) otherlv_4= ')' (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:9949:3: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )*
            loop245:
            do {
                int alt245=2;
                int LA245_0 = input.LA(1);

                if ( (LA245_0==RULE_COMMENT_ANNOTATION||LA245_0==92) ) {
                    alt245=1;
                }


                switch (alt245) {
            	case 1 :
            	    // InternalScadeEquations.g:9950:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    {
            	    // InternalScadeEquations.g:9950:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
            	    // InternalScadeEquations.g:9951:5: lv_annotations_0_0= ruleQuotedStringAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getValuedEmissionAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_annotations_0_0=ruleQuotedStringAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.QuotedStringAnnotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop245;
                }
            } while (true);

            // InternalScadeEquations.g:9968:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalScadeEquations.g:9969:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalScadeEquations.g:9969:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalScadeEquations.g:9970:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_11);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,17,FollowSets000.FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getValuedEmissionAccess().getLeftParenthesisKeyword_2());
              		
            }
            // InternalScadeEquations.g:9991:3: ( (lv_newValue_3_0= ruleExpression ) )
            // InternalScadeEquations.g:9992:4: (lv_newValue_3_0= ruleExpression )
            {
            // InternalScadeEquations.g:9992:4: (lv_newValue_3_0= ruleExpression )
            // InternalScadeEquations.g:9993:5: lv_newValue_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedEmissionAccess().getNewValueExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_13);
            lv_newValue_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
              					}
              					set(
              						current,
              						"newValue",
              						lv_newValue_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,19,FollowSets000.FOLLOW_121); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getValuedEmissionAccess().getRightParenthesisKeyword_4());
              		
            }
            // InternalScadeEquations.g:10014:3: (otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+ )?
            int alt247=2;
            int LA247_0 = input.LA(1);

            if ( (LA247_0==72) ) {
                alt247=1;
            }
            switch (alt247) {
                case 1 :
                    // InternalScadeEquations.g:10015:4: otherlv_5= 'schedule' ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_5=(Token)match(input,72,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getValuedEmissionAccess().getScheduleKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:10019:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+
                    int cnt246=0;
                    loop246:
                    do {
                        int alt246=2;
                        alt246 = dfa246.predict(input);
                        switch (alt246) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10020:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:10020:5: (lv_schedule_6_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:10021:6: lv_schedule_6_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getValuedEmissionAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_122);
                    	    lv_schedule_6_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getValuedEmissionRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_6_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt246 >= 1 ) break loop246;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(246, input);
                                throw eee;
                        }
                        cnt246++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedEmission"


    // $ANTLR start "entryRuleAssignment"
    // InternalScadeEquations.g:10043:1: entryRuleAssignment returns [EObject current=null] : iv_ruleAssignment= ruleAssignment EOF ;
    public final EObject entryRuleAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAssignment = null;


        try {
            // InternalScadeEquations.g:10043:51: (iv_ruleAssignment= ruleAssignment EOF )
            // InternalScadeEquations.g:10044:2: iv_ruleAssignment= ruleAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAssignmentRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAssignment=ruleAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAssignment; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAssignment"


    // $ANTLR start "ruleAssignment"
    // InternalScadeEquations.g:10050:1: ruleAssignment returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleAssignment() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_expression_3_0 = null;

        EObject lv_schedule_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10056:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:10057:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:10057:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:10058:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= ruleAssignOperator ) ) ( (lv_expression_3_0= ruleExpression ) ) (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:10058:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop248:
            do {
                int alt248=2;
                int LA248_0 = input.LA(1);

                if ( (LA248_0==RULE_COMMENT_ANNOTATION||LA248_0==92) ) {
                    alt248=1;
                }


                switch (alt248) {
            	case 1 :
            	    // InternalScadeEquations.g:10059:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:10059:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:10060:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAssignmentAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAssignmentRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);

            // InternalScadeEquations.g:10077:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalScadeEquations.g:10078:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalScadeEquations.g:10078:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalScadeEquations.g:10079:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_7);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:10096:3: ( (lv_operator_2_0= ruleAssignOperator ) )
            // InternalScadeEquations.g:10097:4: (lv_operator_2_0= ruleAssignOperator )
            {
            // InternalScadeEquations.g:10097:4: (lv_operator_2_0= ruleAssignOperator )
            // InternalScadeEquations.g:10098:5: lv_operator_2_0= ruleAssignOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getOperatorAssignOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_9);
            lv_operator_2_0=ruleAssignOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.lustre.Lustre.AssignOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:10115:3: ( (lv_expression_3_0= ruleExpression ) )
            // InternalScadeEquations.g:10116:4: (lv_expression_3_0= ruleExpression )
            {
            // InternalScadeEquations.g:10116:4: (lv_expression_3_0= ruleExpression )
            // InternalScadeEquations.g:10117:5: lv_expression_3_0= ruleExpression
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_121);
            lv_expression_3_0=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAssignmentRule());
              					}
              					set(
              						current,
              						"expression",
              						lv_expression_3_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:10134:3: (otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+ )?
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( (LA250_0==72) ) {
                alt250=1;
            }
            switch (alt250) {
                case 1 :
                    // InternalScadeEquations.g:10135:4: otherlv_4= 'schedule' ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_4=(Token)match(input,72,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getAssignmentAccess().getScheduleKeyword_4_0());
                      			
                    }
                    // InternalScadeEquations.g:10139:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+
                    int cnt249=0;
                    loop249:
                    do {
                        int alt249=2;
                        alt249 = dfa249.predict(input);
                        switch (alt249) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10140:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:10140:5: (lv_schedule_5_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:10141:6: lv_schedule_5_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getAssignmentAccess().getScheduleScheduleObjectReferenceParserRuleCall_4_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_122);
                    	    lv_schedule_5_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getAssignmentRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_5_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt249 >= 1 ) break loop249;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(249, input);
                                throw eee;
                        }
                        cnt249++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignment"


    // $ANTLR start "entryRulePostfixEffect"
    // InternalScadeEquations.g:10163:1: entryRulePostfixEffect returns [EObject current=null] : iv_rulePostfixEffect= rulePostfixEffect EOF ;
    public final EObject entryRulePostfixEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePostfixEffect = null;


        try {
            // InternalScadeEquations.g:10163:54: (iv_rulePostfixEffect= rulePostfixEffect EOF )
            // InternalScadeEquations.g:10164:2: iv_rulePostfixEffect= rulePostfixEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPostfixEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePostfixEffect=rulePostfixEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePostfixEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePostfixEffect"


    // $ANTLR start "rulePostfixEffect"
    // InternalScadeEquations.g:10170:1: rulePostfixEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePostfixEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_3=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_reference_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_schedule_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10176:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:10177:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:10177:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:10178:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_reference_1_0= ruleValuedObjectReference ) ) ( (lv_operator_2_0= rulePostfixOperator ) ) (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:10178:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop251:
            do {
                int alt251=2;
                int LA251_0 = input.LA(1);

                if ( (LA251_0==RULE_COMMENT_ANNOTATION||LA251_0==92) ) {
                    alt251=1;
                }


                switch (alt251) {
            	case 1 :
            	    // InternalScadeEquations.g:10179:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:10179:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:10180:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPostfixEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop251;
                }
            } while (true);

            // InternalScadeEquations.g:10197:3: ( (lv_reference_1_0= ruleValuedObjectReference ) )
            // InternalScadeEquations.g:10198:4: (lv_reference_1_0= ruleValuedObjectReference )
            {
            // InternalScadeEquations.g:10198:4: (lv_reference_1_0= ruleValuedObjectReference )
            // InternalScadeEquations.g:10199:5: lv_reference_1_0= ruleValuedObjectReference
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getReferenceValuedObjectReferenceParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_123);
            lv_reference_1_0=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"reference",
              						lv_reference_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:10216:3: ( (lv_operator_2_0= rulePostfixOperator ) )
            // InternalScadeEquations.g:10217:4: (lv_operator_2_0= rulePostfixOperator )
            {
            // InternalScadeEquations.g:10217:4: (lv_operator_2_0= rulePostfixOperator )
            // InternalScadeEquations.g:10218:5: lv_operator_2_0= rulePostfixOperator
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPostfixEffectAccess().getOperatorPostfixOperatorEnumRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_121);
            lv_operator_2_0=rulePostfixOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
              					}
              					set(
              						current,
              						"operator",
              						lv_operator_2_0,
              						"de.cau.cs.kieler.kexpressions.keffects.KEffects.PostfixOperator");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:10235:3: (otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+ )?
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==72) ) {
                alt253=1;
            }
            switch (alt253) {
                case 1 :
                    // InternalScadeEquations.g:10236:4: otherlv_3= 'schedule' ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_3=(Token)match(input,72,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getPostfixEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalScadeEquations.g:10240:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+
                    int cnt252=0;
                    loop252:
                    do {
                        int alt252=2;
                        alt252 = dfa252.predict(input);
                        switch (alt252) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10241:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:10241:5: (lv_schedule_4_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:10242:6: lv_schedule_4_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPostfixEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_122);
                    	    lv_schedule_4_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPostfixEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_4_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt252 >= 1 ) break loop252;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(252, input);
                                throw eee;
                        }
                        cnt252++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixEffect"


    // $ANTLR start "entryRuleHostcodeEffect"
    // InternalScadeEquations.g:10264:1: entryRuleHostcodeEffect returns [EObject current=null] : iv_ruleHostcodeEffect= ruleHostcodeEffect EOF ;
    public final EObject entryRuleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHostcodeEffect = null;


        try {
            // InternalScadeEquations.g:10264:55: (iv_ruleHostcodeEffect= ruleHostcodeEffect EOF )
            // InternalScadeEquations.g:10265:2: iv_ruleHostcodeEffect= ruleHostcodeEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHostcodeEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleHostcodeEffect=ruleHostcodeEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHostcodeEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHostcodeEffect"


    // $ANTLR start "ruleHostcodeEffect"
    // InternalScadeEquations.g:10271:1: ruleHostcodeEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) ;
    public final EObject ruleHostcodeEffect() throws RecognitionException {
        EObject current = null;

        Token lv_text_1_0=null;
        EObject lv_annotations_0_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10277:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) ) )
            // InternalScadeEquations.g:10278:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            {
            // InternalScadeEquations.g:10278:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) ) )
            // InternalScadeEquations.g:10279:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_text_1_0= RULE_HOSTCODE ) )
            {
            // InternalScadeEquations.g:10279:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop254:
            do {
                int alt254=2;
                int LA254_0 = input.LA(1);

                if ( (LA254_0==RULE_COMMENT_ANNOTATION||LA254_0==92) ) {
                    alt254=1;
                }


                switch (alt254) {
            	case 1 :
            	    // InternalScadeEquations.g:10280:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:10280:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:10281:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getHostcodeEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_124);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getHostcodeEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop254;
                }
            } while (true);

            // InternalScadeEquations.g:10298:3: ( (lv_text_1_0= RULE_HOSTCODE ) )
            // InternalScadeEquations.g:10299:4: (lv_text_1_0= RULE_HOSTCODE )
            {
            // InternalScadeEquations.g:10299:4: (lv_text_1_0= RULE_HOSTCODE )
            // InternalScadeEquations.g:10300:5: lv_text_1_0= RULE_HOSTCODE
            {
            lv_text_1_0=(Token)match(input,RULE_HOSTCODE,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_text_1_0, grammarAccess.getHostcodeEffectAccess().getTextHOSTCODETerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getHostcodeEffectRule());
              					}
              					setWithLastConsumed(
              						current,
              						"text",
              						lv_text_1_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.HOSTCODE");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostcodeEffect"


    // $ANTLR start "entryRuleReferenceCallEffect"
    // InternalScadeEquations.g:10320:1: entryRuleReferenceCallEffect returns [EObject current=null] : iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF ;
    public final EObject entryRuleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCallEffect = null;


        try {
            // InternalScadeEquations.g:10320:60: (iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF )
            // InternalScadeEquations.g:10321:2: iv_ruleReferenceCallEffect= ruleReferenceCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCallEffect=ruleReferenceCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCallEffect"


    // $ANTLR start "ruleReferenceCallEffect"
    // InternalScadeEquations.g:10327:1: ruleReferenceCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject ruleReferenceCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_indices_3_0 = null;

        EObject lv_subReference_6_0 = null;

        EObject lv_parameters_8_0 = null;

        EObject lv_parameters_10_0 = null;

        EObject lv_schedule_14_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10333:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:10334:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:10334:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:10335:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( rulePrimeID ) ) (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )* (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )? ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' ) (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:10335:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop255:
            do {
                int alt255=2;
                int LA255_0 = input.LA(1);

                if ( (LA255_0==RULE_COMMENT_ANNOTATION||LA255_0==92) ) {
                    alt255=1;
                }


                switch (alt255) {
            	case 1 :
            	    // InternalScadeEquations.g:10336:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:10336:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:10337:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_36);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop255;
                }
            } while (true);

            // InternalScadeEquations.g:10354:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:10355:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:10355:4: ( rulePrimeID )
            // InternalScadeEquations.g:10356:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallEffectRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getValuedObjectValuedObjectCrossReference_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_125);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:10373:3: (otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']' )*
            loop256:
            do {
                int alt256=2;
                int LA256_0 = input.LA(1);

                if ( (LA256_0==76) ) {
                    alt256=1;
                }


                switch (alt256) {
            	case 1 :
            	    // InternalScadeEquations.g:10374:4: otherlv_2= '[' ( (lv_indices_3_0= ruleExpression ) ) otherlv_4= ']'
            	    {
            	    otherlv_2=(Token)match(input,76,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getReferenceCallEffectAccess().getLeftSquareBracketKeyword_2_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:10378:4: ( (lv_indices_3_0= ruleExpression ) )
            	    // InternalScadeEquations.g:10379:5: (lv_indices_3_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:10379:5: (lv_indices_3_0= ruleExpression )
            	    // InternalScadeEquations.g:10380:6: lv_indices_3_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getIndicesExpressionParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_indices_3_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_3_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_4=(Token)match(input,77,FollowSets000.FOLLOW_125); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallEffectAccess().getRightSquareBracketKeyword_2_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop256;
                }
            } while (true);

            // InternalScadeEquations.g:10402:3: (otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) ) )?
            int alt257=2;
            int LA257_0 = input.LA(1);

            if ( (LA257_0==37) ) {
                alt257=1;
            }
            switch (alt257) {
                case 1 :
                    // InternalScadeEquations.g:10403:4: otherlv_5= '.' ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    {
                    otherlv_5=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getReferenceCallEffectAccess().getFullStopKeyword_3_0());
                      			
                    }
                    // InternalScadeEquations.g:10407:4: ( (lv_subReference_6_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:10408:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:10408:5: (lv_subReference_6_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:10409:6: lv_subReference_6_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getSubReferenceValuedObjectReferenceParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_subReference_6_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_6_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:10427:3: ( (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' ) | otherlv_12= '()' )
            int alt259=2;
            int LA259_0 = input.LA(1);

            if ( (LA259_0==17) ) {
                alt259=1;
            }
            else if ( (LA259_0==28) ) {
                alt259=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 259, 0, input);

                throw nvae;
            }
            switch (alt259) {
                case 1 :
                    // InternalScadeEquations.g:10428:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    {
                    // InternalScadeEquations.g:10428:4: (otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')' )
                    // InternalScadeEquations.g:10429:5: otherlv_7= '(' ( (lv_parameters_8_0= ruleParameter ) ) (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )* otherlv_11= ')'
                    {
                    otherlv_7=(Token)match(input,17,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisKeyword_4_0_0());
                      				
                    }
                    // InternalScadeEquations.g:10433:5: ( (lv_parameters_8_0= ruleParameter ) )
                    // InternalScadeEquations.g:10434:6: (lv_parameters_8_0= ruleParameter )
                    {
                    // InternalScadeEquations.g:10434:6: (lv_parameters_8_0= ruleParameter )
                    // InternalScadeEquations.g:10435:7: lv_parameters_8_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameters_8_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_8_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:10452:5: (otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) ) )*
                    loop258:
                    do {
                        int alt258=2;
                        int LA258_0 = input.LA(1);

                        if ( (LA258_0==18) ) {
                            alt258=1;
                        }


                        switch (alt258) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10453:6: otherlv_9= ',' ( (lv_parameters_10_0= ruleParameter ) )
                    	    {
                    	    otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getReferenceCallEffectAccess().getCommaKeyword_4_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:10457:6: ( (lv_parameters_10_0= ruleParameter ) )
                    	    // InternalScadeEquations.g:10458:7: (lv_parameters_10_0= ruleParameter )
                    	    {
                    	    // InternalScadeEquations.g:10458:7: (lv_parameters_10_0= ruleParameter )
                    	    // InternalScadeEquations.g:10459:8: lv_parameters_10_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getParametersParameterParserRuleCall_4_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameters_10_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_10_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop258;
                        }
                    } while (true);

                    otherlv_11=(Token)match(input,19,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_11, grammarAccess.getReferenceCallEffectAccess().getRightParenthesisKeyword_4_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:10483:4: otherlv_12= '()'
                    {
                    otherlv_12=(Token)match(input,28,FollowSets000.FOLLOW_121); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getReferenceCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_4_1());
                      			
                    }

                    }
                    break;

            }

            // InternalScadeEquations.g:10488:3: (otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+ )?
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==72) ) {
                alt261=1;
            }
            switch (alt261) {
                case 1 :
                    // InternalScadeEquations.g:10489:4: otherlv_13= 'schedule' ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_13=(Token)match(input,72,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getReferenceCallEffectAccess().getScheduleKeyword_5_0());
                      			
                    }
                    // InternalScadeEquations.g:10493:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+
                    int cnt260=0;
                    loop260:
                    do {
                        int alt260=2;
                        alt260 = dfa260.predict(input);
                        switch (alt260) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10494:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:10494:5: (lv_schedule_14_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:10495:6: lv_schedule_14_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getReferenceCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_5_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_122);
                    	    lv_schedule_14_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getReferenceCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_14_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt260 >= 1 ) break loop260;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(260, input);
                                throw eee;
                        }
                        cnt260++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCallEffect"


    // $ANTLR start "entryRuleFunctionCallEffect"
    // InternalScadeEquations.g:10517:1: entryRuleFunctionCallEffect returns [EObject current=null] : iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF ;
    public final EObject entryRuleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionCallEffect = null;


        try {
            // InternalScadeEquations.g:10517:59: (iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF )
            // InternalScadeEquations.g:10518:2: iv_ruleFunctionCallEffect= ruleFunctionCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFunctionCallEffect=ruleFunctionCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionCallEffect"


    // $ANTLR start "ruleFunctionCallEffect"
    // InternalScadeEquations.g:10524:1: ruleFunctionCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) ;
    public final EObject ruleFunctionCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_functionName_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10530:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ) )
            // InternalScadeEquations.g:10531:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            {
            // InternalScadeEquations.g:10531:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalScadeEquations.g:10532:3: ( (lv_annotations_0_0= ruleAnnotation ) )* (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalScadeEquations.g:10532:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop262:
            do {
                int alt262=2;
                int LA262_0 = input.LA(1);

                if ( (LA262_0==RULE_COMMENT_ANNOTATION||LA262_0==92) ) {
                    alt262=1;
                }


                switch (alt262) {
            	case 1 :
            	    // InternalScadeEquations.g:10533:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:10533:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:10534:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_126);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop262;
                }
            } while (true);

            // InternalScadeEquations.g:10551:3: (otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalScadeEquations.g:10552:4: otherlv_1= 'extern' ( (lv_functionName_2_0= RULE_ID ) ) ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            otherlv_1=(Token)match(input,25,FollowSets000.FOLLOW_4); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getFunctionCallEffectAccess().getExternKeyword_1_0());
              			
            }
            // InternalScadeEquations.g:10556:4: ( (lv_functionName_2_0= RULE_ID ) )
            // InternalScadeEquations.g:10557:5: (lv_functionName_2_0= RULE_ID )
            {
            // InternalScadeEquations.g:10557:5: (lv_functionName_2_0= RULE_ID )
            // InternalScadeEquations.g:10558:6: lv_functionName_2_0= RULE_ID
            {
            lv_functionName_2_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_functionName_2_0, grammarAccess.getFunctionCallEffectAccess().getFunctionNameIDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getFunctionCallEffectRule());
              						}
              						setWithLastConsumed(
              							current,
              							"functionName",
              							lv_functionName_2_0,
              							"de.cau.cs.kieler.annotations.Annotations.ID");
              					
            }

            }


            }

            // InternalScadeEquations.g:10574:4: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==17) ) {
                alt264=1;
            }
            else if ( (LA264_0==28) ) {
                alt264=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;
            }
            switch (alt264) {
                case 1 :
                    // InternalScadeEquations.g:10575:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalScadeEquations.g:10575:5: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalScadeEquations.g:10576:6: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,17,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_3, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisKeyword_1_2_0_0());
                      					
                    }
                    // InternalScadeEquations.g:10580:6: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalScadeEquations.g:10581:7: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalScadeEquations.g:10581:7: (lv_parameters_4_0= ruleParameter )
                    // InternalScadeEquations.g:10582:8: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      								newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_1_0());
                      							
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      								if (current==null) {
                      									current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                      								}
                      								add(
                      									current,
                      									"parameters",
                      									lv_parameters_4_0,
                      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      								afterParserOrEnumRuleCall();
                      							
                    }

                    }


                    }

                    // InternalScadeEquations.g:10599:6: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop263:
                    do {
                        int alt263=2;
                        int LA263_0 = input.LA(1);

                        if ( (LA263_0==18) ) {
                            alt263=1;
                        }


                        switch (alt263) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10600:7: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,18,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(otherlv_5, grammarAccess.getFunctionCallEffectAccess().getCommaKeyword_1_2_0_2_0());
                    	      						
                    	    }
                    	    // InternalScadeEquations.g:10604:7: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalScadeEquations.g:10605:8: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalScadeEquations.g:10605:8: (lv_parameters_6_0= ruleParameter )
                    	    // InternalScadeEquations.g:10606:9: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      									newCompositeNode(grammarAccess.getFunctionCallEffectAccess().getParametersParameterParserRuleCall_1_2_0_2_1_0());
                    	      								
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									if (current==null) {
                    	      										current = createModelElementForParent(grammarAccess.getFunctionCallEffectRule());
                    	      									}
                    	      									add(
                    	      										current,
                    	      										"parameters",
                    	      										lv_parameters_6_0,
                    	      										"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      									afterParserOrEnumRuleCall();
                    	      								
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop263;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(otherlv_7, grammarAccess.getFunctionCallEffectAccess().getRightParenthesisKeyword_1_2_0_3());
                      					
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:10630:5: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_8, grammarAccess.getFunctionCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_1_2_1());
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionCallEffect"


    // $ANTLR start "entryRulePrintCallEffect"
    // InternalScadeEquations.g:10640:1: entryRulePrintCallEffect returns [EObject current=null] : iv_rulePrintCallEffect= rulePrintCallEffect EOF ;
    public final EObject entryRulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePrintCallEffect = null;


        try {
            // InternalScadeEquations.g:10640:56: (iv_rulePrintCallEffect= rulePrintCallEffect EOF )
            // InternalScadeEquations.g:10641:2: iv_rulePrintCallEffect= rulePrintCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrintCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrintCallEffect=rulePrintCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrintCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrintCallEffect"


    // $ANTLR start "rulePrintCallEffect"
    // InternalScadeEquations.g:10647:1: rulePrintCallEffect returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) ;
    public final EObject rulePrintCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parameters_3_0 = null;

        EObject lv_parameters_5_0 = null;

        EObject lv_schedule_8_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10653:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? ) )
            // InternalScadeEquations.g:10654:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            {
            // InternalScadeEquations.g:10654:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )? )
            // InternalScadeEquations.g:10655:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'print' (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' ) (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            {
            // InternalScadeEquations.g:10655:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop265:
            do {
                int alt265=2;
                int LA265_0 = input.LA(1);

                if ( (LA265_0==RULE_COMMENT_ANNOTATION||LA265_0==92) ) {
                    alt265=1;
                }


                switch (alt265) {
            	case 1 :
            	    // InternalScadeEquations.g:10656:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:10656:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalScadeEquations.g:10657:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getPrintCallEffectAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_127);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop265;
                }
            } while (true);

            otherlv_1=(Token)match(input,80,FollowSets000.FOLLOW_11); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getPrintCallEffectAccess().getPrintKeyword_1());
              		
            }
            // InternalScadeEquations.g:10678:3: (otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')' )
            // InternalScadeEquations.g:10679:4: otherlv_2= '(' ( (lv_parameters_3_0= ruleParameter ) ) (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )* otherlv_6= ')'
            {
            otherlv_2=(Token)match(input,17,FollowSets000.FOLLOW_119); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_2, grammarAccess.getPrintCallEffectAccess().getLeftParenthesisKeyword_2_0());
              			
            }
            // InternalScadeEquations.g:10683:4: ( (lv_parameters_3_0= ruleParameter ) )
            // InternalScadeEquations.g:10684:5: (lv_parameters_3_0= ruleParameter )
            {
            // InternalScadeEquations.g:10684:5: (lv_parameters_3_0= ruleParameter )
            // InternalScadeEquations.g:10685:6: lv_parameters_3_0= ruleParameter
            {
            if ( state.backtracking==0 ) {

              						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_1_0());
              					
            }
            pushFollow(FollowSets000.FOLLOW_6);
            lv_parameters_3_0=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
              						}
              						add(
              							current,
              							"parameters",
              							lv_parameters_3_0,
              							"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
              						afterParserOrEnumRuleCall();
              					
            }

            }


            }

            // InternalScadeEquations.g:10702:4: (otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) ) )*
            loop266:
            do {
                int alt266=2;
                int LA266_0 = input.LA(1);

                if ( (LA266_0==18) ) {
                    alt266=1;
                }


                switch (alt266) {
            	case 1 :
            	    // InternalScadeEquations.g:10703:5: otherlv_4= ',' ( (lv_parameters_5_0= ruleParameter ) )
            	    {
            	    otherlv_4=(Token)match(input,18,FollowSets000.FOLLOW_119); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_4, grammarAccess.getPrintCallEffectAccess().getCommaKeyword_2_2_0());
            	      				
            	    }
            	    // InternalScadeEquations.g:10707:5: ( (lv_parameters_5_0= ruleParameter ) )
            	    // InternalScadeEquations.g:10708:6: (lv_parameters_5_0= ruleParameter )
            	    {
            	    // InternalScadeEquations.g:10708:6: (lv_parameters_5_0= ruleParameter )
            	    // InternalScadeEquations.g:10709:7: lv_parameters_5_0= ruleParameter
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getPrintCallEffectAccess().getParametersParameterParserRuleCall_2_2_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_6);
            	    lv_parameters_5_0=ruleParameter();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
            	      							}
            	      							add(
            	      								current,
            	      								"parameters",
            	      								lv_parameters_5_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop266;
                }
            } while (true);

            otherlv_6=(Token)match(input,19,FollowSets000.FOLLOW_121); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_6, grammarAccess.getPrintCallEffectAccess().getRightParenthesisKeyword_2_3());
              			
            }

            }

            // InternalScadeEquations.g:10732:3: (otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+ )?
            int alt268=2;
            int LA268_0 = input.LA(1);

            if ( (LA268_0==72) ) {
                alt268=1;
            }
            switch (alt268) {
                case 1 :
                    // InternalScadeEquations.g:10733:4: otherlv_7= 'schedule' ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    {
                    otherlv_7=(Token)match(input,72,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getPrintCallEffectAccess().getScheduleKeyword_3_0());
                      			
                    }
                    // InternalScadeEquations.g:10737:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+
                    int cnt267=0;
                    loop267:
                    do {
                        int alt267=2;
                        alt267 = dfa267.predict(input);
                        switch (alt267) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10738:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    {
                    	    // InternalScadeEquations.g:10738:5: (lv_schedule_8_0= ruleScheduleObjectReference )
                    	    // InternalScadeEquations.g:10739:6: lv_schedule_8_0= ruleScheduleObjectReference
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getPrintCallEffectAccess().getScheduleScheduleObjectReferenceParserRuleCall_3_1_0());
                    	      					
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_122);
                    	    lv_schedule_8_0=ruleScheduleObjectReference();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getPrintCallEffectRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"schedule",
                    	      							lv_schedule_8_0,
                    	      							"de.cau.cs.kieler.kexpressions.KExpressions.ScheduleObjectReference");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt267 >= 1 ) break loop267;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(267, input);
                                throw eee;
                        }
                        cnt267++;
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrintCallEffect"


    // $ANTLR start "entryRuleRandomizeCallEffect"
    // InternalScadeEquations.g:10761:1: entryRuleRandomizeCallEffect returns [EObject current=null] : iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF ;
    public final EObject entryRuleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRandomizeCallEffect = null;


        try {
            // InternalScadeEquations.g:10761:60: (iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF )
            // InternalScadeEquations.g:10762:2: iv_ruleRandomizeCallEffect= ruleRandomizeCallEffect EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRandomizeCallEffectRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRandomizeCallEffect=ruleRandomizeCallEffect();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRandomizeCallEffect; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRandomizeCallEffect"


    // $ANTLR start "ruleRandomizeCallEffect"
    // InternalScadeEquations.g:10768:1: ruleRandomizeCallEffect returns [EObject current=null] : ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) ;
    public final EObject ruleRandomizeCallEffect() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_annotations_1_0 = null;

        EObject lv_parameters_4_0 = null;

        EObject lv_parameters_6_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10774:2: ( ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) ) )
            // InternalScadeEquations.g:10775:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            {
            // InternalScadeEquations.g:10775:2: ( () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' ) )
            // InternalScadeEquations.g:10776:3: () ( (lv_annotations_1_0= ruleAnnotation ) )* otherlv_2= 'randomize' ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            {
            // InternalScadeEquations.g:10776:3: ()
            // InternalScadeEquations.g:10777:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getRandomizeCallEffectAccess().getRandomizeCallEffectAction_0(),
              					current);
              			
            }

            }

            // InternalScadeEquations.g:10786:3: ( (lv_annotations_1_0= ruleAnnotation ) )*
            loop269:
            do {
                int alt269=2;
                int LA269_0 = input.LA(1);

                if ( (LA269_0==RULE_COMMENT_ANNOTATION||LA269_0==92) ) {
                    alt269=1;
                }


                switch (alt269) {
            	case 1 :
            	    // InternalScadeEquations.g:10787:4: (lv_annotations_1_0= ruleAnnotation )
            	    {
            	    // InternalScadeEquations.g:10787:4: (lv_annotations_1_0= ruleAnnotation )
            	    // InternalScadeEquations.g:10788:5: lv_annotations_1_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getAnnotationsAnnotationParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FollowSets000.FOLLOW_128);
            	    lv_annotations_1_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_1_0,
            	      						"de.cau.cs.kieler.kexpressions.KExpressions.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop269;
                }
            } while (true);

            otherlv_2=(Token)match(input,81,FollowSets000.FOLLOW_22); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRandomizeCallEffectAccess().getRandomizeKeyword_2());
              		
            }
            // InternalScadeEquations.g:10809:3: ( (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' ) | otherlv_8= '()' )
            int alt271=2;
            int LA271_0 = input.LA(1);

            if ( (LA271_0==17) ) {
                alt271=1;
            }
            else if ( (LA271_0==28) ) {
                alt271=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 271, 0, input);

                throw nvae;
            }
            switch (alt271) {
                case 1 :
                    // InternalScadeEquations.g:10810:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    {
                    // InternalScadeEquations.g:10810:4: (otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')' )
                    // InternalScadeEquations.g:10811:5: otherlv_3= '(' ( (lv_parameters_4_0= ruleParameter ) ) (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )* otherlv_7= ')'
                    {
                    otherlv_3=(Token)match(input,17,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_3, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalScadeEquations.g:10815:5: ( (lv_parameters_4_0= ruleParameter ) )
                    // InternalScadeEquations.g:10816:6: (lv_parameters_4_0= ruleParameter )
                    {
                    // InternalScadeEquations.g:10816:6: (lv_parameters_4_0= ruleParameter )
                    // InternalScadeEquations.g:10817:7: lv_parameters_4_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameters_4_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:10834:5: (otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) ) )*
                    loop270:
                    do {
                        int alt270=2;
                        int LA270_0 = input.LA(1);

                        if ( (LA270_0==18) ) {
                            alt270=1;
                        }


                        switch (alt270) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10835:6: otherlv_5= ',' ( (lv_parameters_6_0= ruleParameter ) )
                    	    {
                    	    otherlv_5=(Token)match(input,18,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_5, grammarAccess.getRandomizeCallEffectAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:10839:6: ( (lv_parameters_6_0= ruleParameter ) )
                    	    // InternalScadeEquations.g:10840:7: (lv_parameters_6_0= ruleParameter )
                    	    {
                    	    // InternalScadeEquations.g:10840:7: (lv_parameters_6_0= ruleParameter )
                    	    // InternalScadeEquations.g:10841:8: lv_parameters_6_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getRandomizeCallEffectAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameters_6_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getRandomizeCallEffectRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_6_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop270;
                        }
                    } while (true);

                    otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_7, grammarAccess.getRandomizeCallEffectAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:10865:4: otherlv_8= '()'
                    {
                    otherlv_8=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getRandomizeCallEffectAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRandomizeCallEffect"


    // $ANTLR start "entryRuleExpression"
    // InternalScadeEquations.g:10874:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalScadeEquations.g:10874:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalScadeEquations.g:10875:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalScadeEquations.g:10881:1: ruleExpression returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10887:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression ) )
            // InternalScadeEquations.g:10888:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            {
            // InternalScadeEquations.g:10888:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )
            int alt272=2;
            alt272 = dfa272.predict(input);
            switch (alt272) {
                case 1 :
                    // InternalScadeEquations.g:10889:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:10901:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleBitwiseXOrExpression"
    // InternalScadeEquations.g:10916:1: entryRuleBitwiseXOrExpression returns [EObject current=null] : iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF ;
    public final EObject entryRuleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseXOrExpression = null;


        try {
            // InternalScadeEquations.g:10916:61: (iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF )
            // InternalScadeEquations.g:10917:2: iv_ruleBitwiseXOrExpression= ruleBitwiseXOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseXOrExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseXOrExpression=ruleBitwiseXOrExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseXOrExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseXOrExpression"


    // $ANTLR start "ruleBitwiseXOrExpression"
    // InternalScadeEquations.g:10923:1: ruleBitwiseXOrExpression returns [EObject current=null] : (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) ;
    public final EObject ruleBitwiseXOrExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_BitwiseAndExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:10929:2: ( (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? ) )
            // InternalScadeEquations.g:10930:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:10930:2: (this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )? )
            // InternalScadeEquations.g:10931:3: this_BitwiseAndExpression_0= ruleBitwiseAndExpression ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getBitwiseAndExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_29);
            this_BitwiseAndExpression_0=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_BitwiseAndExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:10942:3: ( () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )* )?
            int alt274=2;
            int LA274_0 = input.LA(1);

            if ( (LA274_0==32) ) {
                alt274=1;
            }
            switch (alt274) {
                case 1 :
                    // InternalScadeEquations.g:10943:4: () ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) ) (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    {
                    // InternalScadeEquations.g:10943:4: ()
                    // InternalScadeEquations.g:10944:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseXOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:10953:4: ( ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) ) )
                    // InternalScadeEquations.g:10954:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) ) ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    {
                    // InternalScadeEquations.g:10954:5: ( (lv_operator_2_0= ruleBitwiseXOrOperator ) )
                    // InternalScadeEquations.g:10955:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    {
                    // InternalScadeEquations.g:10955:6: (lv_operator_2_0= ruleBitwiseXOrOperator )
                    // InternalScadeEquations.g:10956:7: lv_operator_2_0= ruleBitwiseXOrOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getOperatorBitwiseXOrOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleBitwiseXOrOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseXOrOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:10973:5: ( (lv_subExpressions_3_0= ruleBitwiseAndExpression ) )
                    // InternalScadeEquations.g:10974:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    {
                    // InternalScadeEquations.g:10974:6: (lv_subExpressions_3_0= ruleBitwiseAndExpression )
                    // InternalScadeEquations.g:10975:7: lv_subExpressions_3_0= ruleBitwiseAndExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_29);
                    lv_subExpressions_3_0=ruleBitwiseAndExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:10993:4: (otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) ) )*
                    loop273:
                    do {
                        int alt273=2;
                        int LA273_0 = input.LA(1);

                        if ( (LA273_0==32) ) {
                            alt273=1;
                        }


                        switch (alt273) {
                    	case 1 :
                    	    // InternalScadeEquations.g:10994:5: otherlv_4= '^' ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,32,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseXOrExpressionAccess().getCircumflexAccentKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:10998:5: ( (lv_subExpressions_5_0= ruleBitwiseAndExpression ) )
                    	    // InternalScadeEquations.g:10999:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    {
                    	    // InternalScadeEquations.g:10999:6: (lv_subExpressions_5_0= ruleBitwiseAndExpression )
                    	    // InternalScadeEquations.g:11000:7: lv_subExpressions_5_0= ruleBitwiseAndExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseXOrExpressionAccess().getSubExpressionsBitwiseAndExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_29);
                    	    lv_subExpressions_5_0=ruleBitwiseAndExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseXOrExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop273;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrExpression"


    // $ANTLR start "entryRuleBitwiseAndExpression"
    // InternalScadeEquations.g:11023:1: entryRuleBitwiseAndExpression returns [EObject current=null] : iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF ;
    public final EObject entryRuleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseAndExpression = null;


        try {
            // InternalScadeEquations.g:11023:61: (iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF )
            // InternalScadeEquations.g:11024:2: iv_ruleBitwiseAndExpression= ruleBitwiseAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseAndExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseAndExpression=ruleBitwiseAndExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseAndExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseAndExpression"


    // $ANTLR start "ruleBitwiseAndExpression"
    // InternalScadeEquations.g:11030:1: ruleBitwiseAndExpression returns [EObject current=null] : (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) ;
    public final EObject ruleBitwiseAndExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_CompareOperation_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11036:2: ( (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? ) )
            // InternalScadeEquations.g:11037:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            {
            // InternalScadeEquations.g:11037:2: (this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )? )
            // InternalScadeEquations.g:11038:3: this_CompareOperation_0= ruleCompareOperation ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getCompareOperationParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_129);
            this_CompareOperation_0=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_CompareOperation_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:11049:3: ( () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )* )?
            int alt276=2;
            int LA276_0 = input.LA(1);

            if ( (LA276_0==82) ) {
                alt276=1;
            }
            switch (alt276) {
                case 1 :
                    // InternalScadeEquations.g:11050:4: () ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) ) (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    {
                    // InternalScadeEquations.g:11050:4: ()
                    // InternalScadeEquations.g:11051:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getBitwiseAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:11060:4: ( ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) ) )
                    // InternalScadeEquations.g:11061:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) ) ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    {
                    // InternalScadeEquations.g:11061:5: ( (lv_operator_2_0= ruleBitwiseAndOperator ) )
                    // InternalScadeEquations.g:11062:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    {
                    // InternalScadeEquations.g:11062:6: (lv_operator_2_0= ruleBitwiseAndOperator )
                    // InternalScadeEquations.g:11063:7: lv_operator_2_0= ruleBitwiseAndOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getOperatorBitwiseAndOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleBitwiseAndOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseAndOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:11080:5: ( (lv_subExpressions_3_0= ruleCompareOperation ) )
                    // InternalScadeEquations.g:11081:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    {
                    // InternalScadeEquations.g:11081:6: (lv_subExpressions_3_0= ruleCompareOperation )
                    // InternalScadeEquations.g:11082:7: lv_subExpressions_3_0= ruleCompareOperation
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_129);
                    lv_subExpressions_3_0=ruleCompareOperation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:11100:4: (otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) ) )*
                    loop275:
                    do {
                        int alt275=2;
                        int LA275_0 = input.LA(1);

                        if ( (LA275_0==82) ) {
                            alt275=1;
                        }


                        switch (alt275) {
                    	case 1 :
                    	    // InternalScadeEquations.g:11101:5: otherlv_4= '&' ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    {
                    	    otherlv_4=(Token)match(input,82,FollowSets000.FOLLOW_9); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getBitwiseAndExpressionAccess().getAmpersandKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:11105:5: ( (lv_subExpressions_5_0= ruleCompareOperation ) )
                    	    // InternalScadeEquations.g:11106:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    {
                    	    // InternalScadeEquations.g:11106:6: (lv_subExpressions_5_0= ruleCompareOperation )
                    	    // InternalScadeEquations.g:11107:7: lv_subExpressions_5_0= ruleCompareOperation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getBitwiseAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_129);
                    	    lv_subExpressions_5_0=ruleCompareOperation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getBitwiseAndExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.CompareOperation");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop275;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndExpression"


    // $ANTLR start "entryRuleCompareOperation"
    // InternalScadeEquations.g:11130:1: entryRuleCompareOperation returns [EObject current=null] : iv_ruleCompareOperation= ruleCompareOperation EOF ;
    public final EObject entryRuleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCompareOperation = null;


        try {
            // InternalScadeEquations.g:11130:57: (iv_ruleCompareOperation= ruleCompareOperation EOF )
            // InternalScadeEquations.g:11131:2: iv_ruleCompareOperation= ruleCompareOperation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCompareOperationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCompareOperation=ruleCompareOperation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCompareOperation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCompareOperation"


    // $ANTLR start "ruleCompareOperation"
    // InternalScadeEquations.g:11137:1: ruleCompareOperation returns [EObject current=null] : (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) ;
    public final EObject ruleCompareOperation() throws RecognitionException {
        EObject current = null;

        EObject this_NotOrValuedExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11143:2: ( (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? ) )
            // InternalScadeEquations.g:11144:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            {
            // InternalScadeEquations.g:11144:2: (this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )? )
            // InternalScadeEquations.g:11145:3: this_NotOrValuedExpression_0= ruleNotOrValuedExpression ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_130);
            this_NotOrValuedExpression_0=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_NotOrValuedExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:11156:3: ( () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) ) )?
            int alt277=2;
            int LA277_0 = input.LA(1);

            if ( (LA277_0==21||(LA277_0>=74 && LA277_0<=75)||(LA277_0>=97 && LA277_0<=99)) ) {
                alt277=1;
            }
            switch (alt277) {
                case 1 :
                    // InternalScadeEquations.g:11157:4: () ( (lv_operator_2_0= ruleCompareOperator ) ) ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    {
                    // InternalScadeEquations.g:11157:4: ()
                    // InternalScadeEquations.g:11158:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:11167:4: ( (lv_operator_2_0= ruleCompareOperator ) )
                    // InternalScadeEquations.g:11168:5: (lv_operator_2_0= ruleCompareOperator )
                    {
                    // InternalScadeEquations.g:11168:5: (lv_operator_2_0= ruleCompareOperator )
                    // InternalScadeEquations.g:11169:6: lv_operator_2_0= ruleCompareOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_9);
                    lv_operator_2_0=ruleCompareOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_2_0,
                      							"de.cau.cs.kieler.lustre.Lustre.CompareOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:11186:4: ( (lv_subExpressions_3_0= ruleNotOrValuedExpression ) )
                    // InternalScadeEquations.g:11187:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    {
                    // InternalScadeEquations.g:11187:5: (lv_subExpressions_3_0= ruleNotOrValuedExpression )
                    // InternalScadeEquations.g:11188:6: lv_subExpressions_3_0= ruleNotOrValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_3_0=ruleNotOrValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getCompareOperationRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_3_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.NotOrValuedExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperation"


    // $ANTLR start "entryRuleNotOrValuedExpression"
    // InternalScadeEquations.g:11210:1: entryRuleNotOrValuedExpression returns [EObject current=null] : iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF ;
    public final EObject entryRuleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNotOrValuedExpression = null;


        try {
            // InternalScadeEquations.g:11210:62: (iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF )
            // InternalScadeEquations.g:11211:2: iv_ruleNotOrValuedExpression= ruleNotOrValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNotOrValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNotOrValuedExpression=ruleNotOrValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNotOrValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNotOrValuedExpression"


    // $ANTLR start "ruleNotOrValuedExpression"
    // InternalScadeEquations.g:11217:1: ruleNotOrValuedExpression returns [EObject current=null] : (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) ;
    public final EObject ruleNotOrValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject this_ValuedExpression_0 = null;

        EObject this_NotExpression_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11223:2: ( (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression ) )
            // InternalScadeEquations.g:11224:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            {
            // InternalScadeEquations.g:11224:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )
            int alt278=2;
            alt278 = dfa278.predict(input);
            switch (alt278) {
                case 1 :
                    // InternalScadeEquations.g:11225:3: this_ValuedExpression_0= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_0=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11237:3: this_NotExpression_1= ruleNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NotExpression_1=ruleNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NotExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOrValuedExpression"


    // $ANTLR start "entryRuleBitwiseNotExpression"
    // InternalScadeEquations.g:11252:1: entryRuleBitwiseNotExpression returns [EObject current=null] : iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF ;
    public final EObject entryRuleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBitwiseNotExpression = null;


        try {
            // InternalScadeEquations.g:11252:61: (iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF )
            // InternalScadeEquations.g:11253:2: iv_ruleBitwiseNotExpression= ruleBitwiseNotExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBitwiseNotExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBitwiseNotExpression=ruleBitwiseNotExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBitwiseNotExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBitwiseNotExpression"


    // $ANTLR start "ruleBitwiseNotExpression"
    // InternalScadeEquations.g:11259:1: ruleBitwiseNotExpression returns [EObject current=null] : ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) ;
    public final EObject ruleBitwiseNotExpression() throws RecognitionException {
        EObject current = null;

        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;

        EObject this_AtomicExpression_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11265:2: ( ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression ) )
            // InternalScadeEquations.g:11266:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            {
            // InternalScadeEquations.g:11266:2: ( ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) ) | this_AtomicExpression_3= ruleAtomicExpression )
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( (LA279_0==109) ) {
                alt279=1;
            }
            else if ( (LA279_0==RULE_ID||LA279_0==RULE_BOOLEAN||LA279_0==17||LA279_0==91||LA279_0==102||LA279_0==108||LA279_0==111) ) {
                alt279=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 279, 0, input);

                throw nvae;
            }
            switch (alt279) {
                case 1 :
                    // InternalScadeEquations.g:11267:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    {
                    // InternalScadeEquations.g:11267:3: ( () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) ) )
                    // InternalScadeEquations.g:11268:4: () ( (lv_operator_1_0= ruleBitwiseNotOperator ) ) ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    {
                    // InternalScadeEquations.g:11268:4: ()
                    // InternalScadeEquations.g:11269:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElement(
                      						grammarAccess.getBitwiseNotExpressionAccess().getOperatorExpressionAction_0_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:11278:4: ( (lv_operator_1_0= ruleBitwiseNotOperator ) )
                    // InternalScadeEquations.g:11279:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    {
                    // InternalScadeEquations.g:11279:5: (lv_operator_1_0= ruleBitwiseNotOperator )
                    // InternalScadeEquations.g:11280:6: lv_operator_1_0= ruleBitwiseNotOperator
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getOperatorBitwiseNotOperatorEnumRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_131);
                    lv_operator_1_0=ruleBitwiseNotOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						set(
                      							current,
                      							"operator",
                      							lv_operator_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotOperator");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:11297:4: ( (lv_subExpressions_2_0= ruleBitwiseNotExpression ) )
                    // InternalScadeEquations.g:11298:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    {
                    // InternalScadeEquations.g:11298:5: (lv_subExpressions_2_0= ruleBitwiseNotExpression )
                    // InternalScadeEquations.g:11299:6: lv_subExpressions_2_0= ruleBitwiseNotExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getSubExpressionsBitwiseNotExpressionParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subExpressions_2_0=ruleBitwiseNotExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getBitwiseNotExpressionRule());
                      						}
                      						add(
                      							current,
                      							"subExpressions",
                      							lv_subExpressions_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.BitwiseNotExpression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11318:3: this_AtomicExpression_3= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getBitwiseNotExpressionAccess().getAtomicExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_3=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotExpression"


    // $ANTLR start "entryRuleShiftRightExpression"
    // InternalScadeEquations.g:11333:1: entryRuleShiftRightExpression returns [EObject current=null] : iv_ruleShiftRightExpression= ruleShiftRightExpression EOF ;
    public final EObject entryRuleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightExpression = null;


        try {
            // InternalScadeEquations.g:11333:61: (iv_ruleShiftRightExpression= ruleShiftRightExpression EOF )
            // InternalScadeEquations.g:11334:2: iv_ruleShiftRightExpression= ruleShiftRightExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightExpression=ruleShiftRightExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightExpression"


    // $ANTLR start "ruleShiftRightExpression"
    // InternalScadeEquations.g:11340:1: ruleShiftRightExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11346:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? ) )
            // InternalScadeEquations.g:11347:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:11347:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )? )
            // InternalScadeEquations.g:11348:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_132);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:11359:3: ( () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )* )?
            int alt281=2;
            int LA281_0 = input.LA(1);

            if ( (LA281_0==83) ) {
                alt281=1;
            }
            switch (alt281) {
                case 1 :
                    // InternalScadeEquations.g:11360:4: () ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) ) (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    {
                    // InternalScadeEquations.g:11360:4: ()
                    // InternalScadeEquations.g:11361:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:11370:4: ( ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) ) )
                    // InternalScadeEquations.g:11371:5: ( (lv_operator_2_0= ruleShiftRightOperator ) ) ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    {
                    // InternalScadeEquations.g:11371:5: ( (lv_operator_2_0= ruleShiftRightOperator ) )
                    // InternalScadeEquations.g:11372:6: (lv_operator_2_0= ruleShiftRightOperator )
                    {
                    // InternalScadeEquations.g:11372:6: (lv_operator_2_0= ruleShiftRightOperator )
                    // InternalScadeEquations.g:11373:7: lv_operator_2_0= ruleShiftRightOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getOperatorShiftRightOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_operator_2_0=ruleShiftRightOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:11390:5: ( (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression ) )
                    // InternalScadeEquations.g:11391:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    {
                    // InternalScadeEquations.g:11391:6: (lv_subExpressions_3_0= ruleShiftRightUnsignedExpression )
                    // InternalScadeEquations.g:11392:7: lv_subExpressions_3_0= ruleShiftRightUnsignedExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_132);
                    lv_subExpressions_3_0=ruleShiftRightUnsignedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:11410:4: (otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) ) )*
                    loop280:
                    do {
                        int alt280=2;
                        int LA280_0 = input.LA(1);

                        if ( (LA280_0==83) ) {
                            alt280=1;
                        }


                        switch (alt280) {
                    	case 1 :
                    	    // InternalScadeEquations.g:11411:5: otherlv_4= '>>' ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,83,FollowSets000.FOLLOW_49); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightExpressionAccess().getGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:11415:5: ( (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression ) )
                    	    // InternalScadeEquations.g:11416:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    {
                    	    // InternalScadeEquations.g:11416:6: (lv_subExpressions_5_0= ruleShiftRightUnsignedExpression )
                    	    // InternalScadeEquations.g:11417:7: lv_subExpressions_5_0= ruleShiftRightUnsignedExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightExpressionAccess().getSubExpressionsShiftRightUnsignedExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_132);
                    	    lv_subExpressions_5_0=ruleShiftRightUnsignedExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop280;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightExpression"


    // $ANTLR start "entryRuleShiftRightUnsignedExpression"
    // InternalScadeEquations.g:11440:1: entryRuleShiftRightUnsignedExpression returns [EObject current=null] : iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF ;
    public final EObject entryRuleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleShiftRightUnsignedExpression = null;


        try {
            // InternalScadeEquations.g:11440:69: (iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF )
            // InternalScadeEquations.g:11441:2: iv_ruleShiftRightUnsignedExpression= ruleShiftRightUnsignedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleShiftRightUnsignedExpression=ruleShiftRightUnsignedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleShiftRightUnsignedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleShiftRightUnsignedExpression"


    // $ANTLR start "ruleShiftRightUnsignedExpression"
    // InternalScadeEquations.g:11447:1: ruleShiftRightUnsignedExpression returns [EObject current=null] : (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) ;
    public final EObject ruleShiftRightUnsignedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        EObject this_SumExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11453:2: ( (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? ) )
            // InternalScadeEquations.g:11454:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            {
            // InternalScadeEquations.g:11454:2: (this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )? )
            // InternalScadeEquations.g:11455:3: this_SumExpression_0= ruleSumExpression ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSumExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_133);
            this_SumExpression_0=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_SumExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:11466:3: ( () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )* )?
            int alt283=2;
            int LA283_0 = input.LA(1);

            if ( (LA283_0==84) ) {
                alt283=1;
            }
            switch (alt283) {
                case 1 :
                    // InternalScadeEquations.g:11467:4: () ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) ) (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    {
                    // InternalScadeEquations.g:11467:4: ()
                    // InternalScadeEquations.g:11468:5: 
                    {
                    if ( state.backtracking==0 ) {

                      					/* */
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					current = forceCreateModelElementAndAdd(
                      						grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0(),
                      						current);
                      				
                    }

                    }

                    // InternalScadeEquations.g:11477:4: ( ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) ) )
                    // InternalScadeEquations.g:11478:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) ) ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    {
                    // InternalScadeEquations.g:11478:5: ( (lv_operator_2_0= ruleShiftRightUnsignedOperator ) )
                    // InternalScadeEquations.g:11479:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    {
                    // InternalScadeEquations.g:11479:6: (lv_operator_2_0= ruleShiftRightUnsignedOperator )
                    // InternalScadeEquations.g:11480:7: lv_operator_2_0= ruleShiftRightUnsignedOperator
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getOperatorShiftRightUnsignedOperatorEnumRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_49);
                    lv_operator_2_0=ruleShiftRightUnsignedOperator();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							set(
                      								current,
                      								"operator",
                      								lv_operator_2_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.ShiftRightUnsignedOperator");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:11497:5: ( (lv_subExpressions_3_0= ruleSumExpression ) )
                    // InternalScadeEquations.g:11498:6: (lv_subExpressions_3_0= ruleSumExpression )
                    {
                    // InternalScadeEquations.g:11498:6: (lv_subExpressions_3_0= ruleSumExpression )
                    // InternalScadeEquations.g:11499:7: lv_subExpressions_3_0= ruleSumExpression
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_133);
                    lv_subExpressions_3_0=ruleSumExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                      							}
                      							add(
                      								current,
                      								"subExpressions",
                      								lv_subExpressions_3_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }

                    // InternalScadeEquations.g:11517:4: (otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) ) )*
                    loop282:
                    do {
                        int alt282=2;
                        int LA282_0 = input.LA(1);

                        if ( (LA282_0==84) ) {
                            alt282=1;
                        }


                        switch (alt282) {
                    	case 1 :
                    	    // InternalScadeEquations.g:11518:5: otherlv_4= '>>>' ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    {
                    	    otherlv_4=(Token)match(input,84,FollowSets000.FOLLOW_49); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_4, grammarAccess.getShiftRightUnsignedExpressionAccess().getGreaterThanSignGreaterThanSignGreaterThanSignKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:11522:5: ( (lv_subExpressions_5_0= ruleSumExpression ) )
                    	    // InternalScadeEquations.g:11523:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    {
                    	    // InternalScadeEquations.g:11523:6: (lv_subExpressions_5_0= ruleSumExpression )
                    	    // InternalScadeEquations.g:11524:7: lv_subExpressions_5_0= ruleSumExpression
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getShiftRightUnsignedExpressionAccess().getSubExpressionsSumExpressionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_133);
                    	    lv_subExpressions_5_0=ruleSumExpression();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getShiftRightUnsignedExpressionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"subExpressions",
                    	      								lv_subExpressions_5_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.SumExpression");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop282;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedExpression"


    // $ANTLR start "entryRuleSumExpression"
    // InternalScadeEquations.g:11547:1: entryRuleSumExpression returns [EObject current=null] : iv_ruleSumExpression= ruleSumExpression EOF ;
    public final EObject entryRuleSumExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSumExpression = null;


        try {
            // InternalScadeEquations.g:11547:54: (iv_ruleSumExpression= ruleSumExpression EOF )
            // InternalScadeEquations.g:11548:2: iv_ruleSumExpression= ruleSumExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSumExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleSumExpression=ruleSumExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSumExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSumExpression"


    // $ANTLR start "ruleSumExpression"
    // InternalScadeEquations.g:11554:1: ruleSumExpression returns [EObject current=null] : (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) ;
    public final EObject ruleSumExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_4=null;
        Token otherlv_9=null;
        EObject this_ProductExpression_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;

        EObject lv_subExpressions_5_0 = null;

        Enumerator lv_operator_7_0 = null;

        EObject lv_subExpressions_8_0 = null;

        EObject lv_subExpressions_10_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11560:2: ( (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* ) )
            // InternalScadeEquations.g:11561:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            {
            // InternalScadeEquations.g:11561:2: (this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )* )
            // InternalScadeEquations.g:11562:3: this_ProductExpression_0= ruleProductExpression ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getSumExpressionAccess().getProductExpressionParserRuleCall_0());
              		
            }
            pushFollow(FollowSets000.FOLLOW_134);
            this_ProductExpression_0=ruleProductExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ProductExpression_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalScadeEquations.g:11573:3: ( ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* ) | ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* ) )*
            loop286:
            do {
                int alt286=3;
                int LA286_0 = input.LA(1);

                if ( (LA286_0==85) ) {
                    alt286=1;
                }
                else if ( (LA286_0==86) ) {
                    alt286=2;
                }


                switch (alt286) {
            	case 1 :
            	    // InternalScadeEquations.g:11574:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalScadeEquations.g:11574:4: ( () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )* )
            	    // InternalScadeEquations.g:11575:5: () ( (lv_operator_2_0= ruleAddOperator ) ) ( (lv_subExpressions_3_0= ruleProductExpression ) ) (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalScadeEquations.g:11575:5: ()
            	    // InternalScadeEquations.g:11576:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalScadeEquations.g:11585:5: ( (lv_operator_2_0= ruleAddOperator ) )
            	    // InternalScadeEquations.g:11586:6: (lv_operator_2_0= ruleAddOperator )
            	    {
            	    // InternalScadeEquations.g:11586:6: (lv_operator_2_0= ruleAddOperator )
            	    // InternalScadeEquations.g:11587:7: lv_operator_2_0= ruleAddOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_0_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_operator_2_0=ruleAddOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_2_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.AddOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:11604:5: ( (lv_subExpressions_3_0= ruleProductExpression ) )
            	    // InternalScadeEquations.g:11605:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    {
            	    // InternalScadeEquations.g:11605:6: (lv_subExpressions_3_0= ruleProductExpression )
            	    // InternalScadeEquations.g:11606:7: lv_subExpressions_3_0= ruleProductExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_134);
            	    lv_subExpressions_3_0=ruleProductExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_3_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.ProductExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:11623:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*
            	    loop284:
            	    do {
            	        int alt284=2;
            	        alt284 = dfa284.predict(input);
            	        switch (alt284) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:11624:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
            	    	    {
            	    	    otherlv_4=(Token)match(input,85,FollowSets000.FOLLOW_49); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_4, grammarAccess.getSumExpressionAccess().getPlusSignKeyword_1_0_3_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:11628:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
            	    	    // InternalScadeEquations.g:11629:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    {
            	    	    // InternalScadeEquations.g:11629:7: (lv_subExpressions_5_0= ruleProductExpression )
            	    	    // InternalScadeEquations.g:11630:8: lv_subExpressions_5_0= ruleProductExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_134);
            	    	    lv_subExpressions_5_0=ruleProductExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_5_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.ProductExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop284;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalScadeEquations.g:11650:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    {
            	    // InternalScadeEquations.g:11650:4: ( () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )* )
            	    // InternalScadeEquations.g:11651:5: () ( (lv_operator_7_0= ruleSubOperator ) ) ( (lv_subExpressions_8_0= ruleProductExpression ) ) (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    {
            	    // InternalScadeEquations.g:11651:5: ()
            	    // InternalScadeEquations.g:11652:6: 
            	    {
            	    if ( state.backtracking==0 ) {

            	      						/* */
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						current = forceCreateModelElementAndAdd(
            	      							grammarAccess.getSumExpressionAccess().getOperatorExpressionSubExpressionsAction_1_1_0(),
            	      							current);
            	      					
            	    }

            	    }

            	    // InternalScadeEquations.g:11661:5: ( (lv_operator_7_0= ruleSubOperator ) )
            	    // InternalScadeEquations.g:11662:6: (lv_operator_7_0= ruleSubOperator )
            	    {
            	    // InternalScadeEquations.g:11662:6: (lv_operator_7_0= ruleSubOperator )
            	    // InternalScadeEquations.g:11663:7: lv_operator_7_0= ruleSubOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_1_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_49);
            	    lv_operator_7_0=ruleSubOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							set(
            	      								current,
            	      								"operator",
            	      								lv_operator_7_0,
            	      								"de.cau.cs.kieler.kexpressions.KExpressions.SubOperator");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:11680:5: ( (lv_subExpressions_8_0= ruleProductExpression ) )
            	    // InternalScadeEquations.g:11681:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    {
            	    // InternalScadeEquations.g:11681:6: (lv_subExpressions_8_0= ruleProductExpression )
            	    // InternalScadeEquations.g:11682:7: lv_subExpressions_8_0= ruleProductExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_2_0());
            	      						
            	    }
            	    pushFollow(FollowSets000.FOLLOW_134);
            	    lv_subExpressions_8_0=ruleProductExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	      							}
            	      							add(
            	      								current,
            	      								"subExpressions",
            	      								lv_subExpressions_8_0,
            	      								"de.cau.cs.kieler.lustre.Lustre.ProductExpression");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }

            	    // InternalScadeEquations.g:11699:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*
            	    loop285:
            	    do {
            	        int alt285=2;
            	        alt285 = dfa285.predict(input);
            	        switch (alt285) {
            	    	case 1 :
            	    	    // InternalScadeEquations.g:11700:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
            	    	    {
            	    	    otherlv_9=(Token)match(input,86,FollowSets000.FOLLOW_49); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      						newLeafNode(otherlv_9, grammarAccess.getSumExpressionAccess().getHyphenMinusKeyword_1_1_3_0());
            	    	      					
            	    	    }
            	    	    // InternalScadeEquations.g:11704:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
            	    	    // InternalScadeEquations.g:11705:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    {
            	    	    // InternalScadeEquations.g:11705:7: (lv_subExpressions_10_0= ruleProductExpression )
            	    	    // InternalScadeEquations.g:11706:8: lv_subExpressions_10_0= ruleProductExpression
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
            	    	      							
            	    	    }
            	    	    pushFollow(FollowSets000.FOLLOW_134);
            	    	    lv_subExpressions_10_0=ruleProductExpression();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      								if (current==null) {
            	    	      									current = createModelElementForParent(grammarAccess.getSumExpressionRule());
            	    	      								}
            	    	      								add(
            	    	      									current,
            	    	      									"subExpressions",
            	    	      									lv_subExpressions_10_0,
            	    	      									"de.cau.cs.kieler.lustre.Lustre.ProductExpression");
            	    	      								afterParserOrEnumRuleCall();
            	    	      							
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop285;
            	        }
            	    } while (true);


            	    }


            	    }
            	    break;

            	default :
            	    break loop286;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSumExpression"


    // $ANTLR start "entryRuleAtomicValuedExpression"
    // InternalScadeEquations.g:11730:1: entryRuleAtomicValuedExpression returns [EObject current=null] : iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF ;
    public final EObject entryRuleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAtomicValuedExpression = null;


        try {
            // InternalScadeEquations.g:11730:63: (iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF )
            // InternalScadeEquations.g:11731:2: iv_ruleAtomicValuedExpression= ruleAtomicValuedExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAtomicValuedExpressionRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAtomicValuedExpression=ruleAtomicValuedExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAtomicValuedExpression; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAtomicValuedExpression"


    // $ANTLR start "ruleAtomicValuedExpression"
    // InternalScadeEquations.g:11737:1: ruleAtomicValuedExpression returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | this_NullValue_4= ruleNullValue | (otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')' ) | this_AtomicExpression_8= ruleAtomicExpression ) ;
    public final EObject ruleAtomicValuedExpression() throws RecognitionException {
        EObject current = null;

        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_StringValue_2 = null;

        EObject this_VectorValue_3 = null;

        EObject this_NullValue_4 = null;

        EObject this_ValuedExpression_6 = null;

        EObject this_AtomicExpression_8 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11743:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | this_NullValue_4= ruleNullValue | (otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')' ) | this_AtomicExpression_8= ruleAtomicExpression ) )
            // InternalScadeEquations.g:11744:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | this_NullValue_4= ruleNullValue | (otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')' ) | this_AtomicExpression_8= ruleAtomicExpression )
            {
            // InternalScadeEquations.g:11744:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | this_NullValue_4= ruleNullValue | (otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')' ) | this_AtomicExpression_8= ruleAtomicExpression )
            int alt287=7;
            alt287 = dfa287.predict(input);
            switch (alt287) {
                case 1 :
                    // InternalScadeEquations.g:11745:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:11757:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:11769:3: this_StringValue_2= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getStringValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_2=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:11781:3: this_VectorValue_3= ruleVectorValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getVectorValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_VectorValue_3=ruleVectorValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_VectorValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:11793:3: this_NullValue_4= ruleNullValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getNullValueParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullValue_4=ruleNullValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullValue_4;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalScadeEquations.g:11805:3: (otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')' )
                    {
                    // InternalScadeEquations.g:11805:3: (otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')' )
                    // InternalScadeEquations.g:11806:4: otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')'
                    {
                    otherlv_5=(Token)match(input,17,FollowSets000.FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_5_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_5_1());
                      			
                    }
                    pushFollow(FollowSets000.FOLLOW_13);
                    this_ValuedExpression_6=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ValuedExpression_6;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_5_2());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalScadeEquations.g:11827:3: this_AtomicExpression_8= ruleAtomicExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_6());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AtomicExpression_8=ruleAtomicExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AtomicExpression_8;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtomicValuedExpression"


    // $ANTLR start "entryRulePrimeID"
    // InternalScadeEquations.g:11842:1: entryRulePrimeID returns [String current=null] : iv_rulePrimeID= rulePrimeID EOF ;
    public final String entryRulePrimeID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePrimeID = null;


        try {
            // InternalScadeEquations.g:11842:47: (iv_rulePrimeID= rulePrimeID EOF )
            // InternalScadeEquations.g:11843:2: iv_rulePrimeID= rulePrimeID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPrimeIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePrimeID=rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePrimeID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePrimeID"


    // $ANTLR start "rulePrimeID"
    // InternalScadeEquations.g:11849:1: rulePrimeID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID (kw= '\\'' )* ) ;
    public final AntlrDatatypeRuleToken rulePrimeID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:11855:2: ( (this_ID_0= RULE_ID (kw= '\\'' )* ) )
            // InternalScadeEquations.g:11856:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            {
            // InternalScadeEquations.g:11856:2: (this_ID_0= RULE_ID (kw= '\\'' )* )
            // InternalScadeEquations.g:11857:3: this_ID_0= RULE_ID (kw= '\\'' )*
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_135); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getPrimeIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalScadeEquations.g:11864:3: (kw= '\\'' )*
            loop288:
            do {
                int alt288=2;
                int LA288_0 = input.LA(1);

                if ( (LA288_0==87) ) {
                    alt288=1;
                }


                switch (alt288) {
            	case 1 :
            	    // InternalScadeEquations.g:11865:4: kw= '\\''
            	    {
            	    kw=(Token)match(input,87,FollowSets000.FOLLOW_135); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPrimeIDAccess().getApostropheKeyword_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop288;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePrimeID"


    // $ANTLR start "entryRuleValuedObjectReference"
    // InternalScadeEquations.g:11875:1: entryRuleValuedObjectReference returns [EObject current=null] : iv_ruleValuedObjectReference= ruleValuedObjectReference EOF ;
    public final EObject entryRuleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValuedObjectReference = null;


        try {
            // InternalScadeEquations.g:11875:62: (iv_ruleValuedObjectReference= ruleValuedObjectReference EOF )
            // InternalScadeEquations.g:11876:2: iv_ruleValuedObjectReference= ruleValuedObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValuedObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleValuedObjectReference=ruleValuedObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValuedObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValuedObjectReference"


    // $ANTLR start "ruleValuedObjectReference"
    // InternalScadeEquations.g:11882:1: ruleValuedObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) ;
    public final EObject ruleValuedObjectReference() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:11888:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ) )
            // InternalScadeEquations.g:11889:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            {
            // InternalScadeEquations.g:11889:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? )
            // InternalScadeEquations.g:11890:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            {
            // InternalScadeEquations.g:11890:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:11891:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:11891:4: ( rulePrimeID )
            // InternalScadeEquations.g:11892:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getValuedObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_105);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:11909:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop289:
            do {
                int alt289=2;
                int LA289_0 = input.LA(1);

                if ( (LA289_0==76) ) {
                    alt289=1;
                }


                switch (alt289) {
            	case 1 :
            	    // InternalScadeEquations.g:11910:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,76,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getValuedObjectReferenceAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:11914:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalScadeEquations.g:11915:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:11915:5: (lv_indices_2_0= ruleExpression )
            	    // InternalScadeEquations.g:11916:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,77,FollowSets000.FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getValuedObjectReferenceAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop289;
                }
            } while (true);

            // InternalScadeEquations.g:11938:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt290=2;
            int LA290_0 = input.LA(1);

            if ( (LA290_0==37) ) {
                alt290=1;
            }
            switch (alt290) {
                case 1 :
                    // InternalScadeEquations.g:11939:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getValuedObjectReferenceAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:11943:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:11944:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:11944:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:11945:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValuedObjectReferenceAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValuedObjectReferenceRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValuedObjectReference"


    // $ANTLR start "entryRuleScheduleObjectReference"
    // InternalScadeEquations.g:11967:1: entryRuleScheduleObjectReference returns [EObject current=null] : iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF ;
    public final EObject entryRuleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleScheduleObjectReference = null;


        try {
            // InternalScadeEquations.g:11967:64: (iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF )
            // InternalScadeEquations.g:11968:2: iv_ruleScheduleObjectReference= ruleScheduleObjectReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getScheduleObjectReferenceRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleScheduleObjectReference=ruleScheduleObjectReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleScheduleObjectReference; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleScheduleObjectReference"


    // $ANTLR start "ruleScheduleObjectReference"
    // InternalScadeEquations.g:11974:1: ruleScheduleObjectReference returns [EObject current=null] : ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) ;
    public final EObject ruleScheduleObjectReference() throws RecognitionException {
        EObject current = null;

        Token lv_priority_1_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:11980:2: ( ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) ) )
            // InternalScadeEquations.g:11981:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            {
            // InternalScadeEquations.g:11981:2: ( ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) ) )
            // InternalScadeEquations.g:11982:3: ( ( rulePrimeID ) ) ( (lv_priority_1_0= RULE_INT ) )
            {
            // InternalScadeEquations.g:11982:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:11983:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:11983:4: ( rulePrimeID )
            // InternalScadeEquations.g:11984:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getScheduleObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_136);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12001:3: ( (lv_priority_1_0= RULE_INT ) )
            // InternalScadeEquations.g:12002:4: (lv_priority_1_0= RULE_INT )
            {
            // InternalScadeEquations.g:12002:4: (lv_priority_1_0= RULE_INT )
            // InternalScadeEquations.g:12003:5: lv_priority_1_0= RULE_INT
            {
            lv_priority_1_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_priority_1_0, grammarAccess.getScheduleObjectReferenceAccess().getPriorityINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getScheduleObjectReferenceRule());
              					}
              					setWithLastConsumed(
              						current,
              						"priority",
              						lv_priority_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.INT");
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleScheduleObjectReference"


    // $ANTLR start "entryRuleReferenceCall"
    // InternalScadeEquations.g:12023:1: entryRuleReferenceCall returns [EObject current=null] : iv_ruleReferenceCall= ruleReferenceCall EOF ;
    public final EObject entryRuleReferenceCall() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleReferenceCall = null;


        try {
            // InternalScadeEquations.g:12023:54: (iv_ruleReferenceCall= ruleReferenceCall EOF )
            // InternalScadeEquations.g:12024:2: iv_ruleReferenceCall= ruleReferenceCall EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getReferenceCallRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleReferenceCall=ruleReferenceCall();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleReferenceCall; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleReferenceCall"


    // $ANTLR start "ruleReferenceCall"
    // InternalScadeEquations.g:12030:1: ruleReferenceCall returns [EObject current=null] : ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) ;
    public final EObject ruleReferenceCall() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_indices_2_0 = null;

        EObject lv_subReference_5_0 = null;

        EObject lv_parameters_7_0 = null;

        EObject lv_parameters_9_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12036:2: ( ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) ) )
            // InternalScadeEquations.g:12037:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            {
            // InternalScadeEquations.g:12037:2: ( ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' ) )
            // InternalScadeEquations.g:12038:3: ( ( rulePrimeID ) ) (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )* (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )? ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            {
            // InternalScadeEquations.g:12038:3: ( ( rulePrimeID ) )
            // InternalScadeEquations.g:12039:4: ( rulePrimeID )
            {
            // InternalScadeEquations.g:12039:4: ( rulePrimeID )
            // InternalScadeEquations.g:12040:5: rulePrimeID
            {
            if ( state.backtracking==0 ) {

              					/* */
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getReferenceCallRule());
              					}
              				
            }
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getReferenceCallAccess().getValuedObjectValuedObjectCrossReference_0_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_125);
            rulePrimeID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:12057:3: (otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']' )*
            loop291:
            do {
                int alt291=2;
                int LA291_0 = input.LA(1);

                if ( (LA291_0==76) ) {
                    alt291=1;
                }


                switch (alt291) {
            	case 1 :
            	    // InternalScadeEquations.g:12058:4: otherlv_1= '[' ( (lv_indices_2_0= ruleExpression ) ) otherlv_3= ']'
            	    {
            	    otherlv_1=(Token)match(input,76,FollowSets000.FOLLOW_9); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getReferenceCallAccess().getLeftSquareBracketKeyword_1_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:12062:4: ( (lv_indices_2_0= ruleExpression ) )
            	    // InternalScadeEquations.g:12063:5: (lv_indices_2_0= ruleExpression )
            	    {
            	    // InternalScadeEquations.g:12063:5: (lv_indices_2_0= ruleExpression )
            	    // InternalScadeEquations.g:12064:6: lv_indices_2_0= ruleExpression
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getReferenceCallAccess().getIndicesExpressionParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_104);
            	    lv_indices_2_0=ruleExpression();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
            	      						}
            	      						add(
            	      							current,
            	      							"indices",
            	      							lv_indices_2_0,
            	      							"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    otherlv_3=(Token)match(input,77,FollowSets000.FOLLOW_125); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getReferenceCallAccess().getRightSquareBracketKeyword_1_2());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop291;
                }
            } while (true);

            // InternalScadeEquations.g:12086:3: (otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) ) )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==37) ) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // InternalScadeEquations.g:12087:4: otherlv_4= '.' ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    {
                    otherlv_4=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getReferenceCallAccess().getFullStopKeyword_2_0());
                      			
                    }
                    // InternalScadeEquations.g:12091:4: ( (lv_subReference_5_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:12092:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:12092:5: (lv_subReference_5_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:12093:6: lv_subReference_5_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getReferenceCallAccess().getSubReferenceValuedObjectReferenceParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_22);
                    lv_subReference_5_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      						}
                      						set(
                      							current,
                      							"subReference",
                      							lv_subReference_5_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalScadeEquations.g:12111:3: ( (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' ) | otherlv_11= '()' )
            int alt294=2;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==17) ) {
                alt294=1;
            }
            else if ( (LA294_0==28) ) {
                alt294=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 294, 0, input);

                throw nvae;
            }
            switch (alt294) {
                case 1 :
                    // InternalScadeEquations.g:12112:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    {
                    // InternalScadeEquations.g:12112:4: (otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')' )
                    // InternalScadeEquations.g:12113:5: otherlv_6= '(' ( (lv_parameters_7_0= ruleParameter ) ) (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )* otherlv_10= ')'
                    {
                    otherlv_6=(Token)match(input,17,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getReferenceCallAccess().getLeftParenthesisKeyword_3_0_0());
                      				
                    }
                    // InternalScadeEquations.g:12117:5: ( (lv_parameters_7_0= ruleParameter ) )
                    // InternalScadeEquations.g:12118:6: (lv_parameters_7_0= ruleParameter )
                    {
                    // InternalScadeEquations.g:12118:6: (lv_parameters_7_0= ruleParameter )
                    // InternalScadeEquations.g:12119:7: lv_parameters_7_0= ruleParameter
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_1_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_6);
                    lv_parameters_7_0=ruleParameter();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                      							}
                      							add(
                      								current,
                      								"parameters",
                      								lv_parameters_7_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:12136:5: (otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) ) )*
                    loop293:
                    do {
                        int alt293=2;
                        int LA293_0 = input.LA(1);

                        if ( (LA293_0==18) ) {
                            alt293=1;
                        }


                        switch (alt293) {
                    	case 1 :
                    	    // InternalScadeEquations.g:12137:6: otherlv_8= ',' ( (lv_parameters_9_0= ruleParameter ) )
                    	    {
                    	    otherlv_8=(Token)match(input,18,FollowSets000.FOLLOW_119); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_8, grammarAccess.getReferenceCallAccess().getCommaKeyword_3_0_2_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:12141:6: ( (lv_parameters_9_0= ruleParameter ) )
                    	    // InternalScadeEquations.g:12142:7: (lv_parameters_9_0= ruleParameter )
                    	    {
                    	    // InternalScadeEquations.g:12142:7: (lv_parameters_9_0= ruleParameter )
                    	    // InternalScadeEquations.g:12143:8: lv_parameters_9_0= ruleParameter
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getReferenceCallAccess().getParametersParameterParserRuleCall_3_0_2_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_6);
                    	    lv_parameters_9_0=ruleParameter();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getReferenceCallRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"parameters",
                    	      									lv_parameters_9_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.Parameter");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop293;
                        }
                    } while (true);

                    otherlv_10=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_10, grammarAccess.getReferenceCallAccess().getRightParenthesisKeyword_3_0_3());
                      				
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:12167:4: otherlv_11= '()'
                    {
                    otherlv_11=(Token)match(input,28,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getReferenceCallAccess().getLeftParenthesisRightParenthesisKeyword_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleReferenceCall"


    // $ANTLR start "entryRuleParameter"
    // InternalScadeEquations.g:12176:1: entryRuleParameter returns [EObject current=null] : iv_ruleParameter= ruleParameter EOF ;
    public final EObject entryRuleParameter() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameter = null;


        try {
            // InternalScadeEquations.g:12176:50: (iv_ruleParameter= ruleParameter EOF )
            // InternalScadeEquations.g:12177:2: iv_ruleParameter= ruleParameter EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleParameter=ruleParameter();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameter; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameter"


    // $ANTLR start "ruleParameter"
    // InternalScadeEquations.g:12183:1: ruleParameter returns [EObject current=null] : ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) ;
    public final EObject ruleParameter() throws RecognitionException {
        EObject current = null;

        Enumerator lv_accessType_0_0 = null;

        EObject lv_expression_1_0 = null;

        EObject lv_expression_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12189:2: ( ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) ) )
            // InternalScadeEquations.g:12190:2: ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) )
            {
            // InternalScadeEquations.g:12190:2: ( ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) ) | ( (lv_expression_2_0= ruleExpression ) ) )
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==82||LA295_0==125) ) {
                alt295=1;
            }
            else if ( ((LA295_0>=RULE_ID && LA295_0<=RULE_STRING)||(LA295_0>=RULE_INT && LA295_0<=RULE_BOOLEAN)||LA295_0==17||LA295_0==22||LA295_0==47||LA295_0==86||(LA295_0>=90 && LA295_0<=91)||(LA295_0>=100 && LA295_0<=103)||LA295_0==108||LA295_0==111) ) {
                alt295=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 295, 0, input);

                throw nvae;
            }
            switch (alt295) {
                case 1 :
                    // InternalScadeEquations.g:12191:3: ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) )
                    {
                    // InternalScadeEquations.g:12191:3: ( ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) ) )
                    // InternalScadeEquations.g:12192:4: ( (lv_accessType_0_0= ruleParameterAccessType ) ) ( (lv_expression_1_0= ruleValuedObjectReference ) )
                    {
                    // InternalScadeEquations.g:12192:4: ( (lv_accessType_0_0= ruleParameterAccessType ) )
                    // InternalScadeEquations.g:12193:5: (lv_accessType_0_0= ruleParameterAccessType )
                    {
                    // InternalScadeEquations.g:12193:5: (lv_accessType_0_0= ruleParameterAccessType )
                    // InternalScadeEquations.g:12194:6: lv_accessType_0_0= ruleParameterAccessType
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterAccess().getAccessTypeParameterAccessTypeEnumRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_4);
                    lv_accessType_0_0=ruleParameterAccessType();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterRule());
                      						}
                      						set(
                      							current,
                      							"accessType",
                      							lv_accessType_0_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ParameterAccessType");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:12211:4: ( (lv_expression_1_0= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:12212:5: (lv_expression_1_0= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:12212:5: (lv_expression_1_0= ruleValuedObjectReference )
                    // InternalScadeEquations.g:12213:6: lv_expression_1_0= ruleValuedObjectReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterAccess().getExpressionValuedObjectReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_1_0=ruleValuedObjectReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_1_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:12232:3: ( (lv_expression_2_0= ruleExpression ) )
                    {
                    // InternalScadeEquations.g:12232:3: ( (lv_expression_2_0= ruleExpression ) )
                    // InternalScadeEquations.g:12233:4: (lv_expression_2_0= ruleExpression )
                    {
                    // InternalScadeEquations.g:12233:4: (lv_expression_2_0= ruleExpression )
                    // InternalScadeEquations.g:12234:5: lv_expression_2_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterAccess().getExpressionExpressionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    lv_expression_2_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterRule());
                      					}
                      					set(
                      						current,
                      						"expression",
                      						lv_expression_2_0,
                      						"de.cau.cs.kieler.kexpressions.KExpressions.Expression");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameter"


    // $ANTLR start "entryRuleIntValue"
    // InternalScadeEquations.g:12255:1: entryRuleIntValue returns [EObject current=null] : iv_ruleIntValue= ruleIntValue EOF ;
    public final EObject entryRuleIntValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIntValue = null;


        try {
            // InternalScadeEquations.g:12255:49: (iv_ruleIntValue= ruleIntValue EOF )
            // InternalScadeEquations.g:12256:2: iv_ruleIntValue= ruleIntValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIntValue=ruleIntValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIntValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIntValue"


    // $ANTLR start "ruleIntValue"
    // InternalScadeEquations.g:12262:1: ruleIntValue returns [EObject current=null] : ( (lv_value_0_0= RULE_INT ) ) ;
    public final EObject ruleIntValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:12268:2: ( ( (lv_value_0_0= RULE_INT ) ) )
            // InternalScadeEquations.g:12269:2: ( (lv_value_0_0= RULE_INT ) )
            {
            // InternalScadeEquations.g:12269:2: ( (lv_value_0_0= RULE_INT ) )
            // InternalScadeEquations.g:12270:3: (lv_value_0_0= RULE_INT )
            {
            // InternalScadeEquations.g:12270:3: (lv_value_0_0= RULE_INT )
            // InternalScadeEquations.g:12271:4: lv_value_0_0= RULE_INT
            {
            lv_value_0_0=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getIntValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.INT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntValue"


    // $ANTLR start "entryRuleFloatValue"
    // InternalScadeEquations.g:12290:1: entryRuleFloatValue returns [EObject current=null] : iv_ruleFloatValue= ruleFloatValue EOF ;
    public final EObject entryRuleFloatValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFloatValue = null;


        try {
            // InternalScadeEquations.g:12290:51: (iv_ruleFloatValue= ruleFloatValue EOF )
            // InternalScadeEquations.g:12291:2: iv_ruleFloatValue= ruleFloatValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloatValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloatValue=ruleFloatValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloatValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloatValue"


    // $ANTLR start "ruleFloatValue"
    // InternalScadeEquations.g:12297:1: ruleFloatValue returns [EObject current=null] : ( (lv_value_0_0= RULE_FLOAT ) ) ;
    public final EObject ruleFloatValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:12303:2: ( ( (lv_value_0_0= RULE_FLOAT ) ) )
            // InternalScadeEquations.g:12304:2: ( (lv_value_0_0= RULE_FLOAT ) )
            {
            // InternalScadeEquations.g:12304:2: ( (lv_value_0_0= RULE_FLOAT ) )
            // InternalScadeEquations.g:12305:3: (lv_value_0_0= RULE_FLOAT )
            {
            // InternalScadeEquations.g:12305:3: (lv_value_0_0= RULE_FLOAT )
            // InternalScadeEquations.g:12306:4: lv_value_0_0= RULE_FLOAT
            {
            lv_value_0_0=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getFloatValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.FLOAT");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloatValue"


    // $ANTLR start "entryRuleBoolValue"
    // InternalScadeEquations.g:12325:1: entryRuleBoolValue returns [EObject current=null] : iv_ruleBoolValue= ruleBoolValue EOF ;
    public final EObject entryRuleBoolValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleBoolValue = null;


        try {
            // InternalScadeEquations.g:12325:50: (iv_ruleBoolValue= ruleBoolValue EOF )
            // InternalScadeEquations.g:12326:2: iv_ruleBoolValue= ruleBoolValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getBoolValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleBoolValue=ruleBoolValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleBoolValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleBoolValue"


    // $ANTLR start "ruleBoolValue"
    // InternalScadeEquations.g:12332:1: ruleBoolValue returns [EObject current=null] : ( (lv_value_0_0= RULE_BOOLEAN ) ) ;
    public final EObject ruleBoolValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:12338:2: ( ( (lv_value_0_0= RULE_BOOLEAN ) ) )
            // InternalScadeEquations.g:12339:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            {
            // InternalScadeEquations.g:12339:2: ( (lv_value_0_0= RULE_BOOLEAN ) )
            // InternalScadeEquations.g:12340:3: (lv_value_0_0= RULE_BOOLEAN )
            {
            // InternalScadeEquations.g:12340:3: (lv_value_0_0= RULE_BOOLEAN )
            // InternalScadeEquations.g:12341:4: lv_value_0_0= RULE_BOOLEAN
            {
            lv_value_0_0=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getBoolValueAccess().getValueBOOLEANTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getBoolValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.BOOLEAN");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBoolValue"


    // $ANTLR start "entryRuleStringValue"
    // InternalScadeEquations.g:12360:1: entryRuleStringValue returns [EObject current=null] : iv_ruleStringValue= ruleStringValue EOF ;
    public final EObject entryRuleStringValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringValue = null;


        try {
            // InternalScadeEquations.g:12360:52: (iv_ruleStringValue= ruleStringValue EOF )
            // InternalScadeEquations.g:12361:2: iv_ruleStringValue= ruleStringValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringValue=ruleStringValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringValue"


    // $ANTLR start "ruleStringValue"
    // InternalScadeEquations.g:12367:1: ruleStringValue returns [EObject current=null] : ( (lv_value_0_0= RULE_STRING ) ) ;
    public final EObject ruleStringValue() throws RecognitionException {
        EObject current = null;

        Token lv_value_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:12373:2: ( ( (lv_value_0_0= RULE_STRING ) ) )
            // InternalScadeEquations.g:12374:2: ( (lv_value_0_0= RULE_STRING ) )
            {
            // InternalScadeEquations.g:12374:2: ( (lv_value_0_0= RULE_STRING ) )
            // InternalScadeEquations.g:12375:3: (lv_value_0_0= RULE_STRING )
            {
            // InternalScadeEquations.g:12375:3: (lv_value_0_0= RULE_STRING )
            // InternalScadeEquations.g:12376:4: lv_value_0_0= RULE_STRING
            {
            lv_value_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_value_0_0, grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getStringValueRule());
              				}
              				setWithLastConsumed(
              					current,
              					"value",
              					lv_value_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.STRING");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringValue"


    // $ANTLR start "entryRuleVectorValue"
    // InternalScadeEquations.g:12395:1: entryRuleVectorValue returns [EObject current=null] : iv_ruleVectorValue= ruleVectorValue EOF ;
    public final EObject entryRuleVectorValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValue = null;


        try {
            // InternalScadeEquations.g:12395:52: (iv_ruleVectorValue= ruleVectorValue EOF )
            // InternalScadeEquations.g:12396:2: iv_ruleVectorValue= ruleVectorValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValue=ruleVectorValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValue"


    // $ANTLR start "ruleVectorValue"
    // InternalScadeEquations.g:12402:1: ruleVectorValue returns [EObject current=null] : (otherlv_0= '{' ( ( ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* ) | ( ( (lv_values_4_0= ruleIntValue ) ) ( (lv_range_5_0= 'to' ) ) ( ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) ) ) ) ) otherlv_7= '}' ) ;
    public final EObject ruleVectorValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token lv_range_5_0=null;
        Token otherlv_7=null;
        EObject lv_values_1_0 = null;

        EObject lv_values_3_0 = null;

        EObject lv_values_4_0 = null;

        EObject lv_values_6_1 = null;

        EObject lv_values_6_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12408:2: ( (otherlv_0= '{' ( ( ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* ) | ( ( (lv_values_4_0= ruleIntValue ) ) ( (lv_range_5_0= 'to' ) ) ( ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) ) ) ) ) otherlv_7= '}' ) )
            // InternalScadeEquations.g:12409:2: (otherlv_0= '{' ( ( ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* ) | ( ( (lv_values_4_0= ruleIntValue ) ) ( (lv_range_5_0= 'to' ) ) ( ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) ) ) ) ) otherlv_7= '}' )
            {
            // InternalScadeEquations.g:12409:2: (otherlv_0= '{' ( ( ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* ) | ( ( (lv_values_4_0= ruleIntValue ) ) ( (lv_range_5_0= 'to' ) ) ( ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) ) ) ) ) otherlv_7= '}' )
            // InternalScadeEquations.g:12410:3: otherlv_0= '{' ( ( ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* ) | ( ( (lv_values_4_0= ruleIntValue ) ) ( (lv_range_5_0= 'to' ) ) ( ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) ) ) ) ) otherlv_7= '}'
            {
            otherlv_0=(Token)match(input,22,FollowSets000.FOLLOW_137); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getVectorValueAccess().getLeftCurlyBracketKeyword_0());
              		
            }
            // InternalScadeEquations.g:12414:3: ( ( ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* ) | ( ( (lv_values_4_0= ruleIntValue ) ) ( (lv_range_5_0= 'to' ) ) ( ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) ) ) ) )
            int alt298=2;
            int LA298_0 = input.LA(1);

            if ( ((LA298_0>=RULE_ID && LA298_0<=RULE_STRING)||(LA298_0>=RULE_FLOAT && LA298_0<=RULE_BOOLEAN)||LA298_0==17||LA298_0==22||LA298_0==47||LA298_0==86||(LA298_0>=89 && LA298_0<=91)||(LA298_0>=100 && LA298_0<=103)||LA298_0==108||LA298_0==111) ) {
                alt298=1;
            }
            else if ( (LA298_0==RULE_INT) ) {
                int LA298_2 = input.LA(2);

                if ( (LA298_2==18||LA298_2==21||LA298_2==23||LA298_2==31||(LA298_2>=51 && LA298_2<=56)||(LA298_2>=59 && LA298_2<=62)||(LA298_2>=74 && LA298_2<=75)||(LA298_2>=85 && LA298_2<=86)||(LA298_2>=97 && LA298_2<=99)) ) {
                    alt298=1;
                }
                else if ( (LA298_2==88) ) {
                    alt298=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 298, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 298, 0, input);

                throw nvae;
            }
            switch (alt298) {
                case 1 :
                    // InternalScadeEquations.g:12415:4: ( ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* )
                    {
                    // InternalScadeEquations.g:12415:4: ( ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )* )
                    // InternalScadeEquations.g:12416:5: ( (lv_values_1_0= ruleVectorValueMember ) ) (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )*
                    {
                    // InternalScadeEquations.g:12416:5: ( (lv_values_1_0= ruleVectorValueMember ) )
                    // InternalScadeEquations.g:12417:6: (lv_values_1_0= ruleVectorValueMember )
                    {
                    // InternalScadeEquations.g:12417:6: (lv_values_1_0= ruleVectorValueMember )
                    // InternalScadeEquations.g:12418:7: lv_values_1_0= ruleVectorValueMember
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_values_1_0=ruleVectorValueMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVectorValueRule());
                      							}
                      							add(
                      								current,
                      								"values",
                      								lv_values_1_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:12435:5: (otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) ) )*
                    loop296:
                    do {
                        int alt296=2;
                        int LA296_0 = input.LA(1);

                        if ( (LA296_0==18) ) {
                            alt296=1;
                        }


                        switch (alt296) {
                    	case 1 :
                    	    // InternalScadeEquations.g:12436:6: otherlv_2= ',' ( (lv_values_3_0= ruleVectorValueMember ) )
                    	    {
                    	    otherlv_2=(Token)match(input,18,FollowSets000.FOLLOW_137); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_2, grammarAccess.getVectorValueAccess().getCommaKeyword_1_0_1_0());
                    	      					
                    	    }
                    	    // InternalScadeEquations.g:12440:6: ( (lv_values_3_0= ruleVectorValueMember ) )
                    	    // InternalScadeEquations.g:12441:7: (lv_values_3_0= ruleVectorValueMember )
                    	    {
                    	    // InternalScadeEquations.g:12441:7: (lv_values_3_0= ruleVectorValueMember )
                    	    // InternalScadeEquations.g:12442:8: lv_values_3_0= ruleVectorValueMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getVectorValueAccess().getValuesVectorValueMemberParserRuleCall_1_0_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_17);
                    	    lv_values_3_0=ruleVectorValueMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getVectorValueRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"values",
                    	      									lv_values_3_0,
                    	      									"de.cau.cs.kieler.kexpressions.KExpressions.VectorValueMember");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop296;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:12462:4: ( ( (lv_values_4_0= ruleIntValue ) ) ( (lv_range_5_0= 'to' ) ) ( ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) ) ) )
                    {
                    // InternalScadeEquations.g:12462:4: ( ( (lv_values_4_0= ruleIntValue ) ) ( (lv_range_5_0= 'to' ) ) ( ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) ) ) )
                    // InternalScadeEquations.g:12463:5: ( (lv_values_4_0= ruleIntValue ) ) ( (lv_range_5_0= 'to' ) ) ( ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) ) )
                    {
                    // InternalScadeEquations.g:12463:5: ( (lv_values_4_0= ruleIntValue ) )
                    // InternalScadeEquations.g:12464:6: (lv_values_4_0= ruleIntValue )
                    {
                    // InternalScadeEquations.g:12464:6: (lv_values_4_0= ruleIntValue )
                    // InternalScadeEquations.g:12465:7: lv_values_4_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getVectorValueAccess().getValuesIntValueParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FollowSets000.FOLLOW_138);
                    lv_values_4_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getVectorValueRule());
                      							}
                      							add(
                      								current,
                      								"values",
                      								lv_values_4_0,
                      								"de.cau.cs.kieler.kexpressions.KExpressions.IntValue");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:12482:5: ( (lv_range_5_0= 'to' ) )
                    // InternalScadeEquations.g:12483:6: (lv_range_5_0= 'to' )
                    {
                    // InternalScadeEquations.g:12483:6: (lv_range_5_0= 'to' )
                    // InternalScadeEquations.g:12484:7: lv_range_5_0= 'to'
                    {
                    lv_range_5_0=(Token)match(input,88,FollowSets000.FOLLOW_139); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_range_5_0, grammarAccess.getVectorValueAccess().getRangeToKeyword_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getVectorValueRule());
                      							}
                      							setWithLastConsumed(current, "range", lv_range_5_0 != null, "to");
                      						
                    }

                    }


                    }

                    // InternalScadeEquations.g:12496:5: ( ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) ) )
                    // InternalScadeEquations.g:12497:6: ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) )
                    {
                    // InternalScadeEquations.g:12497:6: ( (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference ) )
                    // InternalScadeEquations.g:12498:7: (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference )
                    {
                    // InternalScadeEquations.g:12498:7: (lv_values_6_1= ruleIntValue | lv_values_6_2= ruleValuedObjectReference )
                    int alt297=2;
                    int LA297_0 = input.LA(1);

                    if ( (LA297_0==RULE_INT) ) {
                        alt297=1;
                    }
                    else if ( (LA297_0==RULE_ID) ) {
                        alt297=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 297, 0, input);

                        throw nvae;
                    }
                    switch (alt297) {
                        case 1 :
                            // InternalScadeEquations.g:12499:8: lv_values_6_1= ruleIntValue
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getVectorValueAccess().getValuesIntValueParserRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_19);
                            lv_values_6_1=ruleIntValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getVectorValueRule());
                              								}
                              								add(
                              									current,
                              									"values",
                              									lv_values_6_1,
                              									"de.cau.cs.kieler.kexpressions.KExpressions.IntValue");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalScadeEquations.g:12515:8: lv_values_6_2= ruleValuedObjectReference
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getVectorValueAccess().getValuesValuedObjectReferenceParserRuleCall_1_1_2_0_1());
                              							
                            }
                            pushFollow(FollowSets000.FOLLOW_19);
                            lv_values_6_2=ruleValuedObjectReference();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getVectorValueRule());
                              								}
                              								add(
                              									current,
                              									"values",
                              									lv_values_6_2,
                              									"de.cau.cs.kieler.kexpressions.KExpressions.ValuedObjectReference");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }

            otherlv_7=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getVectorValueAccess().getRightCurlyBracketKeyword_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValue"


    // $ANTLR start "entryRuleVectorValueMember"
    // InternalScadeEquations.g:12543:1: entryRuleVectorValueMember returns [EObject current=null] : iv_ruleVectorValueMember= ruleVectorValueMember EOF ;
    public final EObject entryRuleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleVectorValueMember = null;


        try {
            // InternalScadeEquations.g:12543:58: (iv_ruleVectorValueMember= ruleVectorValueMember EOF )
            // InternalScadeEquations.g:12544:2: iv_ruleVectorValueMember= ruleVectorValueMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVectorValueMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleVectorValueMember=ruleVectorValueMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVectorValueMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVectorValueMember"


    // $ANTLR start "ruleVectorValueMember"
    // InternalScadeEquations.g:12550:1: ruleVectorValueMember returns [EObject current=null] : (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) ;
    public final EObject ruleVectorValueMember() throws RecognitionException {
        EObject current = null;

        EObject this_BoolExpression_0 = null;

        EObject this_ValuedExpression_1 = null;

        EObject this_IgnoreValue_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12556:2: ( (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue ) )
            // InternalScadeEquations.g:12557:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            {
            // InternalScadeEquations.g:12557:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )
            int alt299=3;
            alt299 = dfa299.predict(input);
            switch (alt299) {
                case 1 :
                    // InternalScadeEquations.g:12558:3: this_BoolExpression_0= ruleBoolExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getBoolExpressionParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolExpression_0=ruleBoolExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolExpression_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:12570:3: this_ValuedExpression_1= ruleValuedExpression
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getValuedExpressionParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ValuedExpression_1=ruleValuedExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_ValuedExpression_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:12582:3: this_IgnoreValue_2= ruleIgnoreValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getVectorValueMemberAccess().getIgnoreValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IgnoreValue_2=ruleIgnoreValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IgnoreValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVectorValueMember"


    // $ANTLR start "entryRuleIgnoreValue"
    // InternalScadeEquations.g:12597:1: entryRuleIgnoreValue returns [EObject current=null] : iv_ruleIgnoreValue= ruleIgnoreValue EOF ;
    public final EObject entryRuleIgnoreValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIgnoreValue = null;


        try {
            // InternalScadeEquations.g:12597:52: (iv_ruleIgnoreValue= ruleIgnoreValue EOF )
            // InternalScadeEquations.g:12598:2: iv_ruleIgnoreValue= ruleIgnoreValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIgnoreValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleIgnoreValue=ruleIgnoreValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIgnoreValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIgnoreValue"


    // $ANTLR start "ruleIgnoreValue"
    // InternalScadeEquations.g:12604:1: ruleIgnoreValue returns [EObject current=null] : ( () otherlv_1= '_' ) ;
    public final EObject ruleIgnoreValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:12610:2: ( ( () otherlv_1= '_' ) )
            // InternalScadeEquations.g:12611:2: ( () otherlv_1= '_' )
            {
            // InternalScadeEquations.g:12611:2: ( () otherlv_1= '_' )
            // InternalScadeEquations.g:12612:3: () otherlv_1= '_'
            {
            // InternalScadeEquations.g:12612:3: ()
            // InternalScadeEquations.g:12613:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getIgnoreValueAccess().getIgnoreValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,89,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getIgnoreValueAccess().get_Keyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIgnoreValue"


    // $ANTLR start "entryRuleAnyValue"
    // InternalScadeEquations.g:12630:1: entryRuleAnyValue returns [EObject current=null] : iv_ruleAnyValue= ruleAnyValue EOF ;
    public final EObject entryRuleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnyValue = null;


        try {
            // InternalScadeEquations.g:12630:49: (iv_ruleAnyValue= ruleAnyValue EOF )
            // InternalScadeEquations.g:12631:2: iv_ruleAnyValue= ruleAnyValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnyValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnyValue=ruleAnyValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnyValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnyValue"


    // $ANTLR start "ruleAnyValue"
    // InternalScadeEquations.g:12637:1: ruleAnyValue returns [EObject current=null] : (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) ;
    public final EObject ruleAnyValue() throws RecognitionException {
        EObject current = null;

        EObject this_IntValue_0 = null;

        EObject this_FloatValue_1 = null;

        EObject this_BoolValue_2 = null;

        EObject this_StringValue_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12643:2: ( (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue ) )
            // InternalScadeEquations.g:12644:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            {
            // InternalScadeEquations.g:12644:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_BoolValue_2= ruleBoolValue | this_StringValue_3= ruleStringValue )
            int alt300=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
                {
                alt300=1;
                }
                break;
            case RULE_FLOAT:
                {
                alt300=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt300=3;
                }
                break;
            case RULE_STRING:
                {
                alt300=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 300, 0, input);

                throw nvae;
            }

            switch (alt300) {
                case 1 :
                    // InternalScadeEquations.g:12645:3: this_IntValue_0= ruleIntValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getIntValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_IntValue_0=ruleIntValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_IntValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:12657:3: this_FloatValue_1= ruleFloatValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getFloatValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_FloatValue_1=ruleFloatValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_FloatValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:12669:3: this_BoolValue_2= ruleBoolValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getBoolValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_BoolValue_2=ruleBoolValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_BoolValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:12681:3: this_StringValue_3= ruleStringValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnyValueAccess().getStringValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringValue_3=ruleStringValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnyValue"


    // $ANTLR start "entryRuleJsonObjectValue"
    // InternalScadeEquations.g:12696:1: entryRuleJsonObjectValue returns [EObject current=null] : iv_ruleJsonObjectValue= ruleJsonObjectValue EOF ;
    public final EObject entryRuleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectValue = null;


        try {
            // InternalScadeEquations.g:12696:56: (iv_ruleJsonObjectValue= ruleJsonObjectValue EOF )
            // InternalScadeEquations.g:12697:2: iv_ruleJsonObjectValue= ruleJsonObjectValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectValue=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectValue"


    // $ANTLR start "ruleJsonObjectValue"
    // InternalScadeEquations.g:12703:1: ruleJsonObjectValue returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleJsonObjectValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_members_2_0 = null;

        EObject lv_members_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12709:2: ( ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' ) )
            // InternalScadeEquations.g:12710:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            {
            // InternalScadeEquations.g:12710:2: ( () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}' )
            // InternalScadeEquations.g:12711:3: () otherlv_1= '{' ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )? otherlv_5= '}'
            {
            // InternalScadeEquations.g:12711:3: ()
            // InternalScadeEquations.g:12712:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonObjectValueAccess().getJsonObjectValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,22,FollowSets000.FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectValueAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalScadeEquations.g:12725:3: ( ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )* )?
            int alt302=2;
            int LA302_0 = input.LA(1);

            if ( (LA302_0==RULE_STRING) ) {
                alt302=1;
            }
            switch (alt302) {
                case 1 :
                    // InternalScadeEquations.g:12726:4: ( (lv_members_2_0= ruleJsonObjectMember ) ) (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    {
                    // InternalScadeEquations.g:12726:4: ( (lv_members_2_0= ruleJsonObjectMember ) )
                    // InternalScadeEquations.g:12727:5: (lv_members_2_0= ruleJsonObjectMember )
                    {
                    // InternalScadeEquations.g:12727:5: (lv_members_2_0= ruleJsonObjectMember )
                    // InternalScadeEquations.g:12728:6: lv_members_2_0= ruleJsonObjectMember
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_17);
                    lv_members_2_0=ruleJsonObjectMember();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                      						}
                      						add(
                      							current,
                      							"members",
                      							lv_members_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:12745:4: (otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) ) )*
                    loop301:
                    do {
                        int alt301=2;
                        int LA301_0 = input.LA(1);

                        if ( (LA301_0==18) ) {
                            alt301=1;
                        }


                        switch (alt301) {
                    	case 1 :
                    	    // InternalScadeEquations.g:12746:5: otherlv_3= ',' ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_71); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonObjectValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:12750:5: ( (lv_members_4_0= ruleJsonObjectMember ) )
                    	    // InternalScadeEquations.g:12751:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    {
                    	    // InternalScadeEquations.g:12751:6: (lv_members_4_0= ruleJsonObjectMember )
                    	    // InternalScadeEquations.g:12752:7: lv_members_4_0= ruleJsonObjectMember
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonObjectValueAccess().getMembersJsonObjectMemberParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_17);
                    	    lv_members_4_0=ruleJsonObjectMember();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonObjectValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"members",
                    	      								lv_members_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectMember");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop301;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,23,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonObjectValueAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectValue"


    // $ANTLR start "entryRuleJsonObjectMember"
    // InternalScadeEquations.g:12779:1: entryRuleJsonObjectMember returns [EObject current=null] : iv_ruleJsonObjectMember= ruleJsonObjectMember EOF ;
    public final EObject entryRuleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonObjectMember = null;


        try {
            // InternalScadeEquations.g:12779:57: (iv_ruleJsonObjectMember= ruleJsonObjectMember EOF )
            // InternalScadeEquations.g:12780:2: iv_ruleJsonObjectMember= ruleJsonObjectMember EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonObjectMemberRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonObjectMember=ruleJsonObjectMember();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonObjectMember; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonObjectMember"


    // $ANTLR start "ruleJsonObjectMember"
    // InternalScadeEquations.g:12786:1: ruleJsonObjectMember returns [EObject current=null] : ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) ;
    public final EObject ruleJsonObjectMember() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12792:2: ( ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) ) )
            // InternalScadeEquations.g:12793:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            {
            // InternalScadeEquations.g:12793:2: ( ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) ) )
            // InternalScadeEquations.g:12794:3: ( (lv_key_0_0= RULE_STRING ) ) otherlv_1= ':' ( (lv_value_2_0= ruleJsonValue ) )
            {
            // InternalScadeEquations.g:12794:3: ( (lv_key_0_0= RULE_STRING ) )
            // InternalScadeEquations.g:12795:4: (lv_key_0_0= RULE_STRING )
            {
            // InternalScadeEquations.g:12795:4: (lv_key_0_0= RULE_STRING )
            // InternalScadeEquations.g:12796:5: lv_key_0_0= RULE_STRING
            {
            lv_key_0_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_key_0_0, grammarAccess.getJsonObjectMemberAccess().getKeySTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getJsonObjectMemberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"key",
              						lv_key_0_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,30,FollowSets000.FOLLOW_142); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonObjectMemberAccess().getColonKeyword_1());
              		
            }
            // InternalScadeEquations.g:12816:3: ( (lv_value_2_0= ruleJsonValue ) )
            // InternalScadeEquations.g:12817:4: (lv_value_2_0= ruleJsonValue )
            {
            // InternalScadeEquations.g:12817:4: (lv_value_2_0= ruleJsonValue )
            // InternalScadeEquations.g:12818:5: lv_value_2_0= ruleJsonValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonObjectMemberAccess().getValueJsonValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonObjectMemberRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonObjectMember"


    // $ANTLR start "entryRuleJsonArrayValue"
    // InternalScadeEquations.g:12839:1: entryRuleJsonArrayValue returns [EObject current=null] : iv_ruleJsonArrayValue= ruleJsonArrayValue EOF ;
    public final EObject entryRuleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonArrayValue = null;


        try {
            // InternalScadeEquations.g:12839:55: (iv_ruleJsonArrayValue= ruleJsonArrayValue EOF )
            // InternalScadeEquations.g:12840:2: iv_ruleJsonArrayValue= ruleJsonArrayValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonArrayValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonArrayValue=ruleJsonArrayValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonArrayValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonArrayValue"


    // $ANTLR start "ruleJsonArrayValue"
    // InternalScadeEquations.g:12846:1: ruleJsonArrayValue returns [EObject current=null] : ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) ;
    public final EObject ruleJsonArrayValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_elements_2_0 = null;

        EObject lv_elements_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12852:2: ( ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' ) )
            // InternalScadeEquations.g:12853:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            {
            // InternalScadeEquations.g:12853:2: ( () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']' )
            // InternalScadeEquations.g:12854:3: () otherlv_1= '[' ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )? otherlv_5= ']'
            {
            // InternalScadeEquations.g:12854:3: ()
            // InternalScadeEquations.g:12855:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getJsonArrayValueAccess().getJsonArrayValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,76,FollowSets000.FOLLOW_143); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getJsonArrayValueAccess().getLeftSquareBracketKeyword_1());
              		
            }
            // InternalScadeEquations.g:12868:3: ( ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )* )?
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==RULE_STRING||(LA304_0>=RULE_INT && LA304_0<=RULE_BOOLEAN)||LA304_0==22||LA304_0==76||LA304_0==90) ) {
                alt304=1;
            }
            switch (alt304) {
                case 1 :
                    // InternalScadeEquations.g:12869:4: ( (lv_elements_2_0= ruleJsonValue ) ) (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    {
                    // InternalScadeEquations.g:12869:4: ( (lv_elements_2_0= ruleJsonValue ) )
                    // InternalScadeEquations.g:12870:5: (lv_elements_2_0= ruleJsonValue )
                    {
                    // InternalScadeEquations.g:12870:5: (lv_elements_2_0= ruleJsonValue )
                    // InternalScadeEquations.g:12871:6: lv_elements_2_0= ruleJsonValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FollowSets000.FOLLOW_144);
                    lv_elements_2_0=ruleJsonValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                      						}
                      						add(
                      							current,
                      							"elements",
                      							lv_elements_2_0,
                      							"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalScadeEquations.g:12888:4: (otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) ) )*
                    loop303:
                    do {
                        int alt303=2;
                        int LA303_0 = input.LA(1);

                        if ( (LA303_0==18) ) {
                            alt303=1;
                        }


                        switch (alt303) {
                    	case 1 :
                    	    // InternalScadeEquations.g:12889:5: otherlv_3= ',' ( (lv_elements_4_0= ruleJsonValue ) )
                    	    {
                    	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_142); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getJsonArrayValueAccess().getCommaKeyword_2_1_0());
                    	      				
                    	    }
                    	    // InternalScadeEquations.g:12893:5: ( (lv_elements_4_0= ruleJsonValue ) )
                    	    // InternalScadeEquations.g:12894:6: (lv_elements_4_0= ruleJsonValue )
                    	    {
                    	    // InternalScadeEquations.g:12894:6: (lv_elements_4_0= ruleJsonValue )
                    	    // InternalScadeEquations.g:12895:7: lv_elements_4_0= ruleJsonValue
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getJsonArrayValueAccess().getElementsJsonValueParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FollowSets000.FOLLOW_144);
                    	    lv_elements_4_0=ruleJsonValue();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getJsonArrayValueRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"elements",
                    	      								lv_elements_4_0,
                    	      								"de.cau.cs.kieler.kexpressions.KExpressions.JsonValue");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop303;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,77,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getJsonArrayValueAccess().getRightSquareBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonArrayValue"


    // $ANTLR start "entryRuleJsonValue"
    // InternalScadeEquations.g:12922:1: entryRuleJsonValue returns [EObject current=null] : iv_ruleJsonValue= ruleJsonValue EOF ;
    public final EObject entryRuleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonValue = null;


        try {
            // InternalScadeEquations.g:12922:50: (iv_ruleJsonValue= ruleJsonValue EOF )
            // InternalScadeEquations.g:12923:2: iv_ruleJsonValue= ruleJsonValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonValue=ruleJsonValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonValue"


    // $ANTLR start "ruleJsonValue"
    // InternalScadeEquations.g:12929:1: ruleJsonValue returns [EObject current=null] : (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) ;
    public final EObject ruleJsonValue() throws RecognitionException {
        EObject current = null;

        EObject this_JsonObjectValue_0 = null;

        EObject this_JsonArrayValue_1 = null;

        EObject this_NullValue_2 = null;

        EObject this_AnyValue_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:12935:2: ( (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue ) )
            // InternalScadeEquations.g:12936:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            {
            // InternalScadeEquations.g:12936:2: (this_JsonObjectValue_0= ruleJsonObjectValue | this_JsonArrayValue_1= ruleJsonArrayValue | this_NullValue_2= ruleNullValue | this_AnyValue_3= ruleAnyValue )
            int alt305=4;
            switch ( input.LA(1) ) {
            case 22:
                {
                alt305=1;
                }
                break;
            case 76:
                {
                alt305=2;
                }
                break;
            case 90:
                {
                alt305=3;
                }
                break;
            case RULE_STRING:
            case RULE_INT:
            case RULE_FLOAT:
            case RULE_BOOLEAN:
                {
                alt305=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 305, 0, input);

                throw nvae;
            }

            switch (alt305) {
                case 1 :
                    // InternalScadeEquations.g:12937:3: this_JsonObjectValue_0= ruleJsonObjectValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonObjectValueParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonObjectValue_0=ruleJsonObjectValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonObjectValue_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:12949:3: this_JsonArrayValue_1= ruleJsonArrayValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getJsonArrayValueParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonArrayValue_1=ruleJsonArrayValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonArrayValue_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:12961:3: this_NullValue_2= ruleNullValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getNullValueParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_NullValue_2=ruleNullValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_NullValue_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:12973:3: this_AnyValue_3= ruleAnyValue
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getJsonValueAccess().getAnyValueParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_AnyValue_3=ruleAnyValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_AnyValue_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonValue"


    // $ANTLR start "entryRuleNullValue"
    // InternalScadeEquations.g:12988:1: entryRuleNullValue returns [EObject current=null] : iv_ruleNullValue= ruleNullValue EOF ;
    public final EObject entryRuleNullValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNullValue = null;


        try {
            // InternalScadeEquations.g:12988:50: (iv_ruleNullValue= ruleNullValue EOF )
            // InternalScadeEquations.g:12989:2: iv_ruleNullValue= ruleNullValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNullValueRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleNullValue=ruleNullValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNullValue; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNullValue"


    // $ANTLR start "ruleNullValue"
    // InternalScadeEquations.g:12995:1: ruleNullValue returns [EObject current=null] : ( () otherlv_1= 'null' ) ;
    public final EObject ruleNullValue() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13001:2: ( ( () otherlv_1= 'null' ) )
            // InternalScadeEquations.g:13002:2: ( () otherlv_1= 'null' )
            {
            // InternalScadeEquations.g:13002:2: ( () otherlv_1= 'null' )
            // InternalScadeEquations.g:13003:3: () otherlv_1= 'null'
            {
            // InternalScadeEquations.g:13003:3: ()
            // InternalScadeEquations.g:13004:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getNullValueAccess().getNullValueAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,90,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNullValueAccess().getNullKeyword_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNullValue"


    // $ANTLR start "entryRuleJsonPragma"
    // InternalScadeEquations.g:13021:1: entryRuleJsonPragma returns [EObject current=null] : iv_ruleJsonPragma= ruleJsonPragma EOF ;
    public final EObject entryRuleJsonPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonPragma = null;


        try {
            // InternalScadeEquations.g:13021:51: (iv_ruleJsonPragma= ruleJsonPragma EOF )
            // InternalScadeEquations.g:13022:2: iv_ruleJsonPragma= ruleJsonPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonPragma=ruleJsonPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonPragma"


    // $ANTLR start "ruleJsonPragma"
    // InternalScadeEquations.g:13028:1: ruleJsonPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleJsonPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13034:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalScadeEquations.g:13035:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalScadeEquations.g:13035:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalScadeEquations.g:13036:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,91,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalScadeEquations.g:13040:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:13041:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:13041:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:13042:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_16);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:13059:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalScadeEquations.g:13060:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalScadeEquations.g:13060:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalScadeEquations.g:13061:5: lv_value_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonPragmaAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonPragmaRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonPragma"


    // $ANTLR start "entryRuleJsonAnnotation"
    // InternalScadeEquations.g:13082:1: entryRuleJsonAnnotation returns [EObject current=null] : iv_ruleJsonAnnotation= ruleJsonAnnotation EOF ;
    public final EObject entryRuleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleJsonAnnotation = null;


        try {
            // InternalScadeEquations.g:13082:55: (iv_ruleJsonAnnotation= ruleJsonAnnotation EOF )
            // InternalScadeEquations.g:13083:2: iv_ruleJsonAnnotation= ruleJsonAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getJsonAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleJsonAnnotation=ruleJsonAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleJsonAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleJsonAnnotation"


    // $ANTLR start "ruleJsonAnnotation"
    // InternalScadeEquations.g:13089:1: ruleJsonAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) ;
    public final EObject ruleJsonAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13095:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) ) )
            // InternalScadeEquations.g:13096:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            {
            // InternalScadeEquations.g:13096:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) ) )
            // InternalScadeEquations.g:13097:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_value_2_0= ruleJsonObjectValue ) )
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getJsonAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:13101:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:13102:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:13102:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:13103:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_16);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:13120:3: ( (lv_value_2_0= ruleJsonObjectValue ) )
            // InternalScadeEquations.g:13121:4: (lv_value_2_0= ruleJsonObjectValue )
            {
            // InternalScadeEquations.g:13121:4: (lv_value_2_0= ruleJsonObjectValue )
            // InternalScadeEquations.g:13122:5: lv_value_2_0= ruleJsonObjectValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getJsonAnnotationAccess().getValueJsonObjectValueParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_value_2_0=ruleJsonObjectValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getJsonAnnotationRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"de.cau.cs.kieler.kexpressions.KExpressions.JsonObjectValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleJsonAnnotation"


    // $ANTLR start "entryRuleAnnotation"
    // InternalScadeEquations.g:13143:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalScadeEquations.g:13143:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalScadeEquations.g:13144:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalScadeEquations.g:13150:1: ruleAnnotation returns [EObject current=null] : (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_Annotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13156:2: ( (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalScadeEquations.g:13157:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalScadeEquations.g:13157:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt306=2;
            alt306 = dfa306.predict(input);
            switch (alt306) {
                case 1 :
                    // InternalScadeEquations.g:13158:3: this_Annotation_0= superAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Annotation_0=superAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_Annotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13170:3: this_JsonAnnotation_1= ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleQuotedStringAnnotation"
    // InternalScadeEquations.g:13185:1: entryRuleQuotedStringAnnotation returns [EObject current=null] : iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF ;
    public final EObject entryRuleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedStringAnnotation = null;


        try {
            // InternalScadeEquations.g:13185:63: (iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF )
            // InternalScadeEquations.g:13186:2: iv_ruleQuotedStringAnnotation= ruleQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedStringAnnotation=ruleQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedStringAnnotation"


    // $ANTLR start "ruleQuotedStringAnnotation"
    // InternalScadeEquations.g:13192:1: ruleQuotedStringAnnotation returns [EObject current=null] : (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) ;
    public final EObject ruleQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_QuotedStringAnnotation_0 = null;

        EObject this_JsonAnnotation_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13198:2: ( (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation ) )
            // InternalScadeEquations.g:13199:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            {
            // InternalScadeEquations.g:13199:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )
            int alt307=2;
            alt307 = dfa307.predict(input);
            switch (alt307) {
                case 1 :
                    // InternalScadeEquations.g:13200:3: this_QuotedStringAnnotation_0= superQuotedStringAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getQuotedStringAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedStringAnnotation_0=superQuotedStringAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedStringAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13212:3: this_JsonAnnotation_1= ruleJsonAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getQuotedStringAnnotationAccess().getJsonAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_JsonAnnotation_1=ruleJsonAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_JsonAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedStringAnnotation"


    // $ANTLR start "entrySuperAnnotation"
    // InternalScadeEquations.g:13227:1: entrySuperAnnotation returns [EObject current=null] : iv_superAnnotation= superAnnotation EOF ;
    public final EObject entrySuperAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superAnnotation = null;


        try {
            // InternalScadeEquations.g:13227:52: (iv_superAnnotation= superAnnotation EOF )
            // InternalScadeEquations.g:13228:2: iv_superAnnotation= superAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superAnnotation=superAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperAnnotation"


    // $ANTLR start "superAnnotation"
    // InternalScadeEquations.g:13234:1: superAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject superAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13240:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalScadeEquations.g:13241:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalScadeEquations.g:13241:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt308=4;
            alt308 = dfa308.predict(input);
            switch (alt308) {
                case 1 :
                    // InternalScadeEquations.g:13242:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13254:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:13266:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:13278:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superAnnotation"


    // $ANTLR start "entrySuperPragma"
    // InternalScadeEquations.g:13293:1: entrySuperPragma returns [EObject current=null] : iv_superPragma= superPragma EOF ;
    public final EObject entrySuperPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_superPragma = null;


        try {
            // InternalScadeEquations.g:13293:48: (iv_superPragma= superPragma EOF )
            // InternalScadeEquations.g:13294:2: iv_superPragma= superPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superPragma=superPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperPragma"


    // $ANTLR start "superPragma"
    // InternalScadeEquations.g:13300:1: superPragma returns [EObject current=null] : (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) ;
    public final EObject superPragma() throws RecognitionException {
        EObject current = null;

        EObject this_StringPragma_0 = null;

        EObject this_PragmaTag_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13306:2: ( (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag ) )
            // InternalScadeEquations.g:13307:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            {
            // InternalScadeEquations.g:13307:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )
            int alt309=2;
            alt309 = dfa309.predict(input);
            switch (alt309) {
                case 1 :
                    // InternalScadeEquations.g:13308:3: this_StringPragma_0= ruleStringPragma
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getStringPragmaParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_StringPragma_0=ruleStringPragma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_StringPragma_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13320:3: this_PragmaTag_1= rulePragmaTag
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsPragmaAccess().getPragmaTagParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_PragmaTag_1=rulePragmaTag();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_PragmaTag_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superPragma"


    // $ANTLR start "entrySuperValuedAnnotation"
    // InternalScadeEquations.g:13335:1: entrySuperValuedAnnotation returns [EObject current=null] : iv_superValuedAnnotation= superValuedAnnotation EOF ;
    public final EObject entrySuperValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superValuedAnnotation = null;


        try {
            // InternalScadeEquations.g:13335:58: (iv_superValuedAnnotation= superValuedAnnotation EOF )
            // InternalScadeEquations.g:13336:2: iv_superValuedAnnotation= superValuedAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superValuedAnnotation=superValuedAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superValuedAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperValuedAnnotation"


    // $ANTLR start "superValuedAnnotation"
    // InternalScadeEquations.g:13342:1: superValuedAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) ;
    public final EObject superValuedAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_KeyStringValueAnnotation_1 = null;

        EObject this_TypedKeyStringValueAnnotation_2 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13348:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation ) )
            // InternalScadeEquations.g:13349:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            {
            // InternalScadeEquations.g:13349:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )
            int alt310=3;
            alt310 = dfa310.predict(input);
            switch (alt310) {
                case 1 :
                    // InternalScadeEquations.g:13350:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13362:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_KeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:13374:3: this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsValuedAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TypedKeyStringValueAnnotation_2=ruleTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superValuedAnnotation"


    // $ANTLR start "entrySuperQuotedStringAnnotation"
    // InternalScadeEquations.g:13389:1: entrySuperQuotedStringAnnotation returns [EObject current=null] : iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF ;
    public final EObject entrySuperQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_superQuotedStringAnnotation = null;


        try {
            // InternalScadeEquations.g:13389:64: (iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF )
            // InternalScadeEquations.g:13390:2: iv_superQuotedStringAnnotation= superQuotedStringAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_superQuotedStringAnnotation=superQuotedStringAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_superQuotedStringAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entrySuperQuotedStringAnnotation"


    // $ANTLR start "superQuotedStringAnnotation"
    // InternalScadeEquations.g:13396:1: superQuotedStringAnnotation returns [EObject current=null] : (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) ;
    public final EObject superQuotedStringAnnotation() throws RecognitionException {
        EObject current = null;

        EObject this_CommentAnnotation_0 = null;

        EObject this_QuotedKeyStringValueAnnotation_1 = null;

        EObject this_QuotedTypedKeyStringValueAnnotation_2 = null;

        EObject this_TagAnnotation_3 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13402:2: ( (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation ) )
            // InternalScadeEquations.g:13403:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            {
            // InternalScadeEquations.g:13403:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )
            int alt311=4;
            alt311 = dfa311.predict(input);
            switch (alt311) {
                case 1 :
                    // InternalScadeEquations.g:13404:3: this_CommentAnnotation_0= ruleCommentAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getCommentAnnotationParserRuleCall_0());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_CommentAnnotation_0=ruleCommentAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_CommentAnnotation_0;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:13416:3: this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedKeyStringValueAnnotationParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedKeyStringValueAnnotation_1=ruleQuotedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedKeyStringValueAnnotation_1;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:13428:3: this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getQuotedTypedKeyStringValueAnnotationParserRuleCall_2());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_QuotedTypedKeyStringValueAnnotation_2=ruleQuotedTypedKeyStringValueAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_QuotedTypedKeyStringValueAnnotation_2;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:13440:3: this_TagAnnotation_3= ruleTagAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      			/* */
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAnnotationsQuotedStringAnnotationAccess().getTagAnnotationParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_TagAnnotation_3=ruleTagAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current = this_TagAnnotation_3;
                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "superQuotedStringAnnotation"


    // $ANTLR start "entryRuleCommentAnnotation"
    // InternalScadeEquations.g:13455:1: entryRuleCommentAnnotation returns [EObject current=null] : iv_ruleCommentAnnotation= ruleCommentAnnotation EOF ;
    public final EObject entryRuleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotation = null;


        try {
            // InternalScadeEquations.g:13455:58: (iv_ruleCommentAnnotation= ruleCommentAnnotation EOF )
            // InternalScadeEquations.g:13456:2: iv_ruleCommentAnnotation= ruleCommentAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotation=ruleCommentAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotation"


    // $ANTLR start "ruleCommentAnnotation"
    // InternalScadeEquations.g:13462:1: ruleCommentAnnotation returns [EObject current=null] : ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13468:2: ( ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) ) )
            // InternalScadeEquations.g:13469:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            {
            // InternalScadeEquations.g:13469:2: ( (lv_values_0_0= RULE_COMMENT_ANNOTATION ) )
            // InternalScadeEquations.g:13470:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            {
            // InternalScadeEquations.g:13470:3: (lv_values_0_0= RULE_COMMENT_ANNOTATION )
            // InternalScadeEquations.g:13471:4: lv_values_0_0= RULE_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotationAccess().getValuesCOMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotationRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotation"


    // $ANTLR start "entryRuleCommentAnnotatonSL"
    // InternalScadeEquations.g:13490:1: entryRuleCommentAnnotatonSL returns [EObject current=null] : iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF ;
    public final EObject entryRuleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCommentAnnotatonSL = null;


        try {
            // InternalScadeEquations.g:13490:59: (iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF )
            // InternalScadeEquations.g:13491:2: iv_ruleCommentAnnotatonSL= ruleCommentAnnotatonSL EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCommentAnnotatonSLRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleCommentAnnotatonSL=ruleCommentAnnotatonSL();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCommentAnnotatonSL; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCommentAnnotatonSL"


    // $ANTLR start "ruleCommentAnnotatonSL"
    // InternalScadeEquations.g:13497:1: ruleCommentAnnotatonSL returns [EObject current=null] : ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) ;
    public final EObject ruleCommentAnnotatonSL() throws RecognitionException {
        EObject current = null;

        Token lv_values_0_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:13503:2: ( ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) ) )
            // InternalScadeEquations.g:13504:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            {
            // InternalScadeEquations.g:13504:2: ( (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION ) )
            // InternalScadeEquations.g:13505:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            {
            // InternalScadeEquations.g:13505:3: (lv_values_0_0= RULE_SL_COMMENT_ANNOTATION )
            // InternalScadeEquations.g:13506:4: lv_values_0_0= RULE_SL_COMMENT_ANNOTATION
            {
            lv_values_0_0=(Token)match(input,RULE_SL_COMMENT_ANNOTATION,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(lv_values_0_0, grammarAccess.getCommentAnnotatonSLAccess().getValuesSL_COMMENT_ANNOTATIONTerminalRuleCall_0());
              			
            }
            if ( state.backtracking==0 ) {

              				if (current==null) {
              					current = createModelElement(grammarAccess.getCommentAnnotatonSLRule());
              				}
              				addWithLastConsumed(
              					current,
              					"values",
              					lv_values_0_0,
              					"de.cau.cs.kieler.annotations.Annotations.SL_COMMENT_ANNOTATION");
              			
            }

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCommentAnnotatonSL"


    // $ANTLR start "entryRuleTagAnnotation"
    // InternalScadeEquations.g:13525:1: entryRuleTagAnnotation returns [EObject current=null] : iv_ruleTagAnnotation= ruleTagAnnotation EOF ;
    public final EObject entryRuleTagAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTagAnnotation = null;


        try {
            // InternalScadeEquations.g:13525:54: (iv_ruleTagAnnotation= ruleTagAnnotation EOF )
            // InternalScadeEquations.g:13526:2: iv_ruleTagAnnotation= ruleTagAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTagAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTagAnnotation=ruleTagAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTagAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTagAnnotation"


    // $ANTLR start "ruleTagAnnotation"
    // InternalScadeEquations.g:13532:1: ruleTagAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject ruleTagAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13538:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalScadeEquations.g:13539:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalScadeEquations.g:13539:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalScadeEquations.g:13540:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:13544:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:13545:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:13545:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:13546:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTagAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTagAnnotation"


    // $ANTLR start "entryRulePragmaTag"
    // InternalScadeEquations.g:13567:1: entryRulePragmaTag returns [EObject current=null] : iv_rulePragmaTag= rulePragmaTag EOF ;
    public final EObject entryRulePragmaTag() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePragmaTag = null;


        try {
            // InternalScadeEquations.g:13567:50: (iv_rulePragmaTag= rulePragmaTag EOF )
            // InternalScadeEquations.g:13568:2: iv_rulePragmaTag= rulePragmaTag EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPragmaTagRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_rulePragmaTag=rulePragmaTag();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePragmaTag; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePragmaTag"


    // $ANTLR start "rulePragmaTag"
    // InternalScadeEquations.g:13574:1: rulePragmaTag returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) ;
    public final EObject rulePragmaTag() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13580:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ) )
            // InternalScadeEquations.g:13581:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            {
            // InternalScadeEquations.g:13581:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) )
            // InternalScadeEquations.g:13582:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) )
            {
            otherlv_0=(Token)match(input,91,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getPragmaTagAccess().getNumberSignKeyword_0());
              		
            }
            // InternalScadeEquations.g:13586:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:13587:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:13587:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:13588:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPragmaTagAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_2);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPragmaTagRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePragmaTag"


    // $ANTLR start "entryRuleKeyStringValueAnnotation"
    // InternalScadeEquations.g:13609:1: entryRuleKeyStringValueAnnotation returns [EObject current=null] : iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF ;
    public final EObject entryRuleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:13609:65: (iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:13610:2: iv_ruleKeyStringValueAnnotation= ruleKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleKeyStringValueAnnotation=ruleKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyStringValueAnnotation"


    // $ANTLR start "ruleKeyStringValueAnnotation"
    // InternalScadeEquations.g:13616:1: ruleKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13622:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalScadeEquations.g:13623:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalScadeEquations.g:13623:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalScadeEquations.g:13624:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:13628:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:13629:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:13629:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:13630:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_146);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:13647:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalScadeEquations.g:13648:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalScadeEquations.g:13648:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalScadeEquations.g:13649:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:13666:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop312:
            do {
                int alt312=2;
                int LA312_0 = input.LA(1);

                if ( (LA312_0==18) ) {
                    alt312=1;
                }


                switch (alt312) {
            	case 1 :
            	    // InternalScadeEquations.g:13667:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_146); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:13671:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalScadeEquations.g:13672:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalScadeEquations.g:13672:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalScadeEquations.g:13673:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop312;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedKeyStringValueAnnotation"
    // InternalScadeEquations.g:13695:1: entryRuleRestrictedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:13695:75: (iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:13696:2: iv_ruleRestrictedKeyStringValueAnnotation= ruleRestrictedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedKeyStringValueAnnotation=ruleRestrictedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedKeyStringValueAnnotation"
    // InternalScadeEquations.g:13702:1: ruleRestrictedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13708:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* ) )
            // InternalScadeEquations.g:13709:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            {
            // InternalScadeEquations.g:13709:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )* )
            // InternalScadeEquations.g:13710:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringBoolean ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:13714:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:13715:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:13715:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:13716:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_148);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:13733:3: ( (lv_values_2_0= ruleEStringBoolean ) )
            // InternalScadeEquations.g:13734:4: (lv_values_2_0= ruleEStringBoolean )
            {
            // InternalScadeEquations.g:13734:4: (lv_values_2_0= ruleEStringBoolean )
            // InternalScadeEquations.g:13735:5: lv_values_2_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_values_2_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:13752:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) ) )*
            loop313:
            do {
                int alt313=2;
                int LA313_0 = input.LA(1);

                if ( (LA313_0==18) ) {
                    alt313=1;
                }


                switch (alt313) {
            	case 1 :
            	    // InternalScadeEquations.g:13753:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_148); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:13757:4: ( (lv_values_4_0= ruleEStringBoolean ) )
            	    // InternalScadeEquations.g:13758:5: (lv_values_4_0= ruleEStringBoolean )
            	    {
            	    // InternalScadeEquations.g:13758:5: (lv_values_4_0= ruleEStringBoolean )
            	    // InternalScadeEquations.g:13759:6: lv_values_4_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_values_4_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop313;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleStringPragma"
    // InternalScadeEquations.g:13781:1: entryRuleStringPragma returns [EObject current=null] : iv_ruleStringPragma= ruleStringPragma EOF ;
    public final EObject entryRuleStringPragma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStringPragma = null;


        try {
            // InternalScadeEquations.g:13781:53: (iv_ruleStringPragma= ruleStringPragma EOF )
            // InternalScadeEquations.g:13782:2: iv_ruleStringPragma= ruleStringPragma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStringPragmaRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleStringPragma=ruleStringPragma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStringPragma; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStringPragma"


    // $ANTLR start "ruleStringPragma"
    // InternalScadeEquations.g:13788:1: ruleStringPragma returns [EObject current=null] : (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleStringPragma() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_values_2_0 = null;

        AntlrDatatypeRuleToken lv_values_4_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13794:2: ( (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* ) )
            // InternalScadeEquations.g:13795:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalScadeEquations.g:13795:2: (otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )* )
            // InternalScadeEquations.g:13796:3: otherlv_0= '#' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= ruleEStringAllTypes ) ) (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,91,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getStringPragmaAccess().getNumberSignKeyword_0());
              		
            }
            // InternalScadeEquations.g:13800:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:13801:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:13801:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:13802:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_146);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:13819:3: ( (lv_values_2_0= ruleEStringAllTypes ) )
            // InternalScadeEquations.g:13820:4: (lv_values_2_0= ruleEStringAllTypes )
            {
            // InternalScadeEquations.g:13820:4: (lv_values_2_0= ruleEStringAllTypes )
            // InternalScadeEquations.g:13821:5: lv_values_2_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_2_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_values_2_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getStringPragmaRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:13838:3: (otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) ) )*
            loop314:
            do {
                int alt314=2;
                int LA314_0 = input.LA(1);

                if ( (LA314_0==18) ) {
                    alt314=1;
                }


                switch (alt314) {
            	case 1 :
            	    // InternalScadeEquations.g:13839:4: otherlv_3= ',' ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_146); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getStringPragmaAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:13843:4: ( (lv_values_4_0= ruleEStringAllTypes ) )
            	    // InternalScadeEquations.g:13844:5: (lv_values_4_0= ruleEStringAllTypes )
            	    {
            	    // InternalScadeEquations.g:13844:5: (lv_values_4_0= ruleEStringAllTypes )
            	    // InternalScadeEquations.g:13845:6: lv_values_4_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getStringPragmaAccess().getValuesEStringAllTypesParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_values_4_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getStringPragmaRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop314;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStringPragma"


    // $ANTLR start "entryRuleTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:13867:1: entryRuleTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTypedKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:13867:70: (iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:13868:2: iv_ruleTypedKeyStringValueAnnotation= ruleTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleTypedKeyStringValueAnnotation=ruleTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:13874:1: ruleTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) ;
    public final EObject ruleTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13880:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* ) )
            // InternalScadeEquations.g:13881:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            {
            // InternalScadeEquations.g:13881:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )* )
            // InternalScadeEquations.g:13882:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringAllTypes ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:13886:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:13887:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:13887:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:13888:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_103);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,76,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalScadeEquations.g:13909:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalScadeEquations.g:13910:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:13910:4: (lv_type_3_0= ruleExtendedID )
            // InternalScadeEquations.g:13911:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,77,FollowSets000.FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalScadeEquations.g:13932:3: ( (lv_values_5_0= ruleEStringAllTypes ) )
            // InternalScadeEquations.g:13933:4: (lv_values_5_0= ruleEStringAllTypes )
            {
            // InternalScadeEquations.g:13933:4: (lv_values_5_0= ruleEStringAllTypes )
            // InternalScadeEquations.g:13934:5: lv_values_5_0= ruleEStringAllTypes
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_values_5_0=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:13951:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) ) )*
            loop315:
            do {
                int alt315=2;
                int LA315_0 = input.LA(1);

                if ( (LA315_0==18) ) {
                    alt315=1;
                }


                switch (alt315) {
            	case 1 :
            	    // InternalScadeEquations.g:13952:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    {
            	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_146); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:13956:4: ( (lv_values_7_0= ruleEStringAllTypes ) )
            	    // InternalScadeEquations.g:13957:5: (lv_values_7_0= ruleEStringAllTypes )
            	    {
            	    // InternalScadeEquations.g:13957:5: (lv_values_7_0= ruleEStringAllTypes )
            	    // InternalScadeEquations.g:13958:6: lv_values_7_0= ruleEStringAllTypes
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValuesEStringAllTypesParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_values_7_0=ruleEStringAllTypes();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringAllTypes");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop315;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleRestrictedTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:13980:1: entryRuleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictedTypedKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:13980:80: (iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:13981:2: iv_ruleRestrictedTypedKeyStringValueAnnotation= ruleRestrictedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleRestrictedTypedKeyStringValueAnnotation=ruleRestrictedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleRestrictedTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:13987:1: ruleRestrictedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) ;
    public final EObject ruleRestrictedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;

        AntlrDatatypeRuleToken lv_values_5_0 = null;

        AntlrDatatypeRuleToken lv_values_7_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:13993:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* ) )
            // InternalScadeEquations.g:13994:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            {
            // InternalScadeEquations.g:13994:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )* )
            // InternalScadeEquations.g:13995:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= ruleEStringBoolean ) ) (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:13999:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:14000:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:14000:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:14001:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_103);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,76,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalScadeEquations.g:14022:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalScadeEquations.g:14023:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:14023:4: (lv_type_3_0= ruleExtendedID )
            // InternalScadeEquations.g:14024:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,77,FollowSets000.FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalScadeEquations.g:14045:3: ( (lv_values_5_0= ruleEStringBoolean ) )
            // InternalScadeEquations.g:14046:4: (lv_values_5_0= ruleEStringBoolean )
            {
            // InternalScadeEquations.g:14046:4: (lv_values_5_0= ruleEStringBoolean )
            // InternalScadeEquations.g:14047:5: lv_values_5_0= ruleEStringBoolean
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_5_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_147);
            lv_values_5_0=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
              					}
              					add(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:14064:3: (otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) ) )*
            loop316:
            do {
                int alt316=2;
                int LA316_0 = input.LA(1);

                if ( (LA316_0==18) ) {
                    alt316=1;
                }


                switch (alt316) {
            	case 1 :
            	    // InternalScadeEquations.g:14065:4: otherlv_6= ',' ( (lv_values_7_0= ruleEStringBoolean ) )
            	    {
            	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_148); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:14069:4: ( (lv_values_7_0= ruleEStringBoolean ) )
            	    // InternalScadeEquations.g:14070:5: (lv_values_7_0= ruleEStringBoolean )
            	    {
            	    // InternalScadeEquations.g:14070:5: (lv_values_7_0= ruleEStringBoolean )
            	    // InternalScadeEquations.g:14071:6: lv_values_7_0= ruleEStringBoolean
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getRestrictedTypedKeyStringValueAnnotationAccess().getValuesEStringBooleanParserRuleCall_6_1_0());
            	      					
            	    }
            	    pushFollow(FollowSets000.FOLLOW_147);
            	    lv_values_7_0=ruleEStringBoolean();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getRestrictedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.EStringBoolean");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop316;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedKeyStringValueAnnotation"
    // InternalScadeEquations.g:14093:1: entryRuleQuotedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:14093:71: (iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:14094:2: iv_ruleQuotedKeyStringValueAnnotation= ruleQuotedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedKeyStringValueAnnotation=ruleQuotedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedKeyStringValueAnnotation"
    // InternalScadeEquations.g:14100:1: ruleQuotedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_values_2_0=null;
        Token otherlv_3=null;
        Token lv_values_4_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:14106:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* ) )
            // InternalScadeEquations.g:14107:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            {
            // InternalScadeEquations.g:14107:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )* )
            // InternalScadeEquations.g:14108:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) ( (lv_values_2_0= RULE_STRING ) ) (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:14112:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:14113:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:14113:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:14114:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_71);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalScadeEquations.g:14131:3: ( (lv_values_2_0= RULE_STRING ) )
            // InternalScadeEquations.g:14132:4: (lv_values_2_0= RULE_STRING )
            {
            // InternalScadeEquations.g:14132:4: (lv_values_2_0= RULE_STRING )
            // InternalScadeEquations.g:14133:5: lv_values_2_0= RULE_STRING
            {
            lv_values_2_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_147); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_2_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_2_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_2_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalScadeEquations.g:14149:3: (otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) ) )*
            loop317:
            do {
                int alt317=2;
                int LA317_0 = input.LA(1);

                if ( (LA317_0==18) ) {
                    alt317=1;
                }


                switch (alt317) {
            	case 1 :
            	    // InternalScadeEquations.g:14150:4: otherlv_3= ',' ( (lv_values_4_0= RULE_STRING ) )
            	    {
            	    otherlv_3=(Token)match(input,18,FollowSets000.FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:14154:4: ( (lv_values_4_0= RULE_STRING ) )
            	    // InternalScadeEquations.g:14155:5: (lv_values_4_0= RULE_STRING )
            	    {
            	    // InternalScadeEquations.g:14155:5: (lv_values_4_0= RULE_STRING )
            	    // InternalScadeEquations.g:14156:6: lv_values_4_0= RULE_STRING
            	    {
            	    lv_values_4_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_147); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_4_0, grammarAccess.getQuotedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_3_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_4_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop317;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleQuotedTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:14177:1: entryRuleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF ;
    public final EObject entryRuleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuotedTypedKeyStringValueAnnotation = null;


        try {
            // InternalScadeEquations.g:14177:76: (iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF )
            // InternalScadeEquations.g:14178:2: iv_ruleQuotedTypedKeyStringValueAnnotation= ruleQuotedTypedKeyStringValueAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleQuotedTypedKeyStringValueAnnotation=ruleQuotedTypedKeyStringValueAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuotedTypedKeyStringValueAnnotation; 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "ruleQuotedTypedKeyStringValueAnnotation"
    // InternalScadeEquations.g:14184:1: ruleQuotedTypedKeyStringValueAnnotation returns [EObject current=null] : (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) ;
    public final EObject ruleQuotedTypedKeyStringValueAnnotation() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_values_5_0=null;
        Token otherlv_6=null;
        Token lv_values_7_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_3_0 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:14190:2: ( (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* ) )
            // InternalScadeEquations.g:14191:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            {
            // InternalScadeEquations.g:14191:2: (otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )* )
            // InternalScadeEquations.g:14192:3: otherlv_0= '@' ( (lv_name_1_0= ruleExtendedID ) ) otherlv_2= '[' ( (lv_type_3_0= ruleExtendedID ) ) otherlv_4= ']' ( (lv_values_5_0= RULE_STRING ) ) (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            {
            otherlv_0=(Token)match(input,92,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0());
              		
            }
            // InternalScadeEquations.g:14196:3: ( (lv_name_1_0= ruleExtendedID ) )
            // InternalScadeEquations.g:14197:4: (lv_name_1_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:14197:4: (lv_name_1_0= ruleExtendedID )
            // InternalScadeEquations.g:14198:5: lv_name_1_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_103);
            lv_name_1_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_1_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_2=(Token)match(input,76,FollowSets000.FOLLOW_145); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2());
              		
            }
            // InternalScadeEquations.g:14219:3: ( (lv_type_3_0= ruleExtendedID ) )
            // InternalScadeEquations.g:14220:4: (lv_type_3_0= ruleExtendedID )
            {
            // InternalScadeEquations.g:14220:4: (lv_type_3_0= ruleExtendedID )
            // InternalScadeEquations.g:14221:5: lv_type_3_0= ruleExtendedID
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0());
              				
            }
            pushFollow(FollowSets000.FOLLOW_104);
            lv_type_3_0=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					set(
              						current,
              						"type",
              						lv_type_3_0,
              						"de.cau.cs.kieler.annotations.Annotations.ExtendedID");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_4=(Token)match(input,77,FollowSets000.FOLLOW_71); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4());
              		
            }
            // InternalScadeEquations.g:14242:3: ( (lv_values_5_0= RULE_STRING ) )
            // InternalScadeEquations.g:14243:4: (lv_values_5_0= RULE_STRING )
            {
            // InternalScadeEquations.g:14243:4: (lv_values_5_0= RULE_STRING )
            // InternalScadeEquations.g:14244:5: lv_values_5_0= RULE_STRING
            {
            lv_values_5_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_147); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_values_5_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
              					}
              					addWithLastConsumed(
              						current,
              						"values",
              						lv_values_5_0,
              						"de.cau.cs.kieler.annotations.Annotations.STRING");
              				
            }

            }


            }

            // InternalScadeEquations.g:14260:3: (otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) ) )*
            loop318:
            do {
                int alt318=2;
                int LA318_0 = input.LA(1);

                if ( (LA318_0==18) ) {
                    alt318=1;
                }


                switch (alt318) {
            	case 1 :
            	    // InternalScadeEquations.g:14261:4: otherlv_6= ',' ( (lv_values_7_0= RULE_STRING ) )
            	    {
            	    otherlv_6=(Token)match(input,18,FollowSets000.FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_6, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getCommaKeyword_6_0());
            	      			
            	    }
            	    // InternalScadeEquations.g:14265:4: ( (lv_values_7_0= RULE_STRING ) )
            	    // InternalScadeEquations.g:14266:5: (lv_values_7_0= RULE_STRING )
            	    {
            	    // InternalScadeEquations.g:14266:5: (lv_values_7_0= RULE_STRING )
            	    // InternalScadeEquations.g:14267:6: lv_values_7_0= RULE_STRING
            	    {
            	    lv_values_7_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_147); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_values_7_0, grammarAccess.getQuotedTypedKeyStringValueAnnotationAccess().getValuesSTRINGTerminalRuleCall_6_1_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getQuotedTypedKeyStringValueAnnotationRule());
            	      						}
            	      						addWithLastConsumed(
            	      							current,
            	      							"values",
            	      							lv_values_7_0,
            	      							"de.cau.cs.kieler.annotations.Annotations.STRING");
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop318;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuotedTypedKeyStringValueAnnotation"


    // $ANTLR start "entryRuleEString"
    // InternalScadeEquations.g:14288:1: entryRuleEString returns [String current=null] : iv_ruleEString= ruleEString EOF ;
    public final String entryRuleEString() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEString = null;


        try {
            // InternalScadeEquations.g:14288:47: (iv_ruleEString= ruleEString EOF )
            // InternalScadeEquations.g:14289:2: iv_ruleEString= ruleEString EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEString=ruleEString();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEString.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEString"


    // $ANTLR start "ruleEString"
    // InternalScadeEquations.g:14295:1: ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) ;
    public final AntlrDatatypeRuleToken ruleEString() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:14301:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID ) )
            // InternalScadeEquations.g:14302:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            {
            // InternalScadeEquations.g:14302:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID )
            int alt319=2;
            int LA319_0 = input.LA(1);

            if ( (LA319_0==RULE_STRING) ) {
                alt319=1;
            }
            else if ( (LA319_0==RULE_ID) ) {
                alt319=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 319, 0, input);

                throw nvae;
            }
            switch (alt319) {
                case 1 :
                    // InternalScadeEquations.g:14303:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:14311:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEString"


    // $ANTLR start "entryRuleEStringBoolean"
    // InternalScadeEquations.g:14325:1: entryRuleEStringBoolean returns [String current=null] : iv_ruleEStringBoolean= ruleEStringBoolean EOF ;
    public final String entryRuleEStringBoolean() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringBoolean = null;


        try {
            // InternalScadeEquations.g:14325:54: (iv_ruleEStringBoolean= ruleEStringBoolean EOF )
            // InternalScadeEquations.g:14326:2: iv_ruleEStringBoolean= ruleEStringBoolean EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringBooleanRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringBoolean=ruleEStringBoolean();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringBoolean.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringBoolean"


    // $ANTLR start "ruleEStringBoolean"
    // InternalScadeEquations.g:14332:1: ruleEStringBoolean returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) ;
    public final AntlrDatatypeRuleToken ruleEStringBoolean() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:14338:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN ) )
            // InternalScadeEquations.g:14339:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            {
            // InternalScadeEquations.g:14339:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN )
            int alt320=3;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt320=1;
                }
                break;
            case RULE_ID:
                {
                alt320=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt320=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 320, 0, input);

                throw nvae;
            }

            switch (alt320) {
                case 1 :
                    // InternalScadeEquations.g:14340:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringBooleanAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:14348:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringBooleanAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:14359:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringBooleanAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringBoolean"


    // $ANTLR start "entryRuleEStringAllTypes"
    // InternalScadeEquations.g:14370:1: entryRuleEStringAllTypes returns [String current=null] : iv_ruleEStringAllTypes= ruleEStringAllTypes EOF ;
    public final String entryRuleEStringAllTypes() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEStringAllTypes = null;


        try {
            // InternalScadeEquations.g:14370:55: (iv_ruleEStringAllTypes= ruleEStringAllTypes EOF )
            // InternalScadeEquations.g:14371:2: iv_ruleEStringAllTypes= ruleEStringAllTypes EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEStringAllTypesRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleEStringAllTypes=ruleEStringAllTypes();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEStringAllTypes.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEStringAllTypes"


    // $ANTLR start "ruleEStringAllTypes"
    // InternalScadeEquations.g:14377:1: ruleEStringAllTypes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) ;
    public final AntlrDatatypeRuleToken ruleEStringAllTypes() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_STRING_0=null;
        Token this_BOOLEAN_2=null;
        AntlrDatatypeRuleToken this_ExtendedID_1 = null;

        AntlrDatatypeRuleToken this_Integer_3 = null;

        AntlrDatatypeRuleToken this_Floateger_4 = null;



        	enterRule();

        try {
            // InternalScadeEquations.g:14383:2: ( (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger ) )
            // InternalScadeEquations.g:14384:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            {
            // InternalScadeEquations.g:14384:2: (this_STRING_0= RULE_STRING | this_ExtendedID_1= ruleExtendedID | this_BOOLEAN_2= RULE_BOOLEAN | this_Integer_3= ruleInteger | this_Floateger_4= ruleFloateger )
            int alt321=5;
            switch ( input.LA(1) ) {
            case RULE_STRING:
                {
                alt321=1;
                }
                break;
            case RULE_ID:
                {
                alt321=2;
                }
                break;
            case RULE_BOOLEAN:
                {
                alt321=3;
                }
                break;
            case 86:
                {
                int LA321_4 = input.LA(2);

                if ( (LA321_4==RULE_FLOAT) ) {
                    alt321=5;
                }
                else if ( (LA321_4==RULE_INT) ) {
                    alt321=4;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 321, 4, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                alt321=4;
                }
                break;
            case RULE_FLOAT:
                {
                alt321=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 321, 0, input);

                throw nvae;
            }

            switch (alt321) {
                case 1 :
                    // InternalScadeEquations.g:14385:3: this_STRING_0= RULE_STRING
                    {
                    this_STRING_0=(Token)match(input,RULE_STRING,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_STRING_0);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_STRING_0, grammarAccess.getEStringAllTypesAccess().getSTRINGTerminalRuleCall_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:14393:3: this_ExtendedID_1= ruleExtendedID
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getExtendedIDParserRuleCall_1());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_ExtendedID_1=ruleExtendedID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_ExtendedID_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:14404:3: this_BOOLEAN_2= RULE_BOOLEAN
                    {
                    this_BOOLEAN_2=(Token)match(input,RULE_BOOLEAN,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_BOOLEAN_2);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			newLeafNode(this_BOOLEAN_2, grammarAccess.getEStringAllTypesAccess().getBOOLEANTerminalRuleCall_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:14412:3: this_Integer_3= ruleInteger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getIntegerParserRuleCall_3());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Integer_3=ruleInteger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Integer_3);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:14423:3: this_Floateger_4= ruleFloateger
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getEStringAllTypesAccess().getFloategerParserRuleCall_4());
                      		
                    }
                    pushFollow(FollowSets000.FOLLOW_2);
                    this_Floateger_4=ruleFloateger();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_Floateger_4);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEStringAllTypes"


    // $ANTLR start "entryRuleExtendedID"
    // InternalScadeEquations.g:14437:1: entryRuleExtendedID returns [String current=null] : iv_ruleExtendedID= ruleExtendedID EOF ;
    public final String entryRuleExtendedID() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleExtendedID = null;


        try {
            // InternalScadeEquations.g:14437:50: (iv_ruleExtendedID= ruleExtendedID EOF )
            // InternalScadeEquations.g:14438:2: iv_ruleExtendedID= ruleExtendedID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExtendedIDRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleExtendedID=ruleExtendedID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExtendedID.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExtendedID"


    // $ANTLR start "ruleExtendedID"
    // InternalScadeEquations.g:14444:1: ruleExtendedID returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) ;
    public final AntlrDatatypeRuleToken ruleExtendedID() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_ID_0=null;
        Token kw=null;
        Token this_ID_3=null;
        Token this_INT_5=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14450:2: ( (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? ) )
            // InternalScadeEquations.g:14451:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            {
            // InternalScadeEquations.g:14451:2: (this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )? )
            // InternalScadeEquations.g:14452:3: this_ID_0= RULE_ID ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )* (kw= '#' this_INT_5= RULE_INT )?
            {
            this_ID_0=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_ID_0, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0());
              		
            }
            // InternalScadeEquations.g:14459:3: ( (kw= '.' | kw= '-' ) this_ID_3= RULE_ID )*
            loop323:
            do {
                int alt323=2;
                int LA323_0 = input.LA(1);

                if ( (LA323_0==86) ) {
                    int LA323_2 = input.LA(2);

                    if ( (LA323_2==RULE_ID) ) {
                        alt323=1;
                    }


                }
                else if ( (LA323_0==37) ) {
                    alt323=1;
                }


                switch (alt323) {
            	case 1 :
            	    // InternalScadeEquations.g:14460:4: (kw= '.' | kw= '-' ) this_ID_3= RULE_ID
            	    {
            	    // InternalScadeEquations.g:14460:4: (kw= '.' | kw= '-' )
            	    int alt322=2;
            	    int LA322_0 = input.LA(1);

            	    if ( (LA322_0==37) ) {
            	        alt322=1;
            	    }
            	    else if ( (LA322_0==86) ) {
            	        alt322=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 322, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt322) {
            	        case 1 :
            	            // InternalScadeEquations.g:14461:5: kw= '.'
            	            {
            	            kw=(Token)match(input,37,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalScadeEquations.g:14467:5: kw= '-'
            	            {
            	            kw=(Token)match(input,86,FollowSets000.FOLLOW_4); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getExtendedIDAccess().getHyphenMinusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_ID_3=(Token)match(input,RULE_ID,FollowSets000.FOLLOW_149); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_ID_3);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_ID_3, grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop323;
                }
            } while (true);

            // InternalScadeEquations.g:14481:3: (kw= '#' this_INT_5= RULE_INT )?
            int alt324=2;
            int LA324_0 = input.LA(1);

            if ( (LA324_0==91) ) {
                alt324=1;
            }
            switch (alt324) {
                case 1 :
                    // InternalScadeEquations.g:14482:4: kw= '#' this_INT_5= RULE_INT
                    {
                    kw=(Token)match(input,91,FollowSets000.FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getExtendedIDAccess().getNumberSignKeyword_2_0());
                      			
                    }
                    this_INT_5=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_5, grammarAccess.getExtendedIDAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExtendedID"


    // $ANTLR start "entryRuleInteger"
    // InternalScadeEquations.g:14499:1: entryRuleInteger returns [String current=null] : iv_ruleInteger= ruleInteger EOF ;
    public final String entryRuleInteger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleInteger = null;


        try {
            // InternalScadeEquations.g:14499:47: (iv_ruleInteger= ruleInteger EOF )
            // InternalScadeEquations.g:14500:2: iv_ruleInteger= ruleInteger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIntegerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleInteger=ruleInteger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleInteger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleInteger"


    // $ANTLR start "ruleInteger"
    // InternalScadeEquations.g:14506:1: ruleInteger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_INT_1= RULE_INT ) ;
    public final AntlrDatatypeRuleToken ruleInteger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14512:2: ( ( (kw= '-' )? this_INT_1= RULE_INT ) )
            // InternalScadeEquations.g:14513:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            {
            // InternalScadeEquations.g:14513:2: ( (kw= '-' )? this_INT_1= RULE_INT )
            // InternalScadeEquations.g:14514:3: (kw= '-' )? this_INT_1= RULE_INT
            {
            // InternalScadeEquations.g:14514:3: (kw= '-' )?
            int alt325=2;
            int LA325_0 = input.LA(1);

            if ( (LA325_0==86) ) {
                alt325=1;
            }
            switch (alt325) {
                case 1 :
                    // InternalScadeEquations.g:14515:4: kw= '-'
                    {
                    kw=(Token)match(input,86,FollowSets000.FOLLOW_136); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getIntegerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_INT_1=(Token)match(input,RULE_INT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_1, grammarAccess.getIntegerAccess().getINTTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInteger"


    // $ANTLR start "entryRuleFloateger"
    // InternalScadeEquations.g:14532:1: entryRuleFloateger returns [String current=null] : iv_ruleFloateger= ruleFloateger EOF ;
    public final String entryRuleFloateger() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleFloateger = null;


        try {
            // InternalScadeEquations.g:14532:49: (iv_ruleFloateger= ruleFloateger EOF )
            // InternalScadeEquations.g:14533:2: iv_ruleFloateger= ruleFloateger EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFloategerRule()); 
            }
            pushFollow(FollowSets000.FOLLOW_1);
            iv_ruleFloateger=ruleFloateger();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFloateger.getText(); 
            }
            match(input,EOF,FollowSets000.FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFloateger"


    // $ANTLR start "ruleFloateger"
    // InternalScadeEquations.g:14539:1: ruleFloateger returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) ;
    public final AntlrDatatypeRuleToken ruleFloateger() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_FLOAT_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14545:2: ( ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT ) )
            // InternalScadeEquations.g:14546:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            {
            // InternalScadeEquations.g:14546:2: ( (kw= '-' )? this_FLOAT_1= RULE_FLOAT )
            // InternalScadeEquations.g:14547:3: (kw= '-' )? this_FLOAT_1= RULE_FLOAT
            {
            // InternalScadeEquations.g:14547:3: (kw= '-' )?
            int alt326=2;
            int LA326_0 = input.LA(1);

            if ( (LA326_0==86) ) {
                alt326=1;
            }
            switch (alt326) {
                case 1 :
                    // InternalScadeEquations.g:14548:4: kw= '-'
                    {
                    kw=(Token)match(input,86,FollowSets000.FOLLOW_150); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getFloategerAccess().getHyphenMinusKeyword_0());
                      			
                    }

                    }
                    break;

            }

            this_FLOAT_1=(Token)match(input,RULE_FLOAT,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_FLOAT_1);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_FLOAT_1, grammarAccess.getFloategerAccess().getFLOATTerminalRuleCall_1());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFloateger"


    // $ANTLR start "ruleValueType"
    // InternalScadeEquations.g:14565:1: ruleValueType returns [Enumerator current=null] : ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) ) ;
    public final Enumerator ruleValueType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14571:2: ( ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) ) )
            // InternalScadeEquations.g:14572:2: ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) )
            {
            // InternalScadeEquations.g:14572:2: ( (enumLiteral_0= 'bool' ) | (enumLiteral_1= 'int' ) | (enumLiteral_2= 'real' ) )
            int alt327=3;
            switch ( input.LA(1) ) {
            case 93:
                {
                alt327=1;
                }
                break;
            case 94:
                {
                alt327=2;
                }
                break;
            case 95:
                {
                alt327=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 327, 0, input);

                throw nvae;
            }

            switch (alt327) {
                case 1 :
                    // InternalScadeEquations.g:14573:3: (enumLiteral_0= 'bool' )
                    {
                    // InternalScadeEquations.g:14573:3: (enumLiteral_0= 'bool' )
                    // InternalScadeEquations.g:14574:4: enumLiteral_0= 'bool'
                    {
                    enumLiteral_0=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:14581:3: (enumLiteral_1= 'int' )
                    {
                    // InternalScadeEquations.g:14581:3: (enumLiteral_1= 'int' )
                    // InternalScadeEquations.g:14582:4: enumLiteral_1= 'int'
                    {
                    enumLiteral_1=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:14589:3: (enumLiteral_2= 'real' )
                    {
                    // InternalScadeEquations.g:14589:3: (enumLiteral_2= 'real' )
                    // InternalScadeEquations.g:14590:4: enumLiteral_2= 'real'
                    {
                    enumLiteral_2=(Token)match(input,95,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueType"


    // $ANTLR start "ruleEnumType"
    // InternalScadeEquations.g:14600:1: ruleEnumType returns [Enumerator current=null] : (enumLiteral_0= 'enum' ) ;
    public final Enumerator ruleEnumType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14606:2: ( (enumLiteral_0= 'enum' ) )
            // InternalScadeEquations.g:14607:2: (enumLiteral_0= 'enum' )
            {
            // InternalScadeEquations.g:14607:2: (enumLiteral_0= 'enum' )
            // InternalScadeEquations.g:14608:3: enumLiteral_0= 'enum'
            {
            enumLiteral_0=(Token)match(input,96,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getEnumTypeAccess().getENUMEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getEnumTypeAccess().getENUMEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEnumType"


    // $ANTLR start "ruleAssignOperator"
    // InternalScadeEquations.g:14617:1: ruleAssignOperator returns [Enumerator current=null] : (enumLiteral_0= '=' ) ;
    public final Enumerator ruleAssignOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14623:2: ( (enumLiteral_0= '=' ) )
            // InternalScadeEquations.g:14624:2: (enumLiteral_0= '=' )
            {
            // InternalScadeEquations.g:14624:2: (enumLiteral_0= '=' )
            // InternalScadeEquations.g:14625:3: enumLiteral_0= '='
            {
            enumLiteral_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAssignOperatorAccess().getASSIGNEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAssignOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalScadeEquations.g:14634:1: ruleCompareOperator returns [Enumerator current=null] : ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) ) ;
    public final Enumerator ruleCompareOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14640:2: ( ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) ) )
            // InternalScadeEquations.g:14641:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) )
            {
            // InternalScadeEquations.g:14641:2: ( (enumLiteral_0= '=' ) | (enumLiteral_1= '<' ) | (enumLiteral_2= '<=' ) | (enumLiteral_3= '>' ) | (enumLiteral_4= '>=' ) | (enumLiteral_5= '<>' ) )
            int alt328=6;
            switch ( input.LA(1) ) {
            case 21:
                {
                alt328=1;
                }
                break;
            case 74:
                {
                alt328=2;
                }
                break;
            case 97:
                {
                alt328=3;
                }
                break;
            case 75:
                {
                alt328=4;
                }
                break;
            case 98:
                {
                alt328=5;
                }
                break;
            case 99:
                {
                alt328=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 328, 0, input);

                throw nvae;
            }

            switch (alt328) {
                case 1 :
                    // InternalScadeEquations.g:14642:3: (enumLiteral_0= '=' )
                    {
                    // InternalScadeEquations.g:14642:3: (enumLiteral_0= '=' )
                    // InternalScadeEquations.g:14643:4: enumLiteral_0= '='
                    {
                    enumLiteral_0=(Token)match(input,21,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:14650:3: (enumLiteral_1= '<' )
                    {
                    // InternalScadeEquations.g:14650:3: (enumLiteral_1= '<' )
                    // InternalScadeEquations.g:14651:4: enumLiteral_1= '<'
                    {
                    enumLiteral_1=(Token)match(input,74,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:14658:3: (enumLiteral_2= '<=' )
                    {
                    // InternalScadeEquations.g:14658:3: (enumLiteral_2= '<=' )
                    // InternalScadeEquations.g:14659:4: enumLiteral_2= '<='
                    {
                    enumLiteral_2=(Token)match(input,97,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:14666:3: (enumLiteral_3= '>' )
                    {
                    // InternalScadeEquations.g:14666:3: (enumLiteral_3= '>' )
                    // InternalScadeEquations.g:14667:4: enumLiteral_3= '>'
                    {
                    enumLiteral_3=(Token)match(input,75,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:14674:3: (enumLiteral_4= '>=' )
                    {
                    // InternalScadeEquations.g:14674:3: (enumLiteral_4= '>=' )
                    // InternalScadeEquations.g:14675:4: enumLiteral_4= '>='
                    {
                    enumLiteral_4=(Token)match(input,98,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalScadeEquations.g:14682:3: (enumLiteral_5= '<>' )
                    {
                    // InternalScadeEquations.g:14682:3: (enumLiteral_5= '<>' )
                    // InternalScadeEquations.g:14683:4: enumLiteral_5= '<>'
                    {
                    enumLiteral_5=(Token)match(input,99,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleLogicalOrOperator"
    // InternalScadeEquations.g:14693:1: ruleLogicalOrOperator returns [Enumerator current=null] : (enumLiteral_0= 'or' ) ;
    public final Enumerator ruleLogicalOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14699:2: ( (enumLiteral_0= 'or' ) )
            // InternalScadeEquations.g:14700:2: (enumLiteral_0= 'or' )
            {
            // InternalScadeEquations.g:14700:2: (enumLiteral_0= 'or' )
            // InternalScadeEquations.g:14701:3: enumLiteral_0= 'or'
            {
            enumLiteral_0=(Token)match(input,61,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalOrOperatorAccess().getLOGICAL_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalOrOperator"


    // $ANTLR start "ruleLogicalAndOperator"
    // InternalScadeEquations.g:14710:1: ruleLogicalAndOperator returns [Enumerator current=null] : (enumLiteral_0= 'and' ) ;
    public final Enumerator ruleLogicalAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14716:2: ( (enumLiteral_0= 'and' ) )
            // InternalScadeEquations.g:14717:2: (enumLiteral_0= 'and' )
            {
            // InternalScadeEquations.g:14717:2: (enumLiteral_0= 'and' )
            // InternalScadeEquations.g:14718:3: enumLiteral_0= 'and'
            {
            enumLiteral_0=(Token)match(input,62,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalAndOperatorAccess().getLOGICAL_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalAndOperator"


    // $ANTLR start "ruleNotOperator"
    // InternalScadeEquations.g:14727:1: ruleNotOperator returns [Enumerator current=null] : (enumLiteral_0= 'not' ) ;
    public final Enumerator ruleNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14733:2: ( (enumLiteral_0= 'not' ) )
            // InternalScadeEquations.g:14734:2: (enumLiteral_0= 'not' )
            {
            // InternalScadeEquations.g:14734:2: (enumLiteral_0= 'not' )
            // InternalScadeEquations.g:14735:3: enumLiteral_0= 'not'
            {
            enumLiteral_0=(Token)match(input,100,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNotOperator"


    // $ANTLR start "ruleFbyOperator"
    // InternalScadeEquations.g:14744:1: ruleFbyOperator returns [Enumerator current=null] : (enumLiteral_0= 'fby' ) ;
    public final Enumerator ruleFbyOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14750:2: ( (enumLiteral_0= 'fby' ) )
            // InternalScadeEquations.g:14751:2: (enumLiteral_0= 'fby' )
            {
            // InternalScadeEquations.g:14751:2: (enumLiteral_0= 'fby' )
            // InternalScadeEquations.g:14752:3: enumLiteral_0= 'fby'
            {
            enumLiteral_0=(Token)match(input,55,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getFbyOperatorAccess().getFBYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFbyOperator"


    // $ANTLR start "ruleModOperator"
    // InternalScadeEquations.g:14761:1: ruleModOperator returns [Enumerator current=null] : (enumLiteral_0= 'mod' ) ;
    public final Enumerator ruleModOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14767:2: ( (enumLiteral_0= 'mod' ) )
            // InternalScadeEquations.g:14768:2: (enumLiteral_0= 'mod' )
            {
            // InternalScadeEquations.g:14768:2: (enumLiteral_0= 'mod' )
            // InternalScadeEquations.g:14769:3: enumLiteral_0= 'mod'
            {
            enumLiteral_0=(Token)match(input,53,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModOperator"


    // $ANTLR start "ruleCurrentOperator"
    // InternalScadeEquations.g:14778:1: ruleCurrentOperator returns [Enumerator current=null] : (enumLiteral_0= 'current' ) ;
    public final Enumerator ruleCurrentOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14784:2: ( (enumLiteral_0= 'current' ) )
            // InternalScadeEquations.g:14785:2: (enumLiteral_0= 'current' )
            {
            // InternalScadeEquations.g:14785:2: (enumLiteral_0= 'current' )
            // InternalScadeEquations.g:14786:3: enumLiteral_0= 'current'
            {
            enumLiteral_0=(Token)match(input,101,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getCurrentOperatorAccess().getCURRENTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getCurrentOperatorAccess().getCURRENTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrentOperator"


    // $ANTLR start "ruleWhenOperator"
    // InternalScadeEquations.g:14795:1: ruleWhenOperator returns [Enumerator current=null] : (enumLiteral_0= 'when' ) ;
    public final Enumerator ruleWhenOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14801:2: ( (enumLiteral_0= 'when' ) )
            // InternalScadeEquations.g:14802:2: (enumLiteral_0= 'when' )
            {
            // InternalScadeEquations.g:14802:2: (enumLiteral_0= 'when' )
            // InternalScadeEquations.g:14803:3: enumLiteral_0= 'when'
            {
            enumLiteral_0=(Token)match(input,31,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getWhenOperatorAccess().getWHENEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getWhenOperatorAccess().getWHENEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWhenOperator"


    // $ANTLR start "ruleInitOperator"
    // InternalScadeEquations.g:14812:1: ruleInitOperator returns [Enumerator current=null] : (enumLiteral_0= '->' ) ;
    public final Enumerator ruleInitOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14818:2: ( (enumLiteral_0= '->' ) )
            // InternalScadeEquations.g:14819:2: (enumLiteral_0= '->' )
            {
            // InternalScadeEquations.g:14819:2: (enumLiteral_0= '->' )
            // InternalScadeEquations.g:14820:3: enumLiteral_0= '->'
            {
            enumLiteral_0=(Token)match(input,56,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getInitOperatorAccess().getINITEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleInitOperator"


    // $ANTLR start "ruleLogicalXorOperator"
    // InternalScadeEquations.g:14829:1: ruleLogicalXorOperator returns [Enumerator current=null] : (enumLiteral_0= 'xor' ) ;
    public final Enumerator ruleLogicalXorOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14835:2: ( (enumLiteral_0= 'xor' ) )
            // InternalScadeEquations.g:14836:2: (enumLiteral_0= 'xor' )
            {
            // InternalScadeEquations.g:14836:2: (enumLiteral_0= 'xor' )
            // InternalScadeEquations.g:14837:3: enumLiteral_0= 'xor'
            {
            enumLiteral_0=(Token)match(input,60,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLogicalXorOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLogicalXorOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLogicalXorOperator"


    // $ANTLR start "ruleImpliesOperator"
    // InternalScadeEquations.g:14846:1: ruleImpliesOperator returns [Enumerator current=null] : (enumLiteral_0= '=>' ) ;
    public final Enumerator ruleImpliesOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14852:2: ( (enumLiteral_0= '=>' ) )
            // InternalScadeEquations.g:14853:2: (enumLiteral_0= '=>' )
            {
            // InternalScadeEquations.g:14853:2: (enumLiteral_0= '=>' )
            // InternalScadeEquations.g:14854:3: enumLiteral_0= '=>'
            {
            enumLiteral_0=(Token)match(input,59,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getImpliesOperatorAccess().getIMPLIESEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getImpliesOperatorAccess().getIMPLIESEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImpliesOperator"


    // $ANTLR start "ruleIntDivOperator"
    // InternalScadeEquations.g:14863:1: ruleIntDivOperator returns [Enumerator current=null] : (enumLiteral_0= 'div' ) ;
    public final Enumerator ruleIntDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14869:2: ( (enumLiteral_0= 'div' ) )
            // InternalScadeEquations.g:14870:2: (enumLiteral_0= 'div' )
            {
            // InternalScadeEquations.g:14870:2: (enumLiteral_0= 'div' )
            // InternalScadeEquations.g:14871:3: enumLiteral_0= 'div'
            {
            enumLiteral_0=(Token)match(input,54,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getIntDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getIntDivOperatorAccess().getDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIntDivOperator"


    // $ANTLR start "ruleConditionalOperator"
    // InternalScadeEquations.g:14880:1: ruleConditionalOperator returns [Enumerator current=null] : (enumLiteral_0= 'if' ) ;
    public final Enumerator ruleConditionalOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14886:2: ( (enumLiteral_0= 'if' ) )
            // InternalScadeEquations.g:14887:2: (enumLiteral_0= 'if' )
            {
            // InternalScadeEquations.g:14887:2: (enumLiteral_0= 'if' )
            // InternalScadeEquations.g:14888:3: enumLiteral_0= 'if'
            {
            enumLiteral_0=(Token)match(input,47,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getConditionalOperatorAccess().getCONDITIONALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConditionalOperator"


    // $ANTLR start "ruleAtMostOneOperator"
    // InternalScadeEquations.g:14897:1: ruleAtMostOneOperator returns [Enumerator current=null] : (enumLiteral_0= '#' ) ;
    public final Enumerator ruleAtMostOneOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14903:2: ( (enumLiteral_0= '#' ) )
            // InternalScadeEquations.g:14904:2: (enumLiteral_0= '#' )
            {
            // InternalScadeEquations.g:14904:2: (enumLiteral_0= '#' )
            // InternalScadeEquations.g:14905:3: enumLiteral_0= '#'
            {
            enumLiteral_0=(Token)match(input,91,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAtMostOneOperatorAccess().getATMOSTONEOFEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAtMostOneOperatorAccess().getATMOSTONEOFEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAtMostOneOperator"


    // $ANTLR start "ruleNorOperator"
    // InternalScadeEquations.g:14914:1: ruleNorOperator returns [Enumerator current=null] : (enumLiteral_0= 'nor' ) ;
    public final Enumerator ruleNorOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14920:2: ( (enumLiteral_0= 'nor' ) )
            // InternalScadeEquations.g:14921:2: (enumLiteral_0= 'nor' )
            {
            // InternalScadeEquations.g:14921:2: (enumLiteral_0= 'nor' )
            // InternalScadeEquations.g:14922:3: enumLiteral_0= 'nor'
            {
            enumLiteral_0=(Token)match(input,102,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getNorOperatorAccess().getNOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getNorOperatorAccess().getNOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNorOperator"


    // $ANTLR start "ruleLastOperator"
    // InternalScadeEquations.g:14931:1: ruleLastOperator returns [Enumerator current=null] : (enumLiteral_0= 'last' ) ;
    public final Enumerator ruleLastOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14937:2: ( (enumLiteral_0= 'last' ) )
            // InternalScadeEquations.g:14938:2: (enumLiteral_0= 'last' )
            {
            // InternalScadeEquations.g:14938:2: (enumLiteral_0= 'last' )
            // InternalScadeEquations.g:14939:3: enumLiteral_0= 'last'
            {
            enumLiteral_0=(Token)match(input,103,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getLastOperatorAccess().getLASTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getLastOperatorAccess().getLASTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLastOperator"


    // $ANTLR start "rulePriorityProtocol"
    // InternalScadeEquations.g:14948:1: rulePriorityProtocol returns [Enumerator current=null] : ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) ;
    public final Enumerator rulePriorityProtocol() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14954:2: ( ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) ) )
            // InternalScadeEquations.g:14955:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            {
            // InternalScadeEquations.g:14955:2: ( (enumLiteral_0= 'conflicting' ) | (enumLiteral_1= 'commuting' ) )
            int alt329=2;
            int LA329_0 = input.LA(1);

            if ( (LA329_0==104) ) {
                alt329=1;
            }
            else if ( (LA329_0==105) ) {
                alt329=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 329, 0, input);

                throw nvae;
            }
            switch (alt329) {
                case 1 :
                    // InternalScadeEquations.g:14956:3: (enumLiteral_0= 'conflicting' )
                    {
                    // InternalScadeEquations.g:14956:3: (enumLiteral_0= 'conflicting' )
                    // InternalScadeEquations.g:14957:4: enumLiteral_0= 'conflicting'
                    {
                    enumLiteral_0=(Token)match(input,104,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPriorityProtocolAccess().getCONFLICTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:14964:3: (enumLiteral_1= 'commuting' )
                    {
                    // InternalScadeEquations.g:14964:3: (enumLiteral_1= 'commuting' )
                    // InternalScadeEquations.g:14965:4: enumLiteral_1= 'commuting'
                    {
                    enumLiteral_1=(Token)match(input,105,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPriorityProtocolAccess().getCONFLUENTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePriorityProtocol"


    // $ANTLR start "rulePostfixOperator"
    // InternalScadeEquations.g:14975:1: rulePostfixOperator returns [Enumerator current=null] : ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) ;
    public final Enumerator rulePostfixOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:14981:2: ( ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) ) )
            // InternalScadeEquations.g:14982:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            {
            // InternalScadeEquations.g:14982:2: ( (enumLiteral_0= '++' ) | (enumLiteral_1= '--' ) )
            int alt330=2;
            int LA330_0 = input.LA(1);

            if ( (LA330_0==106) ) {
                alt330=1;
            }
            else if ( (LA330_0==107) ) {
                alt330=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 330, 0, input);

                throw nvae;
            }
            switch (alt330) {
                case 1 :
                    // InternalScadeEquations.g:14983:3: (enumLiteral_0= '++' )
                    {
                    // InternalScadeEquations.g:14983:3: (enumLiteral_0= '++' )
                    // InternalScadeEquations.g:14984:4: enumLiteral_0= '++'
                    {
                    enumLiteral_0=(Token)match(input,106,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getPostfixOperatorAccess().getPOSTFIXADDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:14991:3: (enumLiteral_1= '--' )
                    {
                    // InternalScadeEquations.g:14991:3: (enumLiteral_1= '--' )
                    // InternalScadeEquations.g:14992:4: enumLiteral_1= '--'
                    {
                    enumLiteral_1=(Token)match(input,107,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getPostfixOperatorAccess().getPOSTFIXSUBEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePostfixOperator"


    // $ANTLR start "rulePreOperator"
    // InternalScadeEquations.g:15002:1: rulePreOperator returns [Enumerator current=null] : (enumLiteral_0= 'pre' ) ;
    public final Enumerator rulePreOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15008:2: ( (enumLiteral_0= 'pre' ) )
            // InternalScadeEquations.g:15009:2: (enumLiteral_0= 'pre' )
            {
            // InternalScadeEquations.g:15009:2: (enumLiteral_0= 'pre' )
            // InternalScadeEquations.g:15010:3: enumLiteral_0= 'pre'
            {
            enumLiteral_0=(Token)match(input,108,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePreOperator"


    // $ANTLR start "ruleBitwiseNotOperator"
    // InternalScadeEquations.g:15019:1: ruleBitwiseNotOperator returns [Enumerator current=null] : (enumLiteral_0= '~' ) ;
    public final Enumerator ruleBitwiseNotOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15025:2: ( (enumLiteral_0= '~' ) )
            // InternalScadeEquations.g:15026:2: (enumLiteral_0= '~' )
            {
            // InternalScadeEquations.g:15026:2: (enumLiteral_0= '~' )
            // InternalScadeEquations.g:15027:3: enumLiteral_0= '~'
            {
            enumLiteral_0=(Token)match(input,109,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseNotOperatorAccess().getBITWISE_NOTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseNotOperator"


    // $ANTLR start "ruleBitwiseXOrOperator"
    // InternalScadeEquations.g:15036:1: ruleBitwiseXOrOperator returns [Enumerator current=null] : (enumLiteral_0= '^' ) ;
    public final Enumerator ruleBitwiseXOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15042:2: ( (enumLiteral_0= '^' ) )
            // InternalScadeEquations.g:15043:2: (enumLiteral_0= '^' )
            {
            // InternalScadeEquations.g:15043:2: (enumLiteral_0= '^' )
            // InternalScadeEquations.g:15044:3: enumLiteral_0= '^'
            {
            enumLiteral_0=(Token)match(input,32,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseXOrOperatorAccess().getBITWISE_XOREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseXOrOperator"


    // $ANTLR start "ruleBitwiseOrOperator"
    // InternalScadeEquations.g:15053:1: ruleBitwiseOrOperator returns [Enumerator current=null] : (enumLiteral_0= '|' ) ;
    public final Enumerator ruleBitwiseOrOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15059:2: ( (enumLiteral_0= '|' ) )
            // InternalScadeEquations.g:15060:2: (enumLiteral_0= '|' )
            {
            // InternalScadeEquations.g:15060:2: (enumLiteral_0= '|' )
            // InternalScadeEquations.g:15061:3: enumLiteral_0= '|'
            {
            enumLiteral_0=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseOrOperatorAccess().getBITWISE_OREnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseOrOperator"


    // $ANTLR start "ruleBitwiseAndOperator"
    // InternalScadeEquations.g:15070:1: ruleBitwiseAndOperator returns [Enumerator current=null] : (enumLiteral_0= '&' ) ;
    public final Enumerator ruleBitwiseAndOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15076:2: ( (enumLiteral_0= '&' ) )
            // InternalScadeEquations.g:15077:2: (enumLiteral_0= '&' )
            {
            // InternalScadeEquations.g:15077:2: (enumLiteral_0= '&' )
            // InternalScadeEquations.g:15078:3: enumLiteral_0= '&'
            {
            enumLiteral_0=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getBitwiseAndOperatorAccess().getBITWISE_ANDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleBitwiseAndOperator"


    // $ANTLR start "ruleAddOperator"
    // InternalScadeEquations.g:15087:1: ruleAddOperator returns [Enumerator current=null] : (enumLiteral_0= '+' ) ;
    public final Enumerator ruleAddOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15093:2: ( (enumLiteral_0= '+' ) )
            // InternalScadeEquations.g:15094:2: (enumLiteral_0= '+' )
            {
            // InternalScadeEquations.g:15094:2: (enumLiteral_0= '+' )
            // InternalScadeEquations.g:15095:3: enumLiteral_0= '+'
            {
            enumLiteral_0=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAddOperator"


    // $ANTLR start "ruleSubOperator"
    // InternalScadeEquations.g:15104:1: ruleSubOperator returns [Enumerator current=null] : (enumLiteral_0= '-' ) ;
    public final Enumerator ruleSubOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15110:2: ( (enumLiteral_0= '-' ) )
            // InternalScadeEquations.g:15111:2: (enumLiteral_0= '-' )
            {
            // InternalScadeEquations.g:15111:2: (enumLiteral_0= '-' )
            // InternalScadeEquations.g:15112:3: enumLiteral_0= '-'
            {
            enumLiteral_0=(Token)match(input,86,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSubOperator"


    // $ANTLR start "ruleMultOperator"
    // InternalScadeEquations.g:15121:1: ruleMultOperator returns [Enumerator current=null] : (enumLiteral_0= '*' ) ;
    public final Enumerator ruleMultOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15127:2: ( (enumLiteral_0= '*' ) )
            // InternalScadeEquations.g:15128:2: (enumLiteral_0= '*' )
            {
            // InternalScadeEquations.g:15128:2: (enumLiteral_0= '*' )
            // InternalScadeEquations.g:15129:3: enumLiteral_0= '*'
            {
            enumLiteral_0=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMultOperator"


    // $ANTLR start "ruleDivOperator"
    // InternalScadeEquations.g:15138:1: ruleDivOperator returns [Enumerator current=null] : (enumLiteral_0= '/' ) ;
    public final Enumerator ruleDivOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15144:2: ( (enumLiteral_0= '/' ) )
            // InternalScadeEquations.g:15145:2: (enumLiteral_0= '/' )
            {
            // InternalScadeEquations.g:15145:2: (enumLiteral_0= '/' )
            // InternalScadeEquations.g:15146:3: enumLiteral_0= '/'
            {
            enumLiteral_0=(Token)match(input,52,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDivOperator"


    // $ANTLR start "ruleValOperator"
    // InternalScadeEquations.g:15155:1: ruleValOperator returns [Enumerator current=null] : (enumLiteral_0= 'val' ) ;
    public final Enumerator ruleValOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15161:2: ( (enumLiteral_0= 'val' ) )
            // InternalScadeEquations.g:15162:2: (enumLiteral_0= 'val' )
            {
            // InternalScadeEquations.g:15162:2: (enumLiteral_0= 'val' )
            // InternalScadeEquations.g:15163:3: enumLiteral_0= 'val'
            {
            enumLiteral_0=(Token)match(input,111,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValOperator"


    // $ANTLR start "ruleShiftLeftOperator"
    // InternalScadeEquations.g:15172:1: ruleShiftLeftOperator returns [Enumerator current=null] : (enumLiteral_0= '<<' ) ;
    public final Enumerator ruleShiftLeftOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15178:2: ( (enumLiteral_0= '<<' ) )
            // InternalScadeEquations.g:15179:2: (enumLiteral_0= '<<' )
            {
            // InternalScadeEquations.g:15179:2: (enumLiteral_0= '<<' )
            // InternalScadeEquations.g:15180:3: enumLiteral_0= '<<'
            {
            enumLiteral_0=(Token)match(input,112,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftLeftOperatorAccess().getSHIFT_LEFTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftLeftOperator"


    // $ANTLR start "ruleShiftRightOperator"
    // InternalScadeEquations.g:15189:1: ruleShiftRightOperator returns [Enumerator current=null] : (enumLiteral_0= '>>' ) ;
    public final Enumerator ruleShiftRightOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15195:2: ( (enumLiteral_0= '>>' ) )
            // InternalScadeEquations.g:15196:2: (enumLiteral_0= '>>' )
            {
            // InternalScadeEquations.g:15196:2: (enumLiteral_0= '>>' )
            // InternalScadeEquations.g:15197:3: enumLiteral_0= '>>'
            {
            enumLiteral_0=(Token)match(input,83,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightOperatorAccess().getSHIFT_RIGHTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightOperator"


    // $ANTLR start "ruleShiftRightUnsignedOperator"
    // InternalScadeEquations.g:15206:1: ruleShiftRightUnsignedOperator returns [Enumerator current=null] : (enumLiteral_0= '>>>' ) ;
    public final Enumerator ruleShiftRightUnsignedOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15212:2: ( (enumLiteral_0= '>>>' ) )
            // InternalScadeEquations.g:15213:2: (enumLiteral_0= '>>>' )
            {
            // InternalScadeEquations.g:15213:2: (enumLiteral_0= '>>>' )
            // InternalScadeEquations.g:15214:3: enumLiteral_0= '>>>'
            {
            enumLiteral_0=(Token)match(input,84,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getShiftRightUnsignedOperatorAccess().getSHIFT_RIGHT_UNSIGNEDEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleShiftRightUnsignedOperator"


    // $ANTLR start "ruleSfbyOperator"
    // InternalScadeEquations.g:15223:1: ruleSfbyOperator returns [Enumerator current=null] : (enumLiteral_0= 'sfby' ) ;
    public final Enumerator ruleSfbyOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15229:2: ( (enumLiteral_0= 'sfby' ) )
            // InternalScadeEquations.g:15230:2: (enumLiteral_0= 'sfby' )
            {
            // InternalScadeEquations.g:15230:2: (enumLiteral_0= 'sfby' )
            // InternalScadeEquations.g:15231:3: enumLiteral_0= 'sfby'
            {
            enumLiteral_0=(Token)match(input,113,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getSfbyOperatorAccess().getSFBYEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getSfbyOperatorAccess().getSFBYEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSfbyOperator"


    // $ANTLR start "ruleHostType"
    // InternalScadeEquations.g:15240:1: ruleHostType returns [Enumerator current=null] : (enumLiteral_0= 'host' ) ;
    public final Enumerator ruleHostType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15246:2: ( (enumLiteral_0= 'host' ) )
            // InternalScadeEquations.g:15247:2: (enumLiteral_0= 'host' )
            {
            // InternalScadeEquations.g:15247:2: (enumLiteral_0= 'host' )
            // InternalScadeEquations.g:15248:3: enumLiteral_0= 'host'
            {
            enumLiteral_0=(Token)match(input,71,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getHostTypeAccess().getHOSTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHostType"


    // $ANTLR start "ruleStructType"
    // InternalScadeEquations.g:15257:1: ruleStructType returns [Enumerator current=null] : (enumLiteral_0= 'struct' ) ;
    public final Enumerator ruleStructType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15263:2: ( (enumLiteral_0= 'struct' ) )
            // InternalScadeEquations.g:15264:2: (enumLiteral_0= 'struct' )
            {
            // InternalScadeEquations.g:15264:2: (enumLiteral_0= 'struct' )
            // InternalScadeEquations.g:15265:3: enumLiteral_0= 'struct'
            {
            enumLiteral_0=(Token)match(input,114,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getStructTypeAccess().getSTRUCTEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStructType"


    // $ANTLR start "ruleClassType"
    // InternalScadeEquations.g:15274:1: ruleClassType returns [Enumerator current=null] : (enumLiteral_0= 'class' ) ;
    public final Enumerator ruleClassType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15280:2: ( (enumLiteral_0= 'class' ) )
            // InternalScadeEquations.g:15281:2: (enumLiteral_0= 'class' )
            {
            // InternalScadeEquations.g:15281:2: (enumLiteral_0= 'class' )
            // InternalScadeEquations.g:15282:3: enumLiteral_0= 'class'
            {
            enumLiteral_0=(Token)match(input,115,FollowSets000.FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration().getEnumLiteral().getInstance();
              			newLeafNode(enumLiteral_0, grammarAccess.getClassTypeAccess().getCLASSEnumLiteralDeclaration());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassType"


    // $ANTLR start "ruleCombineOperator"
    // InternalScadeEquations.g:15291:1: ruleCombineOperator returns [Enumerator current=null] : ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) ;
    public final Enumerator ruleCombineOperator() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15297:2: ( ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) ) )
            // InternalScadeEquations.g:15298:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            {
            // InternalScadeEquations.g:15298:2: ( (enumLiteral_0= 'none' ) | (enumLiteral_1= '+' ) | (enumLiteral_2= '*' ) | (enumLiteral_3= 'max' ) | (enumLiteral_4= 'min' ) | (enumLiteral_5= '|' ) | (enumLiteral_6= '&' ) | (enumLiteral_7= 'host' ) )
            int alt331=8;
            switch ( input.LA(1) ) {
            case 116:
                {
                alt331=1;
                }
                break;
            case 85:
                {
                alt331=2;
                }
                break;
            case 51:
                {
                alt331=3;
                }
                break;
            case 117:
                {
                alt331=4;
                }
                break;
            case 118:
                {
                alt331=5;
                }
                break;
            case 110:
                {
                alt331=6;
                }
                break;
            case 82:
                {
                alt331=7;
                }
                break;
            case 71:
                {
                alt331=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 331, 0, input);

                throw nvae;
            }

            switch (alt331) {
                case 1 :
                    // InternalScadeEquations.g:15299:3: (enumLiteral_0= 'none' )
                    {
                    // InternalScadeEquations.g:15299:3: (enumLiteral_0= 'none' )
                    // InternalScadeEquations.g:15300:4: enumLiteral_0= 'none'
                    {
                    enumLiteral_0=(Token)match(input,116,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:15307:3: (enumLiteral_1= '+' )
                    {
                    // InternalScadeEquations.g:15307:3: (enumLiteral_1= '+' )
                    // InternalScadeEquations.g:15308:4: enumLiteral_1= '+'
                    {
                    enumLiteral_1=(Token)match(input,85,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:15315:3: (enumLiteral_2= '*' )
                    {
                    // InternalScadeEquations.g:15315:3: (enumLiteral_2= '*' )
                    // InternalScadeEquations.g:15316:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,51,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:15323:3: (enumLiteral_3= 'max' )
                    {
                    // InternalScadeEquations.g:15323:3: (enumLiteral_3= 'max' )
                    // InternalScadeEquations.g:15324:4: enumLiteral_3= 'max'
                    {
                    enumLiteral_3=(Token)match(input,117,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:15331:3: (enumLiteral_4= 'min' )
                    {
                    // InternalScadeEquations.g:15331:3: (enumLiteral_4= 'min' )
                    // InternalScadeEquations.g:15332:4: enumLiteral_4= 'min'
                    {
                    enumLiteral_4=(Token)match(input,118,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalScadeEquations.g:15339:3: (enumLiteral_5= '|' )
                    {
                    // InternalScadeEquations.g:15339:3: (enumLiteral_5= '|' )
                    // InternalScadeEquations.g:15340:4: enumLiteral_5= '|'
                    {
                    enumLiteral_5=(Token)match(input,110,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalScadeEquations.g:15347:3: (enumLiteral_6= '&' )
                    {
                    // InternalScadeEquations.g:15347:3: (enumLiteral_6= '&' )
                    // InternalScadeEquations.g:15348:4: enumLiteral_6= '&'
                    {
                    enumLiteral_6=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalScadeEquations.g:15355:3: (enumLiteral_7= 'host' )
                    {
                    // InternalScadeEquations.g:15355:3: (enumLiteral_7= 'host' )
                    // InternalScadeEquations.g:15356:4: enumLiteral_7= 'host'
                    {
                    enumLiteral_7=(Token)match(input,71,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCombineOperator"


    // $ANTLR start "ruleAccessModifier"
    // InternalScadeEquations.g:15366:1: ruleAccessModifier returns [Enumerator current=null] : ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) ;
    public final Enumerator ruleAccessModifier() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15372:2: ( ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) ) )
            // InternalScadeEquations.g:15373:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            {
            // InternalScadeEquations.g:15373:2: ( (enumLiteral_0= 'public' ) | (enumLiteral_1= 'protected' ) | (enumLiteral_2= 'private' ) )
            int alt332=3;
            switch ( input.LA(1) ) {
            case 119:
                {
                alt332=1;
                }
                break;
            case 120:
                {
                alt332=2;
                }
                break;
            case 121:
                {
                alt332=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 332, 0, input);

                throw nvae;
            }

            switch (alt332) {
                case 1 :
                    // InternalScadeEquations.g:15374:3: (enumLiteral_0= 'public' )
                    {
                    // InternalScadeEquations.g:15374:3: (enumLiteral_0= 'public' )
                    // InternalScadeEquations.g:15375:4: enumLiteral_0= 'public'
                    {
                    enumLiteral_0=(Token)match(input,119,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getAccessModifierAccess().getPUBLICEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:15382:3: (enumLiteral_1= 'protected' )
                    {
                    // InternalScadeEquations.g:15382:3: (enumLiteral_1= 'protected' )
                    // InternalScadeEquations.g:15383:4: enumLiteral_1= 'protected'
                    {
                    enumLiteral_1=(Token)match(input,120,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getAccessModifierAccess().getPROTECTEDEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:15390:3: (enumLiteral_2= 'private' )
                    {
                    // InternalScadeEquations.g:15390:3: (enumLiteral_2= 'private' )
                    // InternalScadeEquations.g:15391:4: enumLiteral_2= 'private'
                    {
                    enumLiteral_2=(Token)match(input,121,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getAccessModifierAccess().getPRIVATEEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAccessModifier"


    // $ANTLR start "ruleMethodReturnType"
    // InternalScadeEquations.g:15401:1: ruleMethodReturnType returns [Enumerator current=null] : ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) ;
    public final Enumerator ruleMethodReturnType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15407:2: ( ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) ) )
            // InternalScadeEquations.g:15408:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            {
            // InternalScadeEquations.g:15408:2: ( (enumLiteral_0= 'void' ) | (enumLiteral_1= 'bool' ) | (enumLiteral_2= 'int' ) | (enumLiteral_3= 'float' ) | (enumLiteral_4= 'string' ) )
            int alt333=5;
            switch ( input.LA(1) ) {
            case 122:
                {
                alt333=1;
                }
                break;
            case 93:
                {
                alt333=2;
                }
                break;
            case 94:
                {
                alt333=3;
                }
                break;
            case 123:
                {
                alt333=4;
                }
                break;
            case 124:
                {
                alt333=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 333, 0, input);

                throw nvae;
            }

            switch (alt333) {
                case 1 :
                    // InternalScadeEquations.g:15409:3: (enumLiteral_0= 'void' )
                    {
                    // InternalScadeEquations.g:15409:3: (enumLiteral_0= 'void' )
                    // InternalScadeEquations.g:15410:4: enumLiteral_0= 'void'
                    {
                    enumLiteral_0=(Token)match(input,122,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getMethodReturnTypeAccess().getVOIDEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:15417:3: (enumLiteral_1= 'bool' )
                    {
                    // InternalScadeEquations.g:15417:3: (enumLiteral_1= 'bool' )
                    // InternalScadeEquations.g:15418:4: enumLiteral_1= 'bool'
                    {
                    enumLiteral_1=(Token)match(input,93,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getMethodReturnTypeAccess().getBOOLEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalScadeEquations.g:15425:3: (enumLiteral_2= 'int' )
                    {
                    // InternalScadeEquations.g:15425:3: (enumLiteral_2= 'int' )
                    // InternalScadeEquations.g:15426:4: enumLiteral_2= 'int'
                    {
                    enumLiteral_2=(Token)match(input,94,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getMethodReturnTypeAccess().getINTEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalScadeEquations.g:15433:3: (enumLiteral_3= 'float' )
                    {
                    // InternalScadeEquations.g:15433:3: (enumLiteral_3= 'float' )
                    // InternalScadeEquations.g:15434:4: enumLiteral_3= 'float'
                    {
                    enumLiteral_3=(Token)match(input,123,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getMethodReturnTypeAccess().getFLOATEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalScadeEquations.g:15441:3: (enumLiteral_4= 'string' )
                    {
                    // InternalScadeEquations.g:15441:3: (enumLiteral_4= 'string' )
                    // InternalScadeEquations.g:15442:4: enumLiteral_4= 'string'
                    {
                    enumLiteral_4=(Token)match(input,124,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getMethodReturnTypeAccess().getSTRINGEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMethodReturnType"


    // $ANTLR start "ruleParameterAccessType"
    // InternalScadeEquations.g:15452:1: ruleParameterAccessType returns [Enumerator current=null] : ( (enumLiteral_0= '&' ) | (enumLiteral_1= '!&' ) ) ;
    public final Enumerator ruleParameterAccessType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;


        	enterRule();

        try {
            // InternalScadeEquations.g:15458:2: ( ( (enumLiteral_0= '&' ) | (enumLiteral_1= '!&' ) ) )
            // InternalScadeEquations.g:15459:2: ( (enumLiteral_0= '&' ) | (enumLiteral_1= '!&' ) )
            {
            // InternalScadeEquations.g:15459:2: ( (enumLiteral_0= '&' ) | (enumLiteral_1= '!&' ) )
            int alt334=2;
            int LA334_0 = input.LA(1);

            if ( (LA334_0==82) ) {
                alt334=1;
            }
            else if ( (LA334_0==125) ) {
                alt334=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 334, 0, input);

                throw nvae;
            }
            switch (alt334) {
                case 1 :
                    // InternalScadeEquations.g:15460:3: (enumLiteral_0= '&' )
                    {
                    // InternalScadeEquations.g:15460:3: (enumLiteral_0= '&' )
                    // InternalScadeEquations.g:15461:4: enumLiteral_0= '&'
                    {
                    enumLiteral_0=(Token)match(input,82,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getParameterAccessTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getParameterAccessTypeAccess().getCALL_BY_REFERENCEEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalScadeEquations.g:15468:3: (enumLiteral_1= '!&' )
                    {
                    // InternalScadeEquations.g:15468:3: (enumLiteral_1= '!&' )
                    // InternalScadeEquations.g:15469:4: enumLiteral_1= '!&'
                    {
                    enumLiteral_1=(Token)match(input,125,FollowSets000.FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getParameterAccessTypeAccess().getPURE_OUTPUTEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getParameterAccessTypeAccess().getPURE_OUTPUTEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterAccessType"

    // $ANTLR start synpred14_InternalScadeEquations
    public final void synpred14_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_variables_12_1 = null;


        // InternalScadeEquations.g:738:9: (lv_variables_12_1= ruleVariableDeclarationInit )
        // InternalScadeEquations.g:738:9: lv_variables_12_1= ruleVariableDeclarationInit
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_2_1_2_2_0_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_variables_12_1=ruleVariableDeclarationInit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred14_InternalScadeEquations

    // $ANTLR start synpred15_InternalScadeEquations
    public final void synpred15_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_variables_14_1 = null;


        // InternalScadeEquations.g:780:10: (lv_variables_14_1= ruleVariableDeclarationInit )
        // InternalScadeEquations.g:780:10: lv_variables_14_1= ruleVariableDeclarationInit
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getTypeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_2_1_2_3_1_0_0());
          									
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_variables_14_1=ruleVariableDeclarationInit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred15_InternalScadeEquations

    // $ANTLR start synpred41_InternalScadeEquations
    public final void synpred41_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_variables_25_1 = null;


        // InternalScadeEquations.g:1706:8: (lv_variables_25_1= ruleVariableDeclarationInit )
        // InternalScadeEquations.g:1706:8: lv_variables_25_1= ruleVariableDeclarationInit
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_8_1_1_0_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_variables_25_1=ruleVariableDeclarationInit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred41_InternalScadeEquations

    // $ANTLR start synpred42_InternalScadeEquations
    public final void synpred42_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_variables_27_1 = null;


        // InternalScadeEquations.g:1748:9: (lv_variables_27_1= ruleVariableDeclarationInit )
        // InternalScadeEquations.g:1748:9: lv_variables_27_1= ruleVariableDeclarationInit
        {
        if ( state.backtracking==0 ) {

          									newCompositeNode(grammarAccess.getNodeDeclarationAccess().getVariablesVariableDeclarationInitParserRuleCall_8_1_2_1_0_0());
          								
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_variables_27_1=ruleVariableDeclarationInit();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred42_InternalScadeEquations

    // $ANTLR start synpred54_InternalScadeEquations
    public final void synpred54_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_11=null;
        EObject lv_references_8_0 = null;

        EObject lv_references_10_0 = null;

        EObject lv_references_12_0 = null;


        // InternalScadeEquations.g:2046:4: ( ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* ) )
        // InternalScadeEquations.g:2046:4: ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* )
        {
        // InternalScadeEquations.g:2046:4: ( ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )* )
        // InternalScadeEquations.g:2047:5: ( (lv_references_8_0= ruleValuedObjectReference ) ) otherlv_9= ',' ( (lv_references_10_0= ruleValuedObjectReference ) ) (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )*
        {
        // InternalScadeEquations.g:2047:5: ( (lv_references_8_0= ruleValuedObjectReference ) )
        // InternalScadeEquations.g:2048:6: (lv_references_8_0= ruleValuedObjectReference )
        {
        // InternalScadeEquations.g:2048:6: (lv_references_8_0= ruleValuedObjectReference )
        // InternalScadeEquations.g:2049:7: lv_references_8_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_0_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_5);
        lv_references_8_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_9=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return ;
        // InternalScadeEquations.g:2070:5: ( (lv_references_10_0= ruleValuedObjectReference ) )
        // InternalScadeEquations.g:2071:6: (lv_references_10_0= ruleValuedObjectReference )
        {
        // InternalScadeEquations.g:2071:6: (lv_references_10_0= ruleValuedObjectReference )
        // InternalScadeEquations.g:2072:7: lv_references_10_0= ruleValuedObjectReference
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_2_0());
          						
        }
        pushFollow(FollowSets000.FOLLOW_147);
        lv_references_10_0=ruleValuedObjectReference();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalScadeEquations.g:2089:5: (otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) ) )*
        loop357:
        do {
            int alt357=2;
            int LA357_0 = input.LA(1);

            if ( (LA357_0==18) ) {
                alt357=1;
            }


            switch (alt357) {
        	case 1 :
        	    // InternalScadeEquations.g:2090:6: otherlv_11= ',' ( (lv_references_12_0= ruleValuedObjectReference ) )
        	    {
        	    otherlv_11=(Token)match(input,18,FollowSets000.FOLLOW_4); if (state.failed) return ;
        	    // InternalScadeEquations.g:2094:6: ( (lv_references_12_0= ruleValuedObjectReference ) )
        	    // InternalScadeEquations.g:2095:7: (lv_references_12_0= ruleValuedObjectReference )
        	    {
        	    // InternalScadeEquations.g:2095:7: (lv_references_12_0= ruleValuedObjectReference )
        	    // InternalScadeEquations.g:2096:8: lv_references_12_0= ruleValuedObjectReference
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getEquationAccess().getReferencesValuedObjectReferenceParserRuleCall_1_1_3_1_0());
        	      							
        	    }
        	    pushFollow(FollowSets000.FOLLOW_147);
        	    lv_references_12_0=ruleValuedObjectReference();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop357;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred54_InternalScadeEquations

    // $ANTLR start synpred57_InternalScadeEquations
    public final void synpred57_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ValuedEmission_1 = null;


        // InternalScadeEquations.g:2229:4: (this_ValuedEmission_1= ruleValuedEmission )
        // InternalScadeEquations.g:2229:4: this_ValuedEmission_1= ruleValuedEmission
        {
        if ( state.backtracking==0 ) {

          				/* */
          			
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedEmission_1=ruleValuedEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred57_InternalScadeEquations

    // $ANTLR start synpred79_InternalScadeEquations
    public final void synpred79_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalScadeEquations.g:3023:6: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )
        // InternalScadeEquations.g:3023:6: otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) )
        {
        otherlv_4=(Token)match(input,51,FollowSets000.FOLLOW_49); if (state.failed) return ;
        // InternalScadeEquations.g:3027:6: ( (lv_subExpressions_5_0= ruleIntDivExpression ) )
        // InternalScadeEquations.g:3028:7: (lv_subExpressions_5_0= ruleIntDivExpression )
        {
        // InternalScadeEquations.g:3028:7: (lv_subExpressions_5_0= ruleIntDivExpression )
        // InternalScadeEquations.g:3029:8: lv_subExpressions_5_0= ruleIntDivExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleIntDivExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred79_InternalScadeEquations

    // $ANTLR start synpred81_InternalScadeEquations
    public final void synpred81_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalScadeEquations.g:3099:6: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )
        // InternalScadeEquations.g:3099:6: otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) )
        {
        otherlv_9=(Token)match(input,52,FollowSets000.FOLLOW_49); if (state.failed) return ;
        // InternalScadeEquations.g:3103:6: ( (lv_subExpressions_10_0= ruleIntDivExpression ) )
        // InternalScadeEquations.g:3104:7: (lv_subExpressions_10_0= ruleIntDivExpression )
        {
        // InternalScadeEquations.g:3104:7: (lv_subExpressions_10_0= ruleIntDivExpression )
        // InternalScadeEquations.g:3105:8: lv_subExpressions_10_0= ruleIntDivExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleIntDivExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred81_InternalScadeEquations

    // $ANTLR start synpred83_InternalScadeEquations
    public final void synpred83_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_subExpressions_15_0 = null;


        // InternalScadeEquations.g:3175:6: (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )
        // InternalScadeEquations.g:3175:6: otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) )
        {
        otherlv_14=(Token)match(input,53,FollowSets000.FOLLOW_49); if (state.failed) return ;
        // InternalScadeEquations.g:3179:6: ( (lv_subExpressions_15_0= ruleIntDivExpression ) )
        // InternalScadeEquations.g:3180:7: (lv_subExpressions_15_0= ruleIntDivExpression )
        {
        // InternalScadeEquations.g:3180:7: (lv_subExpressions_15_0= ruleIntDivExpression )
        // InternalScadeEquations.g:3181:8: lv_subExpressions_15_0= ruleIntDivExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getProductExpressionAccess().getSubExpressionsIntDivExpressionParserRuleCall_1_2_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_15_0=ruleIntDivExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred83_InternalScadeEquations

    // $ANTLR start synpred90_InternalScadeEquations
    public final void synpred90_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_subExpressions_1_0 = null;

        Enumerator lv_operator_2_0 = null;

        EObject lv_subExpressions_3_0 = null;


        // InternalScadeEquations.g:3515:3: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) )
        // InternalScadeEquations.g:3515:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        {
        // InternalScadeEquations.g:3515:3: ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) )
        // InternalScadeEquations.g:3516:4: () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        {
        // InternalScadeEquations.g:3516:4: ()
        // InternalScadeEquations.g:3517:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalScadeEquations.g:3526:4: ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) )
        // InternalScadeEquations.g:3527:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        {
        // InternalScadeEquations.g:3527:5: (lv_subExpressions_1_0= ruleAtomicValuedExpression )
        // InternalScadeEquations.g:3528:6: lv_subExpressions_1_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_53);
        lv_subExpressions_1_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalScadeEquations.g:3545:4: ( (lv_operator_2_0= ruleWhenOperator ) )
        // InternalScadeEquations.g:3546:5: (lv_operator_2_0= ruleWhenOperator )
        {
        // InternalScadeEquations.g:3546:5: (lv_operator_2_0= ruleWhenOperator )
        // InternalScadeEquations.g:3547:6: lv_operator_2_0= ruleWhenOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getWhenExpressionAccess().getOperatorWhenOperatorEnumRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_51);
        lv_operator_2_0=ruleWhenOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalScadeEquations.g:3564:4: ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) )
        // InternalScadeEquations.g:3565:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        {
        // InternalScadeEquations.g:3565:5: (lv_subExpressions_3_0= ruleAtomicValuedExpression )
        // InternalScadeEquations.g:3566:6: lv_subExpressions_3_0= ruleAtomicValuedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getWhenExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_0_3_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_3_0=ruleAtomicValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred90_InternalScadeEquations

    // $ANTLR start synpred92_InternalScadeEquations
    public final void synpred92_InternalScadeEquations_fragment() throws RecognitionException {   
        Enumerator lv_operator_1_0 = null;

        EObject lv_subExpressions_2_0 = null;


        // InternalScadeEquations.g:3696:3: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) ) ) )
        // InternalScadeEquations.g:3696:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) ) )
        {
        // InternalScadeEquations.g:3696:3: ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) ) )
        // InternalScadeEquations.g:3697:4: () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) )
        {
        // InternalScadeEquations.g:3697:4: ()
        // InternalScadeEquations.g:3698:5: 
        {
        if ( state.backtracking==0 ) {

          					/* */
          				
        }

        }

        // InternalScadeEquations.g:3707:4: ( (lv_operator_1_0= rulePreOperator ) )
        // InternalScadeEquations.g:3708:5: (lv_operator_1_0= rulePreOperator )
        {
        // InternalScadeEquations.g:3708:5: (lv_operator_1_0= rulePreOperator )
        // InternalScadeEquations.g:3709:6: lv_operator_1_0= rulePreOperator
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPreExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_49);
        lv_operator_1_0=rulePreOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalScadeEquations.g:3726:4: ( (lv_subExpressions_2_0= ruleLastExpression ) )
        // InternalScadeEquations.g:3727:5: (lv_subExpressions_2_0= ruleLastExpression )
        {
        // InternalScadeEquations.g:3727:5: (lv_subExpressions_2_0= ruleLastExpression )
        // InternalScadeEquations.g:3728:6: lv_subExpressions_2_0= ruleLastExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getPreExpressionAccess().getSubExpressionsLastExpressionParserRuleCall_0_2_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_2_0=ruleLastExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred92_InternalScadeEquations

    // $ANTLR start synpred112_InternalScadeEquations
    public final void synpred112_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_declarations_1_0 = null;


        // InternalScadeEquations.g:4878:4: ( (lv_declarations_1_0= ruleDeclaration ) )
        // InternalScadeEquations.g:4878:4: (lv_declarations_1_0= ruleDeclaration )
        {
        // InternalScadeEquations.g:4878:4: (lv_declarations_1_0= ruleDeclaration )
        // InternalScadeEquations.g:4879:5: lv_declarations_1_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getRootScopeAccess().getDeclarationsDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_1_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred112_InternalScadeEquations

    // $ANTLR start synpred116_InternalScadeEquations
    public final void synpred116_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_declarations_3_0 = null;


        // InternalScadeEquations.g:4992:4: ( (lv_declarations_3_0= ruleDeclaration ) )
        // InternalScadeEquations.g:4992:4: (lv_declarations_3_0= ruleDeclaration )
        {
        // InternalScadeEquations.g:4992:4: (lv_declarations_3_0= ruleDeclaration )
        // InternalScadeEquations.g:4993:5: lv_declarations_3_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getScopeAccess().getDeclarationsDeclarationParserRuleCall_3_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_declarations_3_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred116_InternalScadeEquations

    // $ANTLR start synpred119_InternalScadeEquations
    public final void synpred119_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_expression_0_1 = null;


        // InternalScadeEquations.g:5080:6: (lv_expression_0_1= ruleAnnotatedExpression )
        // InternalScadeEquations.g:5080:6: lv_expression_0_1= ruleAnnotatedExpression
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedExpressionParserRuleCall_0_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_1=ruleAnnotatedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred119_InternalScadeEquations

    // $ANTLR start synpred120_InternalScadeEquations
    public final void synpred120_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_expression_0_1 = null;

        EObject lv_expression_0_2 = null;


        // InternalScadeEquations.g:5077:3: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) )
        // InternalScadeEquations.g:5077:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
        {
        // InternalScadeEquations.g:5077:3: ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) )
        // InternalScadeEquations.g:5078:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
        {
        // InternalScadeEquations.g:5078:4: ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) )
        // InternalScadeEquations.g:5079:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
        {
        // InternalScadeEquations.g:5079:5: (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression )
        int alt373=2;
        switch ( input.LA(1) ) {
        case RULE_COMMENT_ANNOTATION:
            {
            int LA373_1 = input.LA(2);

            if ( (synpred119_InternalScadeEquations()) ) {
                alt373=1;
            }
            else if ( (true) ) {
                alt373=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 373, 1, input);

                throw nvae;
            }
            }
            break;
        case 92:
            {
            int LA373_2 = input.LA(2);

            if ( (synpred119_InternalScadeEquations()) ) {
                alt373=1;
            }
            else if ( (true) ) {
                alt373=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 373, 2, input);

                throw nvae;
            }
            }
            break;
        case 64:
            {
            alt373=1;
            }
            break;
        case 65:
            {
            alt373=2;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 373, 0, input);

            throw nvae;
        }

        switch (alt373) {
            case 1 :
                // InternalScadeEquations.g:5080:6: lv_expression_0_1= ruleAnnotatedExpression
                {
                pushFollow(FollowSets000.FOLLOW_2);
                lv_expression_0_1=ruleAnnotatedExpression();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalScadeEquations.g:5096:6: lv_expression_0_2= ruleAnnotatedJsonExpression
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getTestEntityAccess().getExpressionAnnotatedJsonExpressionParserRuleCall_0_0_1());
                  					
                }
                pushFollow(FollowSets000.FOLLOW_2);
                lv_expression_0_2=ruleAnnotatedJsonExpression();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred120_InternalScadeEquations

    // $ANTLR start synpred123_InternalScadeEquations
    public final void synpred123_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_VariableDeclaration_0 = null;


        // InternalScadeEquations.g:5275:3: (this_VariableDeclaration_0= ruleVariableDeclaration )
        // InternalScadeEquations.g:5275:3: this_VariableDeclaration_0= ruleVariableDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclaration_0=ruleVariableDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred123_InternalScadeEquations

    // $ANTLR start synpred124_InternalScadeEquations
    public final void synpred124_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclaration_1 = null;


        // InternalScadeEquations.g:5287:3: (this_ReferenceDeclaration_1= ruleReferenceDeclaration )
        // InternalScadeEquations.g:5287:3: this_ReferenceDeclaration_1= ruleReferenceDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclaration_1=ruleReferenceDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred124_InternalScadeEquations

    // $ANTLR start synpred125_InternalScadeEquations
    public final void synpred125_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclaration_2 = null;


        // InternalScadeEquations.g:5299:3: (this_ScheduleDeclaration_2= ruleScheduleDeclaration )
        // InternalScadeEquations.g:5299:3: this_ScheduleDeclaration_2= ruleScheduleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclaration_2=ruleScheduleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred125_InternalScadeEquations

    // $ANTLR start synpred126_InternalScadeEquations
    public final void synpred126_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_VariableDeclarationWOSemicolon_0 = null;


        // InternalScadeEquations.g:5341:3: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon )
        // InternalScadeEquations.g:5341:3: this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_VariableDeclarationWOSemicolon_0=ruleVariableDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred126_InternalScadeEquations

    // $ANTLR start synpred127_InternalScadeEquations
    public final void synpred127_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ReferenceDeclarationWOSemicolon_1 = null;


        // InternalScadeEquations.g:5353:3: (this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon )
        // InternalScadeEquations.g:5353:3: this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceDeclarationWOSemicolon_1=ruleReferenceDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred127_InternalScadeEquations

    // $ANTLR start synpred128_InternalScadeEquations
    public final void synpred128_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ScheduleDeclarationWOSemicolon_2 = null;


        // InternalScadeEquations.g:5365:3: (this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon )
        // InternalScadeEquations.g:5365:3: this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ScheduleDeclarationWOSemicolon_2=ruleScheduleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred128_InternalScadeEquations

    // $ANTLR start synpred151_InternalScadeEquations
    public final void synpred151_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        EObject lv_valuedObjects_14_0 = null;


        // InternalScadeEquations.g:5913:4: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )
        // InternalScadeEquations.g:5913:4: otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        {
        otherlv_13=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return ;
        // InternalScadeEquations.g:5917:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        // InternalScadeEquations.g:5918:5: (lv_valuedObjects_14_0= ruleValuedObject )
        {
        // InternalScadeEquations.g:5918:5: (lv_valuedObjects_14_0= ruleValuedObject )
        // InternalScadeEquations.g:5919:6: lv_valuedObjects_14_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getVariableDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_9_1_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_valuedObjects_14_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred151_InternalScadeEquations

    // $ANTLR start synpred164_InternalScadeEquations
    public final void synpred164_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_Declaration_0 = null;


        // InternalScadeEquations.g:6262:3: (this_Declaration_0= ruleDeclaration )
        // InternalScadeEquations.g:6262:3: this_Declaration_0= ruleDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Declaration_0=ruleDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred164_InternalScadeEquations

    // $ANTLR start synpred165_InternalScadeEquations
    public final void synpred165_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_EnumDeclaration_1 = null;


        // InternalScadeEquations.g:6274:3: (this_EnumDeclaration_1= ruleEnumDeclaration )
        // InternalScadeEquations.g:6274:3: this_EnumDeclaration_1= ruleEnumDeclaration
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_EnumDeclaration_1=ruleEnumDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred165_InternalScadeEquations

    // $ANTLR start synpred175_InternalScadeEquations
    public final void synpred175_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        EObject lv_valuedObjects_14_0 = null;

        EObject lv_valuedObjects_16_0 = null;


        // InternalScadeEquations.g:6516:4: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )
        // InternalScadeEquations.g:6516:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
        {
        // InternalScadeEquations.g:6516:4: ( (lv_valuedObjects_14_0= ruleValuedObject ) )
        // InternalScadeEquations.g:6517:5: (lv_valuedObjects_14_0= ruleValuedObject )
        {
        // InternalScadeEquations.g:6517:5: (lv_valuedObjects_14_0= ruleValuedObject )
        // InternalScadeEquations.g:6518:6: lv_valuedObjects_14_0= ruleValuedObject
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_5_0_0());
          					
        }
        pushFollow(FollowSets000.FOLLOW_147);
        lv_valuedObjects_14_0=ruleValuedObject();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalScadeEquations.g:6535:4: (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )*
        loop381:
        do {
            int alt381=2;
            int LA381_0 = input.LA(1);

            if ( (LA381_0==18) ) {
                alt381=1;
            }


            switch (alt381) {
        	case 1 :
        	    // InternalScadeEquations.g:6536:5: otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) )
        	    {
        	    otherlv_15=(Token)match(input,18,FollowSets000.FOLLOW_36); if (state.failed) return ;
        	    // InternalScadeEquations.g:6540:5: ( (lv_valuedObjects_16_0= ruleValuedObject ) )
        	    // InternalScadeEquations.g:6541:6: (lv_valuedObjects_16_0= ruleValuedObject )
        	    {
        	    // InternalScadeEquations.g:6541:6: (lv_valuedObjects_16_0= ruleValuedObject )
        	    // InternalScadeEquations.g:6542:7: lv_valuedObjects_16_0= ruleValuedObject
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassDeclarationWOSemicolonAccess().getValuedObjectsValuedObjectParserRuleCall_5_1_1_0());
        	      						
        	    }
        	    pushFollow(FollowSets000.FOLLOW_147);
        	    lv_valuedObjects_16_0=ruleValuedObject();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop381;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred175_InternalScadeEquations

    // $ANTLR start synpred177_InternalScadeEquations
    public final void synpred177_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_DeclarationWOSemicolon_0 = null;


        // InternalScadeEquations.g:6599:3: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon )
        // InternalScadeEquations.g:6599:3: this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_DeclarationWOSemicolon_0=ruleDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred177_InternalScadeEquations

    // $ANTLR start synpred178_InternalScadeEquations
    public final void synpred178_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_EnumDeclarationWOSemicolon_1 = null;


        // InternalScadeEquations.g:6611:3: (this_EnumDeclarationWOSemicolon_1= ruleEnumDeclarationWOSemicolon )
        // InternalScadeEquations.g:6611:3: this_EnumDeclarationWOSemicolon_1= ruleEnumDeclarationWOSemicolon
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_EnumDeclarationWOSemicolon_1=ruleEnumDeclarationWOSemicolon();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred178_InternalScadeEquations

    // $ANTLR start synpred184_InternalScadeEquations
    public final void synpred184_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_annotations_0_0 = null;


        // InternalScadeEquations.g:6845:4: ( (lv_annotations_0_0= ruleQuotedStringAnnotation ) )
        // InternalScadeEquations.g:6845:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
        {
        // InternalScadeEquations.g:6845:4: (lv_annotations_0_0= ruleQuotedStringAnnotation )
        // InternalScadeEquations.g:6846:5: lv_annotations_0_0= ruleQuotedStringAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getEnumMemberDeclarationAccess().getAnnotationsQuotedStringAnnotationParserRuleCall_0_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_0_0=ruleQuotedStringAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred184_InternalScadeEquations

    // $ANTLR start synpred192_InternalScadeEquations
    public final void synpred192_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalScadeEquations.g:7139:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalScadeEquations.g:7139:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalScadeEquations.g:7139:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalScadeEquations.g:7140:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred192_InternalScadeEquations

    // $ANTLR start synpred200_InternalScadeEquations
    public final void synpred200_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_annotations_1_0 = null;


        // InternalScadeEquations.g:7353:4: ( (lv_annotations_1_0= ruleAnnotation ) )
        // InternalScadeEquations.g:7353:4: (lv_annotations_1_0= ruleAnnotation )
        {
        // InternalScadeEquations.g:7353:4: (lv_annotations_1_0= ruleAnnotation )
        // InternalScadeEquations.g:7354:5: lv_annotations_1_0= ruleAnnotation
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getMethodDeclarationWOSemicolonAccess().getAnnotationsAnnotationParserRuleCall_1_0());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_annotations_1_0=ruleAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred200_InternalScadeEquations

    // $ANTLR start synpred233_InternalScadeEquations
    public final void synpred233_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_expression_0_3 = null;


        // InternalScadeEquations.g:8316:5: (lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized )
        // InternalScadeEquations.g:8316:5: lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericParameter_GenericTypeReference_ParameterizedParserRuleCall_0_2());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_3=ruleGenericParameter_GenericTypeReference_Parameterized();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred233_InternalScadeEquations

    // $ANTLR start synpred234_InternalScadeEquations
    public final void synpred234_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_expression_0_4 = null;


        // InternalScadeEquations.g:8332:5: (lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array )
        // InternalScadeEquations.g:8332:5: lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericParameter_ValuedObjectReference_ArrayParserRuleCall_0_3());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_4=ruleGenericParameter_ValuedObjectReference_Array();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred234_InternalScadeEquations

    // $ANTLR start synpred235_InternalScadeEquations
    public final void synpred235_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_expression_0_5 = null;


        // InternalScadeEquations.g:8348:5: (lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub )
        // InternalScadeEquations.g:8348:5: lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericParameter_ValuedObjectReference_SubParserRuleCall_0_4());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_5=ruleGenericParameter_ValuedObjectReference_Sub();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred235_InternalScadeEquations

    // $ANTLR start synpred236_InternalScadeEquations
    public final void synpred236_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject lv_expression_0_6 = null;


        // InternalScadeEquations.g:8364:5: (lv_expression_0_6= ruleGenericTypeReference )
        // InternalScadeEquations.g:8364:5: lv_expression_0_6= ruleGenericTypeReference
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getGenericParameterAccess().getExpressionGenericTypeReferenceParserRuleCall_0_5());
          				
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_expression_0_6=ruleGenericTypeReference();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred236_InternalScadeEquations

    // $ANTLR start synpred274_InternalScadeEquations
    public final void synpred274_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_Assignment_0 = null;


        // InternalScadeEquations.g:9741:3: (this_Assignment_0= ruleAssignment )
        // InternalScadeEquations.g:9741:3: this_Assignment_0= ruleAssignment
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_Assignment_0=ruleAssignment();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred274_InternalScadeEquations

    // $ANTLR start synpred275_InternalScadeEquations
    public final void synpred275_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_PostfixEffect_1 = null;


        // InternalScadeEquations.g:9753:3: (this_PostfixEffect_1= rulePostfixEffect )
        // InternalScadeEquations.g:9753:3: this_PostfixEffect_1= rulePostfixEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PostfixEffect_1=rulePostfixEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred275_InternalScadeEquations

    // $ANTLR start synpred276_InternalScadeEquations
    public final void synpred276_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ValuedEmission_2 = null;


        // InternalScadeEquations.g:9765:3: (this_ValuedEmission_2= ruleValuedEmission )
        // InternalScadeEquations.g:9765:3: this_ValuedEmission_2= ruleValuedEmission
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedEmission_2=ruleValuedEmission();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred276_InternalScadeEquations

    // $ANTLR start synpred277_InternalScadeEquations
    public final void synpred277_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_HostcodeEffect_3 = null;


        // InternalScadeEquations.g:9777:3: (this_HostcodeEffect_3= ruleHostcodeEffect )
        // InternalScadeEquations.g:9777:3: this_HostcodeEffect_3= ruleHostcodeEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_HostcodeEffect_3=ruleHostcodeEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred277_InternalScadeEquations

    // $ANTLR start synpred278_InternalScadeEquations
    public final void synpred278_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ReferenceCallEffect_4 = null;


        // InternalScadeEquations.g:9789:3: (this_ReferenceCallEffect_4= ruleReferenceCallEffect )
        // InternalScadeEquations.g:9789:3: this_ReferenceCallEffect_4= ruleReferenceCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ReferenceCallEffect_4=ruleReferenceCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred278_InternalScadeEquations

    // $ANTLR start synpred279_InternalScadeEquations
    public final void synpred279_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_FunctionCallEffect_5 = null;


        // InternalScadeEquations.g:9801:3: (this_FunctionCallEffect_5= ruleFunctionCallEffect )
        // InternalScadeEquations.g:9801:3: this_FunctionCallEffect_5= ruleFunctionCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_FunctionCallEffect_5=ruleFunctionCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred279_InternalScadeEquations

    // $ANTLR start synpred280_InternalScadeEquations
    public final void synpred280_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_PrintCallEffect_6 = null;


        // InternalScadeEquations.g:9813:3: (this_PrintCallEffect_6= rulePrintCallEffect )
        // InternalScadeEquations.g:9813:3: this_PrintCallEffect_6= rulePrintCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_PrintCallEffect_6=rulePrintCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_InternalScadeEquations

    // $ANTLR start synpred281_InternalScadeEquations
    public final void synpred281_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_RandomizeCallEffect_7 = null;


        // InternalScadeEquations.g:9825:3: (this_RandomizeCallEffect_7= ruleRandomizeCallEffect )
        // InternalScadeEquations.g:9825:3: this_RandomizeCallEffect_7= ruleRandomizeCallEffect
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_RandomizeCallEffect_7=ruleRandomizeCallEffect();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred281_InternalScadeEquations

    // $ANTLR start synpred312_InternalScadeEquations
    public final void synpred312_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalScadeEquations.g:10889:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalScadeEquations.g:10889:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred312_InternalScadeEquations

    // $ANTLR start synpred318_InternalScadeEquations
    public final void synpred318_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_0 = null;


        // InternalScadeEquations.g:11225:3: (this_ValuedExpression_0= ruleValuedExpression )
        // InternalScadeEquations.g:11225:3: this_ValuedExpression_0= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_0=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred318_InternalScadeEquations

    // $ANTLR start synpred324_InternalScadeEquations
    public final void synpred324_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        EObject lv_subExpressions_5_0 = null;


        // InternalScadeEquations.g:11624:6: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )
        // InternalScadeEquations.g:11624:6: otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) )
        {
        otherlv_4=(Token)match(input,85,FollowSets000.FOLLOW_49); if (state.failed) return ;
        // InternalScadeEquations.g:11628:6: ( (lv_subExpressions_5_0= ruleProductExpression ) )
        // InternalScadeEquations.g:11629:7: (lv_subExpressions_5_0= ruleProductExpression )
        {
        // InternalScadeEquations.g:11629:7: (lv_subExpressions_5_0= ruleProductExpression )
        // InternalScadeEquations.g:11630:8: lv_subExpressions_5_0= ruleProductExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_0_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_5_0=ruleProductExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred324_InternalScadeEquations

    // $ANTLR start synpred326_InternalScadeEquations
    public final void synpred326_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        EObject lv_subExpressions_10_0 = null;


        // InternalScadeEquations.g:11700:6: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )
        // InternalScadeEquations.g:11700:6: otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) )
        {
        otherlv_9=(Token)match(input,86,FollowSets000.FOLLOW_49); if (state.failed) return ;
        // InternalScadeEquations.g:11704:6: ( (lv_subExpressions_10_0= ruleProductExpression ) )
        // InternalScadeEquations.g:11705:7: (lv_subExpressions_10_0= ruleProductExpression )
        {
        // InternalScadeEquations.g:11705:7: (lv_subExpressions_10_0= ruleProductExpression )
        // InternalScadeEquations.g:11706:8: lv_subExpressions_10_0= ruleProductExpression
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getSumExpressionAccess().getSubExpressionsProductExpressionParserRuleCall_1_1_3_1_0());
          							
        }
        pushFollow(FollowSets000.FOLLOW_2);
        lv_subExpressions_10_0=ruleProductExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred326_InternalScadeEquations

    // $ANTLR start synpred333_InternalScadeEquations
    public final void synpred333_InternalScadeEquations_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject this_ValuedExpression_6 = null;


        // InternalScadeEquations.g:11805:3: ( (otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')' ) )
        // InternalScadeEquations.g:11805:3: (otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')' )
        {
        // InternalScadeEquations.g:11805:3: (otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')' )
        // InternalScadeEquations.g:11806:4: otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')'
        {
        otherlv_5=(Token)match(input,17,FollowSets000.FOLLOW_49); if (state.failed) return ;
        pushFollow(FollowSets000.FOLLOW_13);
        this_ValuedExpression_6=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;
        otherlv_7=(Token)match(input,19,FollowSets000.FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred333_InternalScadeEquations

    // $ANTLR start synpred345_InternalScadeEquations
    public final void synpred345_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_BoolExpression_0 = null;


        // InternalScadeEquations.g:12558:3: (this_BoolExpression_0= ruleBoolExpression )
        // InternalScadeEquations.g:12558:3: this_BoolExpression_0= ruleBoolExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_BoolExpression_0=ruleBoolExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred345_InternalScadeEquations

    // $ANTLR start synpred346_InternalScadeEquations
    public final void synpred346_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_ValuedExpression_1 = null;


        // InternalScadeEquations.g:12570:3: (this_ValuedExpression_1= ruleValuedExpression )
        // InternalScadeEquations.g:12570:3: this_ValuedExpression_1= ruleValuedExpression
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_ValuedExpression_1=ruleValuedExpression();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred346_InternalScadeEquations

    // $ANTLR start synpred360_InternalScadeEquations
    public final void synpred360_InternalScadeEquations_fragment() throws RecognitionException {   
        EObject this_KeyStringValueAnnotation_1 = null;


        // InternalScadeEquations.g:13254:3: (this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation )
        // InternalScadeEquations.g:13254:3: this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation
        {
        if ( state.backtracking==0 ) {

          			/* */
          		
        }
        pushFollow(FollowSets000.FOLLOW_2);
        this_KeyStringValueAnnotation_1=ruleKeyStringValueAnnotation();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred360_InternalScadeEquations

    // Delegated rules

    public final boolean synpred346_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred346_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred83_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred83_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred360_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred360_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred274_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred274_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred92_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred92_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred120_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred120_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred278_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred278_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred324_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred324_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred178_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred178_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred124_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred124_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred277_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred277_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred90_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred90_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred279_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred279_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred123_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred123_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred200_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred200_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred81_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred81_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred127_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred127_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred165_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred165_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred345_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred345_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred326_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred326_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred126_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred126_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred275_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred275_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred333_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred333_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred318_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred318_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_InternalScadeEquations() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_InternalScadeEquations_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA4 dfa4 = new DFA4(this);
    protected DFA65 dfa65 = new DFA65(this);
    protected DFA66 dfa66 = new DFA66(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA76 dfa76 = new DFA76(this);
    protected DFA89 dfa89 = new DFA89(this);
    protected DFA93 dfa93 = new DFA93(this);
    protected DFA97 dfa97 = new DFA97(this);
    protected DFA101 dfa101 = new DFA101(this);
    protected DFA104 dfa104 = new DFA104(this);
    protected DFA105 dfa105 = new DFA105(this);
    protected DFA126 dfa126 = new DFA126(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA149 dfa149 = new DFA149(this);
    protected DFA151 dfa151 = new DFA151(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA178 dfa178 = new DFA178(this);
    protected DFA184 dfa184 = new DFA184(this);
    protected DFA195 dfa195 = new DFA195(this);
    protected DFA204 dfa204 = new DFA204(this);
    protected DFA241 dfa241 = new DFA241(this);
    protected DFA243 dfa243 = new DFA243(this);
    protected DFA246 dfa246 = new DFA246(this);
    protected DFA249 dfa249 = new DFA249(this);
    protected DFA252 dfa252 = new DFA252(this);
    protected DFA260 dfa260 = new DFA260(this);
    protected DFA267 dfa267 = new DFA267(this);
    protected DFA272 dfa272 = new DFA272(this);
    protected DFA278 dfa278 = new DFA278(this);
    protected DFA284 dfa284 = new DFA284(this);
    protected DFA285 dfa285 = new DFA285(this);
    protected DFA287 dfa287 = new DFA287(this);
    protected DFA299 dfa299 = new DFA299(this);
    protected DFA306 dfa306 = new DFA306(this);
    protected DFA307 dfa307 = new DFA307(this);
    protected DFA308 dfa308 = new DFA308(this);
    protected DFA309 dfa309 = new DFA309(this);
    protected DFA310 dfa310 = new DFA310(this);
    protected DFA311 dfa311 = new DFA311(this);
    static final String dfa_1s = "\6\uffff";
    static final String dfa_2s = "\1\4\1\uffff\2\22\2\uffff";
    static final String dfa_3s = "\1\21\1\uffff\2\127\2\uffff";
    static final String dfa_4s = "\1\uffff\1\1\2\uffff\1\3\1\2";
    static final String dfa_5s = "\6\uffff}>";
    static final String[] dfa_6s = {
            "\1\2\14\uffff\1\1",
            "",
            "\1\5\2\uffff\1\4\101\uffff\1\3",
            "\1\5\2\uffff\1\4\101\uffff\1\3",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "173:3: ( (otherlv_0= '(' ( (lv_references_1_0= ruleValuedObjectString ) ) otherlv_2= ',' ( (lv_references_3_0= ruleValuedObjectString ) ) (otherlv_4= ',' ( (lv_references_5_0= ruleValuedObjectString ) ) )* otherlv_6= ')' ) | ( ( (lv_references_7_0= ruleValuedObjectString ) ) otherlv_8= ',' ( (lv_references_9_0= ruleValuedObjectString ) ) (otherlv_10= ',' ( (lv_references_11_0= ruleValuedObjectString ) ) )* ) | ( (lv_references_12_0= ruleValuedObjectString ) ) )";
        }
    }
    static final String dfa_7s = "\105\uffff";
    static final String dfa_8s = "\1\1\104\uffff";
    static final String dfa_9s = "\1\4\100\uffff\1\0\3\uffff";
    static final String dfa_10s = "\1\174\100\uffff\1\0\3\uffff";
    static final String dfa_11s = "\1\uffff\1\2\102\uffff\1\1";
    static final String dfa_12s = "\101\uffff\1\0\3\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\4\1\16\uffff\3\1\1\101\2\1\2\uffff\24\1\1\uffff\12\1\5\uffff\10\1\16\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA65 extends DFA {

        public DFA65(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 65;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "()* loopback of 3022:5: (otherlv_4= '*' ( (lv_subExpressions_5_0= ruleIntDivExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA65_65 = input.LA(1);

                         
                        int index65_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred79_InternalScadeEquations()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index65_65);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 65, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\1\4\101\uffff\1\0\2\uffff";
    static final String dfa_15s = "\1\174\101\uffff\1\0\2\uffff";
    static final String dfa_16s = "\102\uffff\1\0\2\uffff}>";
    static final String[] dfa_17s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\4\1\16\uffff\4\1\1\102\1\1\2\uffff\24\1\1\uffff\12\1\5\uffff\10\1\16\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };
    static final char[] dfa_14 = DFA.unpackEncodedStringToUnsignedChars(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final short[] dfa_16 = DFA.unpackEncodedString(dfa_16s);
    static final short[][] dfa_17 = unpackEncodedStringArray(dfa_17s);

    class DFA66 extends DFA {

        public DFA66(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 66;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_14;
            this.max = dfa_15;
            this.accept = dfa_11;
            this.special = dfa_16;
            this.transition = dfa_17;
        }
        public String getDescription() {
            return "()* loopback of 3098:5: (otherlv_9= '/' ( (lv_subExpressions_10_0= ruleIntDivExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA66_66 = input.LA(1);

                         
                        int index66_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred81_InternalScadeEquations()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index66_66);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 66, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_18s = "\1\4\102\uffff\1\0\1\uffff";
    static final String dfa_19s = "\1\174\102\uffff\1\0\1\uffff";
    static final String dfa_20s = "\103\uffff\1\0\1\uffff}>";
    static final String[] dfa_21s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\4\1\16\uffff\5\1\1\103\2\uffff\24\1\1\uffff\12\1\5\uffff\10\1\16\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_18 = DFA.unpackEncodedStringToUnsignedChars(dfa_18s);
    static final char[] dfa_19 = DFA.unpackEncodedStringToUnsignedChars(dfa_19s);
    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final short[][] dfa_21 = unpackEncodedStringArray(dfa_21s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_18;
            this.max = dfa_19;
            this.accept = dfa_11;
            this.special = dfa_20;
            this.transition = dfa_21;
        }
        public String getDescription() {
            return "()* loopback of 3174:5: (otherlv_14= 'mod' ( (lv_subExpressions_15_0= ruleIntDivExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_67 = input.LA(1);

                         
                        int index67_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred83_InternalScadeEquations()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_67);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_22s = "\20\uffff";
    static final String dfa_23s = "\1\4\14\0\3\uffff";
    static final String dfa_24s = "\1\157\14\0\3\uffff";
    static final String dfa_25s = "\15\uffff\1\2\1\uffff\1\1";
    static final String dfa_26s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\3\uffff}>";
    static final String[] dfa_27s = {
            "\1\10\1\3\1\uffff\1\1\1\2\1\7\7\uffff\1\6\4\uffff\1\4\103\uffff\1\5\1\13\11\uffff\1\15\1\14\1\15\4\uffff\1\11\2\uffff\1\12",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_22 = DFA.unpackEncodedString(dfa_22s);
    static final char[] dfa_23 = DFA.unpackEncodedStringToUnsignedChars(dfa_23s);
    static final char[] dfa_24 = DFA.unpackEncodedStringToUnsignedChars(dfa_24s);
    static final short[] dfa_25 = DFA.unpackEncodedString(dfa_25s);
    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final short[][] dfa_27 = unpackEncodedStringArray(dfa_27s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_22;
            this.eof = dfa_22;
            this.min = dfa_23;
            this.max = dfa_24;
            this.accept = dfa_25;
            this.special = dfa_26;
            this.transition = dfa_27;
        }
        public String getDescription() {
            return "3514:2: ( ( () ( (lv_subExpressions_1_0= ruleAtomicValuedExpression ) ) ( (lv_operator_2_0= ruleWhenOperator ) ) ( (lv_subExpressions_3_0= ruleAtomicValuedExpression ) ) ) | this_CurrentExpression_4= ruleCurrentExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_1 = input.LA(1);

                         
                        int index74_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA74_2 = input.LA(1);

                         
                        int index74_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA74_3 = input.LA(1);

                         
                        int index74_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA74_4 = input.LA(1);

                         
                        int index74_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA74_5 = input.LA(1);

                         
                        int index74_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA74_6 = input.LA(1);

                         
                        int index74_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA74_7 = input.LA(1);

                         
                        int index74_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA74_8 = input.LA(1);

                         
                        int index74_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA74_9 = input.LA(1);

                         
                        int index74_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA74_10 = input.LA(1);

                         
                        int index74_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA74_11 = input.LA(1);

                         
                        int index74_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA74_12 = input.LA(1);

                         
                        int index74_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred90_InternalScadeEquations()) ) {s = 15;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index74_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_28s = "\17\uffff";
    static final String dfa_29s = "\1\4\1\0\15\uffff";
    static final String dfa_30s = "\1\157\1\0\15\uffff";
    static final String dfa_31s = "\2\uffff\1\2\13\uffff\1\1";
    static final String dfa_32s = "\1\uffff\1\0\15\uffff}>";
    static final String[] dfa_33s = {
            "\2\2\1\uffff\3\2\7\uffff\1\2\4\uffff\1\2\103\uffff\2\2\12\uffff\2\2\4\uffff\1\1\2\uffff\1\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_28 = DFA.unpackEncodedString(dfa_28s);
    static final char[] dfa_29 = DFA.unpackEncodedStringToUnsignedChars(dfa_29s);
    static final char[] dfa_30 = DFA.unpackEncodedStringToUnsignedChars(dfa_30s);
    static final short[] dfa_31 = DFA.unpackEncodedString(dfa_31s);
    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[][] dfa_33 = unpackEncodedStringArray(dfa_33s);

    class DFA76 extends DFA {

        public DFA76(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 76;
            this.eot = dfa_28;
            this.eof = dfa_28;
            this.min = dfa_29;
            this.max = dfa_30;
            this.accept = dfa_31;
            this.special = dfa_32;
            this.transition = dfa_33;
        }
        public String getDescription() {
            return "3695:2: ( ( () ( (lv_operator_1_0= rulePreOperator ) ) ( (lv_subExpressions_2_0= ruleLastExpression ) ) ) | this_LastExpression_3= ruleLastExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA76_1 = input.LA(1);

                         
                        int index76_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred92_InternalScadeEquations()) ) {s = 14;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index76_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 76, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_34s = "\10\uffff";
    static final String dfa_35s = "\3\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_36s = "\1\4\2\uffff\1\4\2\uffff\1\4\1\uffff";
    static final String dfa_37s = "\1\157\2\uffff\1\174\2\uffff\1\174\1\uffff";
    static final String dfa_38s = "\1\uffff\1\1\1\2\1\uffff\1\4\1\5\1\uffff\1\3";
    static final String dfa_39s = "\10\uffff}>";
    static final String[] dfa_40s = {
            "\1\3\4\uffff\1\1\7\uffff\1\2\111\uffff\1\5\12\uffff\1\5\5\uffff\1\4\2\uffff\1\4",
            "",
            "",
            "\1\4\1\uffff\1\4\3\uffff\2\4\5\uffff\1\7\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\7\1\uffff\4\4\3\uffff\1\7\12\uffff\34\4\1\7\12\4\1\6\4\uffff\10\4\16\uffff\2\4\3\uffff\6\4",
            "",
            "",
            "\1\4\1\uffff\1\4\3\uffff\2\4\5\uffff\1\7\4\4\1\uffff\1\4\1\uffff\1\4\2\uffff\1\7\1\uffff\4\4\3\uffff\1\7\12\uffff\34\4\1\7\12\4\1\6\4\uffff\10\4\16\uffff\2\4\3\uffff\6\4",
            ""
    };

    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[] dfa_35 = DFA.unpackEncodedString(dfa_35s);
    static final char[] dfa_36 = DFA.unpackEncodedStringToUnsignedChars(dfa_36s);
    static final char[] dfa_37 = DFA.unpackEncodedStringToUnsignedChars(dfa_37s);
    static final short[] dfa_38 = DFA.unpackEncodedString(dfa_38s);
    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[][] dfa_40 = unpackEncodedStringArray(dfa_40s);

    class DFA89 extends DFA {

        public DFA89(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 89;
            this.eot = dfa_34;
            this.eof = dfa_35;
            this.min = dfa_36;
            this.max = dfa_37;
            this.accept = dfa_38;
            this.special = dfa_39;
            this.transition = dfa_40;
        }
        public String getDescription() {
            return "4575:2: (this_BoolValue_0= ruleBoolValue | (otherlv_1= '(' this_BoolExpression_2= ruleBoolExpression otherlv_3= ')' ) | this_ReferenceCall_4= ruleReferenceCall | this_ValuedObjectTestExpression_5= ruleValuedObjectTestExpression | this_NorAtMostOneExpression_6= ruleNorAtMostOneExpression )";
        }
    }
    static final String dfa_41s = "\35\uffff";
    static final String dfa_42s = "\1\3\34\uffff";
    static final String dfa_43s = "\1\4\2\0\4\uffff\1\0\25\uffff";
    static final String dfa_44s = "\1\171\2\0\4\uffff\1\0\25\uffff";
    static final String dfa_45s = "\3\uffff\1\2\10\uffff\1\1\20\uffff";
    static final String dfa_46s = "\1\uffff\1\0\1\1\4\uffff\1\2\25\uffff}>";
    static final String[] dfa_47s = {
            "\1\3\1\uffff\1\3\3\uffff\1\1\16\uffff\1\7\7\uffff\1\14\35\uffff\3\3\10\14\6\uffff\2\3\12\uffff\1\2\3\14\22\uffff\2\14\3\uffff\3\14",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[] dfa_42 = DFA.unpackEncodedString(dfa_42s);
    static final char[] dfa_43 = DFA.unpackEncodedStringToUnsignedChars(dfa_43s);
    static final char[] dfa_44 = DFA.unpackEncodedStringToUnsignedChars(dfa_44s);
    static final short[] dfa_45 = DFA.unpackEncodedString(dfa_45s);
    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[][] dfa_47 = unpackEncodedStringArray(dfa_47s);

    class DFA93 extends DFA {

        public DFA93(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 93;
            this.eot = dfa_41;
            this.eof = dfa_42;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_47;
        }
        public String getDescription() {
            return "()* loopback of 4877:3: ( (lv_declarations_1_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA93_1 = input.LA(1);

                         
                        int index93_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index93_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA93_2 = input.LA(1);

                         
                        int index93_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index93_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA93_7 = input.LA(1);

                         
                        int index93_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index93_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 93, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String[] dfa_48s = {
            "\1\3\1\uffff\1\3\3\uffff\1\1\14\uffff\1\3\1\uffff\1\7\7\uffff\1\14\35\uffff\3\3\10\14\6\uffff\2\3\12\uffff\1\2\3\14\22\uffff\2\14\3\uffff\3\14",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[][] dfa_48 = unpackEncodedStringArray(dfa_48s);

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = dfa_41;
            this.eof = dfa_41;
            this.min = dfa_43;
            this.max = dfa_44;
            this.accept = dfa_45;
            this.special = dfa_46;
            this.transition = dfa_48;
        }
        public String getDescription() {
            return "()* loopback of 4991:3: ( (lv_declarations_3_0= ruleDeclaration ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_1 = input.LA(1);

                         
                        int index97_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index97_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA97_2 = input.LA(1);

                         
                        int index97_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index97_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA97_7 = input.LA(1);

                         
                        int index97_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred116_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index97_7);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_49s = "\12\uffff";
    static final String dfa_50s = "\1\4\2\0\7\uffff";
    static final String dfa_51s = "\1\134\2\0\7\uffff";
    static final String dfa_52s = "\3\uffff\1\1\1\uffff\1\2\4\uffff";
    static final String dfa_53s = "\1\uffff\1\0\1\1\7\uffff}>";
    static final String[] dfa_54s = {
            "\1\5\1\uffff\1\5\3\uffff\1\1\16\uffff\1\5\46\uffff\2\3\16\uffff\2\5\12\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_49 = DFA.unpackEncodedString(dfa_49s);
    static final char[] dfa_50 = DFA.unpackEncodedStringToUnsignedChars(dfa_50s);
    static final char[] dfa_51 = DFA.unpackEncodedStringToUnsignedChars(dfa_51s);
    static final short[] dfa_52 = DFA.unpackEncodedString(dfa_52s);
    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final short[][] dfa_54 = unpackEncodedStringArray(dfa_54s);

    class DFA101 extends DFA {

        public DFA101(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 101;
            this.eot = dfa_49;
            this.eof = dfa_49;
            this.min = dfa_50;
            this.max = dfa_51;
            this.accept = dfa_52;
            this.special = dfa_53;
            this.transition = dfa_54;
        }
        public String getDescription() {
            return "5076:2: ( ( ( (lv_expression_0_1= ruleAnnotatedExpression | lv_expression_0_2= ruleAnnotatedJsonExpression ) ) ) | ( (lv_effect_1_0= ruleEffect ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA101_1 = input.LA(1);

                         
                        int index101_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index101_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA101_2 = input.LA(1);

                         
                        int index101_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred120_InternalScadeEquations()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index101_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 101, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_55s = "\25\uffff";
    static final String dfa_56s = "\1\12\5\0\1\uffff\1\0\7\uffff\1\0\5\uffff";
    static final String dfa_57s = "\1\171\5\0\1\uffff\1\0\7\uffff\1\0\5\uffff";
    static final String dfa_58s = "\6\uffff\1\1\11\uffff\1\2\1\uffff\1\3\1\4\1\uffff";
    static final String dfa_59s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\uffff\1\5\7\uffff\1\6\5\uffff}>";
    static final String[] dfa_60s = {
            "\1\1\16\uffff\1\20\7\uffff\1\6\40\uffff\1\7\4\6\1\17\1\22\1\20\22\uffff\1\2\3\6\22\uffff\2\23\3\uffff\1\3\1\4\1\5",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final char[] dfa_56 = DFA.unpackEncodedStringToUnsignedChars(dfa_56s);
    static final char[] dfa_57 = DFA.unpackEncodedStringToUnsignedChars(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[][] dfa_60 = unpackEncodedStringArray(dfa_60s);

    class DFA104 extends DFA {

        public DFA104(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 104;
            this.eot = dfa_55;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "5274:2: (this_VariableDeclaration_0= ruleVariableDeclaration | this_ReferenceDeclaration_1= ruleReferenceDeclaration | this_ScheduleDeclaration_2= ruleScheduleDeclaration | this_ClassDeclaration_3= ruleClassDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA104_1 = input.LA(1);

                         
                        int index104_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred125_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index104_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA104_2 = input.LA(1);

                         
                        int index104_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred125_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index104_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA104_3 = input.LA(1);

                         
                        int index104_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred125_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index104_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA104_4 = input.LA(1);

                         
                        int index104_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred125_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index104_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA104_5 = input.LA(1);

                         
                        int index104_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred125_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index104_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA104_7 = input.LA(1);

                         
                        int index104_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred124_InternalScadeEquations()) ) {s = 16;}

                         
                        input.seek(index104_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA104_15 = input.LA(1);

                         
                        int index104_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred123_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index104_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 104, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA105 extends DFA {

        public DFA105(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 105;
            this.eot = dfa_55;
            this.eof = dfa_55;
            this.min = dfa_56;
            this.max = dfa_57;
            this.accept = dfa_58;
            this.special = dfa_59;
            this.transition = dfa_60;
        }
        public String getDescription() {
            return "5340:2: (this_VariableDeclarationWOSemicolon_0= ruleVariableDeclarationWOSemicolon | this_ReferenceDeclarationWOSemicolon_1= ruleReferenceDeclarationWOSemicolon | this_ScheduleDeclarationWOSemicolon_2= ruleScheduleDeclarationWOSemicolon | this_ClassDeclarationWOSemicolon_3= ruleClassDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA105_1 = input.LA(1);

                         
                        int index105_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred127_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred128_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index105_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA105_2 = input.LA(1);

                         
                        int index105_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred127_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred128_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index105_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA105_3 = input.LA(1);

                         
                        int index105_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred127_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred128_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index105_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA105_4 = input.LA(1);

                         
                        int index105_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred127_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred128_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index105_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA105_5 = input.LA(1);

                         
                        int index105_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred127_InternalScadeEquations()) ) {s = 16;}

                        else if ( (synpred128_InternalScadeEquations()) ) {s = 18;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index105_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA105_7 = input.LA(1);

                         
                        int index105_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred127_InternalScadeEquations()) ) {s = 16;}

                         
                        input.seek(index105_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA105_15 = input.LA(1);

                         
                        int index105_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred126_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 19;}

                         
                        input.seek(index105_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 105, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_61s = "\40\uffff";
    static final String dfa_62s = "\1\1\37\uffff";
    static final String dfa_63s = "\1\4\34\uffff\1\0\2\uffff";
    static final String dfa_64s = "\1\174\34\uffff\1\0\2\uffff";
    static final String dfa_65s = "\1\uffff\1\2\35\uffff\1\1";
    static final String dfa_66s = "\35\uffff\1\0\2\uffff}>";
    static final String[] dfa_67s = {
            "\1\1\5\uffff\2\1\6\uffff\1\35\1\1\3\uffff\1\1\1\uffff\1\1\7\uffff\1\1\40\uffff\10\1\22\uffff\5\1\21\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final char[] dfa_63 = DFA.unpackEncodedStringToUnsignedChars(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[][] dfa_67 = unpackEncodedStringArray(dfa_67s);

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = dfa_61;
            this.eof = dfa_62;
            this.min = dfa_63;
            this.max = dfa_64;
            this.accept = dfa_65;
            this.special = dfa_66;
            this.transition = dfa_67;
        }
        public String getDescription() {
            return "()* loopback of 5912:3: (otherlv_13= ',' ( (lv_valuedObjects_14_0= ruleValuedObject ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA126_29 = input.LA(1);

                         
                        int index126_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalScadeEquations()) ) {s = 31;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index126_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 126, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_68s = "\32\uffff";
    static final String dfa_69s = "\1\4\5\0\6\uffff\2\0\1\uffff\1\0\12\uffff";
    static final String dfa_70s = "\1\174\5\0\6\uffff\2\0\1\uffff\1\0\12\uffff";
    static final String dfa_71s = "\6\uffff\1\1\16\uffff\1\2\1\3\3\uffff";
    static final String dfa_72s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\6\uffff\1\5\1\6\1\uffff\1\7\12\uffff}>";
    static final String[] dfa_73s = {
            "\1\26\5\uffff\1\1\16\uffff\1\6\7\uffff\1\6\40\uffff\5\6\1\17\2\6\22\uffff\1\2\1\14\1\15\1\6\1\25\21\uffff\2\6\3\uffff\1\3\1\4\1\5\3\26",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[][] dfa_73 = unpackEncodedStringArray(dfa_73s);

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = dfa_68;
            this.eof = dfa_68;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "6261:2: (this_Declaration_0= ruleDeclaration | this_EnumDeclaration_1= ruleEnumDeclaration | this_MethodDeclaration_2= ruleMethodDeclaration )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA139_1 = input.LA(1);

                         
                        int index139_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred165_InternalScadeEquations()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index139_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA139_2 = input.LA(1);

                         
                        int index139_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred165_InternalScadeEquations()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index139_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA139_3 = input.LA(1);

                         
                        int index139_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred165_InternalScadeEquations()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index139_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA139_4 = input.LA(1);

                         
                        int index139_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred165_InternalScadeEquations()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index139_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA139_5 = input.LA(1);

                         
                        int index139_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred165_InternalScadeEquations()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index139_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA139_12 = input.LA(1);

                         
                        int index139_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index139_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA139_13 = input.LA(1);

                         
                        int index139_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index139_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA139_15 = input.LA(1);

                         
                        int index139_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred165_InternalScadeEquations()) ) {s = 21;}

                         
                        input.seek(index139_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 139, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_74s = "\36\uffff";
    static final String dfa_75s = "\1\4\35\uffff";
    static final String dfa_76s = "\1\4\3\0\32\uffff";
    static final String dfa_77s = "\1\174\3\0\32\uffff";
    static final String dfa_78s = "\4\uffff\1\2\30\uffff\1\1";
    static final String dfa_79s = "\1\uffff\1\0\1\1\1\2\32\uffff}>";
    static final String[] dfa_80s = {
            "\1\3\5\uffff\1\1\1\4\13\uffff\1\4\1\uffff\1\4\7\uffff\1\4\40\uffff\10\4\22\uffff\1\2\4\4\21\uffff\2\4\3\uffff\6\4",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final char[] dfa_77 = DFA.unpackEncodedStringToUnsignedChars(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final short[][] dfa_80 = unpackEncodedStringArray(dfa_80s);

    class DFA149 extends DFA {

        public DFA149(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 149;
            this.eot = dfa_74;
            this.eof = dfa_75;
            this.min = dfa_76;
            this.max = dfa_77;
            this.accept = dfa_78;
            this.special = dfa_79;
            this.transition = dfa_80;
        }
        public String getDescription() {
            return "6515:3: ( ( (lv_valuedObjects_14_0= ruleValuedObject ) ) (otherlv_15= ',' ( (lv_valuedObjects_16_0= ruleValuedObject ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA149_1 = input.LA(1);

                         
                        int index149_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_InternalScadeEquations()) ) {s = 29;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index149_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA149_2 = input.LA(1);

                         
                        int index149_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_InternalScadeEquations()) ) {s = 29;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index149_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA149_3 = input.LA(1);

                         
                        int index149_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred175_InternalScadeEquations()) ) {s = 29;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index149_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 149, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA151 extends DFA {

        public DFA151(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 151;
            this.eot = dfa_68;
            this.eof = dfa_68;
            this.min = dfa_69;
            this.max = dfa_70;
            this.accept = dfa_71;
            this.special = dfa_72;
            this.transition = dfa_73;
        }
        public String getDescription() {
            return "6598:2: (this_DeclarationWOSemicolon_0= ruleDeclarationWOSemicolon | this_EnumDeclarationWOSemicolon_1= ruleEnumDeclarationWOSemicolon | this_MethodDeclarationWOSemicolon_2= ruleMethodDeclarationWOSemicolon )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA151_1 = input.LA(1);

                         
                        int index151_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred178_InternalScadeEquations()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index151_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA151_2 = input.LA(1);

                         
                        int index151_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred178_InternalScadeEquations()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index151_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA151_3 = input.LA(1);

                         
                        int index151_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred178_InternalScadeEquations()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index151_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA151_4 = input.LA(1);

                         
                        int index151_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred178_InternalScadeEquations()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index151_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA151_5 = input.LA(1);

                         
                        int index151_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred178_InternalScadeEquations()) ) {s = 21;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index151_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA151_12 = input.LA(1);

                         
                        int index151_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index151_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA151_13 = input.LA(1);

                         
                        int index151_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalScadeEquations()) ) {s = 6;}

                        else if ( (true) ) {s = 22;}

                         
                        input.seek(index151_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA151_15 = input.LA(1);

                         
                        int index151_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred177_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred178_InternalScadeEquations()) ) {s = 21;}

                         
                        input.seek(index151_15);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 151, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_81s = "\1\2\5\uffff";
    static final String dfa_82s = "\2\4\1\uffff\2\4\1\uffff";
    static final String dfa_83s = "\1\174\1\134\1\uffff\2\174\1\uffff";
    static final String dfa_84s = "\2\uffff\1\2\2\uffff\1\1";
    static final String[] dfa_85s = {
            "\1\2\5\uffff\2\2\13\uffff\1\2\1\uffff\1\2\7\uffff\1\2\40\uffff\6\2\1\1\1\2\22\uffff\5\2\21\uffff\2\2\3\uffff\6\2",
            "\1\3\1\2\4\uffff\1\2\13\uffff\1\2\55\uffff\1\2\27\uffff\1\2",
            "",
            "\1\2\2\uffff\1\5\2\uffff\2\2\6\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\2\40\uffff\10\2\2\uffff\1\2\1\uffff\2\2\7\uffff\1\4\4\uffff\5\2\21\uffff\2\2\3\uffff\6\2",
            "\1\2\2\uffff\1\5\2\uffff\2\2\6\uffff\1\2\2\uffff\1\2\1\uffff\1\2\1\uffff\1\2\7\uffff\1\2\40\uffff\10\2\2\uffff\1\2\1\uffff\2\2\7\uffff\1\4\4\uffff\5\2\21\uffff\2\2\3\uffff\6\2",
            ""
    };
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[][] dfa_85 = unpackEncodedStringArray(dfa_85s);

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_1;
            this.eof = dfa_81;
            this.min = dfa_82;
            this.max = dfa_83;
            this.accept = dfa_84;
            this.special = dfa_5;
            this.transition = dfa_85;
        }
        public String getDescription() {
            return "7489:3: (otherlv_11= 'schedule' ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+ )?";
        }
    }
    static final String dfa_86s = "\5\uffff";
    static final String dfa_87s = "\1\1\4\uffff";
    static final String dfa_88s = "\1\4\1\uffff\2\7\1\uffff";
    static final String dfa_89s = "\1\174\1\uffff\2\127\1\uffff";
    static final String dfa_90s = "\1\uffff\1\2\2\uffff\1\1";
    static final String dfa_91s = "\5\uffff}>";
    static final String[] dfa_92s = {
            "\1\2\5\uffff\2\1\13\uffff\1\1\1\uffff\1\1\7\uffff\1\1\40\uffff\10\1\22\uffff\5\1\21\uffff\2\1\3\uffff\6\1",
            "",
            "\1\4\11\uffff\1\1\12\uffff\1\1\72\uffff\1\3",
            "\1\4\11\uffff\1\1\12\uffff\1\1\72\uffff\1\3",
            ""
    };

    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA178 extends DFA {

        public DFA178(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 178;
            this.eot = dfa_86;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "()+ loopback of 7494:4: ( (lv_schedule_12_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_93s = "\3\4\2\uffff";
    static final String dfa_94s = "\1\4\2\134\2\uffff";
    static final String dfa_95s = "\3\uffff\1\1\1\2";
    static final String[] dfa_96s = {
            "\1\1",
            "\1\4\5\uffff\1\4\32\uffff\1\3\44\uffff\1\4\14\uffff\1\2\4\uffff\1\4",
            "\1\4\5\uffff\1\4\32\uffff\1\3\44\uffff\1\4\14\uffff\1\2\4\uffff\1\4",
            "",
            ""
    };
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[][] dfa_96 = unpackEncodedStringArray(dfa_96s);

    class DFA184 extends DFA {

        public DFA184(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 184;
            this.eot = dfa_86;
            this.eof = dfa_86;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_91;
            this.transition = dfa_96;
        }
        public String getDescription() {
            return "7610:5: ( ( ( rulePrimeID ) ) otherlv_5= '.' )?";
        }
    }

    class DFA195 extends DFA {

        public DFA195(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 195;
            this.eot = dfa_86;
            this.eof = dfa_86;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_91;
            this.transition = dfa_96;
        }
        public String getDescription() {
            return "7949:5: ( ( ( rulePrimeID ) ) otherlv_5= '.' )?";
        }
    }
    static final String dfa_97s = "\16\uffff";
    static final String dfa_98s = "\1\4\7\uffff\1\0\5\uffff";
    static final String dfa_99s = "\1\137\7\uffff\1\0\5\uffff";
    static final String dfa_100s = "\1\uffff\1\1\2\uffff\1\2\4\uffff\1\3\1\4\1\5\1\6\1\7";
    static final String dfa_101s = "\10\uffff\1\0\5\uffff}>";
    static final String[] dfa_102s = {
            "\1\10\1\4\1\uffff\3\4\123\uffff\3\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[][] dfa_102 = unpackEncodedStringArray(dfa_102s);

    class DFA204 extends DFA {

        public DFA204(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 204;
            this.eot = dfa_97;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_100;
            this.special = dfa_101;
            this.transition = dfa_102;
        }
        public String getDescription() {
            return "8283:4: (lv_expression_0_1= ruleValueTypeReference | lv_expression_0_2= ruleAnyValue | lv_expression_0_3= ruleGenericParameter_GenericTypeReference_Parameterized | lv_expression_0_4= ruleGenericParameter_ValuedObjectReference_Array | lv_expression_0_5= ruleGenericParameter_ValuedObjectReference_Sub | lv_expression_0_6= ruleGenericTypeReference | lv_expression_0_7= ruleValuedObjectReference )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA204_8 = input.LA(1);

                         
                        int index204_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred233_InternalScadeEquations()) ) {s = 9;}

                        else if ( (synpred234_InternalScadeEquations()) ) {s = 10;}

                        else if ( (synpred235_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred236_InternalScadeEquations()) ) {s = 12;}

                        else if ( (true) ) {s = 13;}

                         
                        input.seek(index204_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 204, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_103s = "\15\uffff";
    static final String dfa_104s = "\1\4\3\0\11\uffff";
    static final String dfa_105s = "\1\134\3\0\11\uffff";
    static final String dfa_106s = "\4\uffff\1\4\1\6\1\7\1\10\1\1\1\2\1\3\1\5\1\11";
    static final String dfa_107s = "\1\uffff\1\0\1\1\1\2\11\uffff}>";
    static final String[] dfa_108s = {
            "\1\3\1\uffff\1\4\3\uffff\1\1\16\uffff\1\5\66\uffff\1\6\1\7\12\uffff\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA241 extends DFA {

        public DFA241(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 241;
            this.eot = dfa_103;
            this.eof = dfa_103;
            this.min = dfa_104;
            this.max = dfa_105;
            this.accept = dfa_106;
            this.special = dfa_107;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "9740:2: (this_Assignment_0= ruleAssignment | this_PostfixEffect_1= rulePostfixEffect | this_ValuedEmission_2= ruleValuedEmission | this_HostcodeEffect_3= ruleHostcodeEffect | this_ReferenceCallEffect_4= ruleReferenceCallEffect | this_FunctionCallEffect_5= ruleFunctionCallEffect | this_PrintCallEffect_6= rulePrintCallEffect | this_RandomizeCallEffect_7= ruleRandomizeCallEffect | this_PureEmission_8= rulePureEmission )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA241_1 = input.LA(1);

                         
                        int index241_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 8;}

                        else if ( (synpred275_InternalScadeEquations()) ) {s = 9;}

                        else if ( (synpred276_InternalScadeEquations()) ) {s = 10;}

                        else if ( (synpred277_InternalScadeEquations()) ) {s = 4;}

                        else if ( (synpred278_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred279_InternalScadeEquations()) ) {s = 5;}

                        else if ( (synpred280_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred281_InternalScadeEquations()) ) {s = 7;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index241_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA241_2 = input.LA(1);

                         
                        int index241_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 8;}

                        else if ( (synpred275_InternalScadeEquations()) ) {s = 9;}

                        else if ( (synpred276_InternalScadeEquations()) ) {s = 10;}

                        else if ( (synpred277_InternalScadeEquations()) ) {s = 4;}

                        else if ( (synpred278_InternalScadeEquations()) ) {s = 11;}

                        else if ( (synpred279_InternalScadeEquations()) ) {s = 5;}

                        else if ( (synpred280_InternalScadeEquations()) ) {s = 6;}

                        else if ( (synpred281_InternalScadeEquations()) ) {s = 7;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index241_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA241_3 = input.LA(1);

                         
                        int index241_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalScadeEquations()) ) {s = 8;}

                        else if ( (synpred275_InternalScadeEquations()) ) {s = 9;}

                        else if ( (synpred276_InternalScadeEquations()) ) {s = 10;}

                        else if ( (synpred278_InternalScadeEquations()) ) {s = 11;}

                        else if ( (true) ) {s = 12;}

                         
                        input.seek(index241_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 241, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_109s = "\1\1\1\uffff\2\1\1\uffff";
    static final String dfa_110s = "\1\4\1\uffff\2\4\1\uffff";
    static final String dfa_111s = "\1\134\1\uffff\2\153\1\uffff";
    static final String[] dfa_112s = {
            "\1\2\1\uffff\1\1\3\uffff\1\1\11\uffff\1\1\2\uffff\1\1\1\uffff\1\1\45\uffff\3\1\16\uffff\2\1\12\uffff\1\1",
            "",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\10\uffff\1\1\31\uffff\3\1\6\uffff\1\1\3\uffff\1\1\3\uffff\2\1\5\uffff\1\3\4\uffff\1\1\15\uffff\2\1",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\10\uffff\1\1\31\uffff\3\1\6\uffff\1\1\3\uffff\1\1\3\uffff\2\1\5\uffff\1\3\4\uffff\1\1\15\uffff\2\1",
            ""
    };
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final char[] dfa_110 = DFA.unpackEncodedStringToUnsignedChars(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final short[][] dfa_112 = unpackEncodedStringArray(dfa_112s);

    class DFA243 extends DFA {

        public DFA243(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 243;
            this.eot = dfa_86;
            this.eof = dfa_109;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_112;
        }
        public String getDescription() {
            return "()+ loopback of 9910:4: ( (lv_schedule_3_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA246 extends DFA {

        public DFA246(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 246;
            this.eot = dfa_86;
            this.eof = dfa_109;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_112;
        }
        public String getDescription() {
            return "()+ loopback of 10019:4: ( (lv_schedule_6_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String[] dfa_113s = {
            "\1\2\1\uffff\1\1\3\uffff\1\1\14\uffff\1\1\1\uffff\1\1\45\uffff\3\1\16\uffff\2\1\12\uffff\1\1",
            "",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\10\uffff\1\1\31\uffff\3\1\6\uffff\1\1\3\uffff\1\1\3\uffff\2\1\5\uffff\1\3\4\uffff\1\1\15\uffff\2\1",
            "\1\1\1\uffff\1\1\1\4\2\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\1\uffff\1\1\2\uffff\1\1\10\uffff\1\1\31\uffff\3\1\6\uffff\1\1\3\uffff\1\1\3\uffff\2\1\5\uffff\1\3\4\uffff\1\1\15\uffff\2\1",
            ""
    };
    static final short[][] dfa_113 = unpackEncodedStringArray(dfa_113s);

    class DFA249 extends DFA {

        public DFA249(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 249;
            this.eot = dfa_86;
            this.eof = dfa_109;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "()+ loopback of 10139:4: ( (lv_schedule_5_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA252 extends DFA {

        public DFA252(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 252;
            this.eot = dfa_86;
            this.eof = dfa_109;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "()+ loopback of 10240:4: ( (lv_schedule_4_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA260 extends DFA {

        public DFA260(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 260;
            this.eot = dfa_86;
            this.eof = dfa_109;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "()+ loopback of 10493:4: ( (lv_schedule_14_0= ruleScheduleObjectReference ) )+";
        }
    }

    class DFA267 extends DFA {

        public DFA267(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 267;
            this.eot = dfa_86;
            this.eof = dfa_109;
            this.min = dfa_110;
            this.max = dfa_111;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_113;
        }
        public String getDescription() {
            return "()+ loopback of 10737:4: ( (lv_schedule_8_0= ruleScheduleObjectReference ) )+";
        }
    }
    static final String dfa_114s = "\23\uffff";
    static final String dfa_115s = "\1\4\1\uffff\17\0\2\uffff";
    static final String dfa_116s = "\1\157\1\uffff\17\0\2\uffff";
    static final String dfa_117s = "\1\uffff\1\1\20\uffff\1\2";
    static final String dfa_118s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\uffff}>";
    static final String[] dfa_119s = {
            "\1\12\1\5\1\uffff\1\3\1\4\1\11\7\uffff\1\10\4\uffff\1\6\30\uffff\1\1\46\uffff\1\2\3\uffff\1\7\1\15\10\uffff\1\1\1\17\1\16\1\20\4\uffff\1\13\2\uffff\1\14",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final char[] dfa_115 = DFA.unpackEncodedStringToUnsignedChars(dfa_115s);
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final short[] dfa_117 = DFA.unpackEncodedString(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[][] dfa_119 = unpackEncodedStringArray(dfa_119s);

    class DFA272 extends DFA {

        public DFA272(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 272;
            this.eot = dfa_114;
            this.eof = dfa_114;
            this.min = dfa_115;
            this.max = dfa_116;
            this.accept = dfa_117;
            this.special = dfa_118;
            this.transition = dfa_119;
        }
        public String getDescription() {
            return "10888:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA272_2 = input.LA(1);

                         
                        int index272_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA272_3 = input.LA(1);

                         
                        int index272_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA272_4 = input.LA(1);

                         
                        int index272_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA272_5 = input.LA(1);

                         
                        int index272_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA272_6 = input.LA(1);

                         
                        int index272_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA272_7 = input.LA(1);

                         
                        int index272_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA272_8 = input.LA(1);

                         
                        int index272_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA272_9 = input.LA(1);

                         
                        int index272_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA272_10 = input.LA(1);

                         
                        int index272_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA272_11 = input.LA(1);

                         
                        int index272_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA272_12 = input.LA(1);

                         
                        int index272_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA272_13 = input.LA(1);

                         
                        int index272_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA272_14 = input.LA(1);

                         
                        int index272_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA272_15 = input.LA(1);

                         
                        int index272_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA272_16 = input.LA(1);

                         
                        int index272_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index272_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 272, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_120s = "\21\uffff";
    static final String dfa_121s = "\1\4\6\uffff\7\0\3\uffff";
    static final String dfa_122s = "\1\157\6\uffff\7\0\3\uffff";
    static final String dfa_123s = "\1\uffff\1\1\16\uffff\1\2";
    static final String dfa_124s = "\7\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\3\uffff}>";
    static final String[] dfa_125s = {
            "\1\11\1\1\1\uffff\2\1\1\10\7\uffff\1\7\4\uffff\1\1\77\uffff\1\1\3\uffff\1\1\1\14\10\uffff\1\20\1\1\1\15\1\1\4\uffff\1\12\2\uffff\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[][] dfa_125 = unpackEncodedStringArray(dfa_125s);

    class DFA278 extends DFA {

        public DFA278(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 278;
            this.eot = dfa_120;
            this.eof = dfa_120;
            this.min = dfa_121;
            this.max = dfa_122;
            this.accept = dfa_123;
            this.special = dfa_124;
            this.transition = dfa_125;
        }
        public String getDescription() {
            return "11224:2: (this_ValuedExpression_0= ruleValuedExpression | this_NotExpression_1= ruleNotExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA278_7 = input.LA(1);

                         
                        int index278_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index278_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA278_8 = input.LA(1);

                         
                        int index278_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index278_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA278_9 = input.LA(1);

                         
                        int index278_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index278_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA278_10 = input.LA(1);

                         
                        int index278_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index278_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA278_11 = input.LA(1);

                         
                        int index278_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index278_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA278_12 = input.LA(1);

                         
                        int index278_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index278_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA278_13 = input.LA(1);

                         
                        int index278_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred318_InternalScadeEquations()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index278_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 278, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_126s = "\102\uffff";
    static final String dfa_127s = "\1\1\101\uffff";
    static final String dfa_128s = "\1\4\76\uffff\1\0\2\uffff";
    static final String dfa_129s = "\1\174\76\uffff\1\0\2\uffff";
    static final String dfa_130s = "\1\uffff\1\2\77\uffff\1\1";
    static final String dfa_131s = "\77\uffff\1\0\2\uffff}>";
    static final String[] dfa_132s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\4\1\16\uffff\3\1\5\uffff\24\1\1\uffff\10\1\1\77\1\1\5\uffff\10\1\16\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_126 = DFA.unpackEncodedString(dfa_126s);
    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final char[] dfa_128 = DFA.unpackEncodedStringToUnsignedChars(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final short[] dfa_130 = DFA.unpackEncodedString(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[][] dfa_132 = unpackEncodedStringArray(dfa_132s);

    class DFA284 extends DFA {

        public DFA284(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 284;
            this.eot = dfa_126;
            this.eof = dfa_127;
            this.min = dfa_128;
            this.max = dfa_129;
            this.accept = dfa_130;
            this.special = dfa_131;
            this.transition = dfa_132;
        }
        public String getDescription() {
            return "()* loopback of 11623:5: (otherlv_4= '+' ( (lv_subExpressions_5_0= ruleProductExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA284_63 = input.LA(1);

                         
                        int index284_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred324_InternalScadeEquations()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index284_63);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 284, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_133s = "\1\4\77\uffff\1\0\1\uffff";
    static final String dfa_134s = "\1\174\77\uffff\1\0\1\uffff";
    static final String dfa_135s = "\100\uffff\1\0\1\uffff}>";
    static final String[] dfa_136s = {
            "\1\1\1\uffff\1\1\3\uffff\2\1\6\uffff\4\1\1\uffff\1\1\1\uffff\1\1\4\uffff\4\1\16\uffff\3\1\5\uffff\24\1\1\uffff\11\1\1\100\5\uffff\10\1\16\uffff\2\1\3\uffff\6\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            ""
    };
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[][] dfa_136 = unpackEncodedStringArray(dfa_136s);

    class DFA285 extends DFA {

        public DFA285(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 285;
            this.eot = dfa_126;
            this.eof = dfa_127;
            this.min = dfa_133;
            this.max = dfa_134;
            this.accept = dfa_130;
            this.special = dfa_135;
            this.transition = dfa_136;
        }
        public String getDescription() {
            return "()* loopback of 11699:5: (otherlv_9= '-' ( (lv_subExpressions_10_0= ruleProductExpression ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA285_64 = input.LA(1);

                         
                        int index285_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred326_InternalScadeEquations()) ) {s = 65;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index285_64);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 285, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_137s = "\1\4\5\uffff\1\0\7\uffff";
    static final String dfa_138s = "\1\157\5\uffff\1\0\7\uffff";
    static final String dfa_139s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\1\uffff\1\7\5\uffff\1\6";
    static final String dfa_140s = "\6\uffff\1\0\7\uffff}>";
    static final String[] dfa_141s = {
            "\1\7\1\3\1\uffff\1\1\1\2\1\7\7\uffff\1\6\4\uffff\1\4\103\uffff\1\5\1\7\12\uffff\1\7\5\uffff\1\7\2\uffff\1\7",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_137 = DFA.unpackEncodedStringToUnsignedChars(dfa_137s);
    static final char[] dfa_138 = DFA.unpackEncodedStringToUnsignedChars(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[] dfa_140 = DFA.unpackEncodedString(dfa_140s);
    static final short[][] dfa_141 = unpackEncodedStringArray(dfa_141s);

    class DFA287 extends DFA {

        public DFA287(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 287;
            this.eot = dfa_97;
            this.eof = dfa_97;
            this.min = dfa_137;
            this.max = dfa_138;
            this.accept = dfa_139;
            this.special = dfa_140;
            this.transition = dfa_141;
        }
        public String getDescription() {
            return "11744:2: (this_IntValue_0= ruleIntValue | this_FloatValue_1= ruleFloatValue | this_StringValue_2= ruleStringValue | this_VectorValue_3= ruleVectorValue | this_NullValue_4= ruleNullValue | (otherlv_5= '(' this_ValuedExpression_6= ruleValuedExpression otherlv_7= ')' ) | this_AtomicExpression_8= ruleAtomicExpression )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA287_6 = input.LA(1);

                         
                        int index287_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred333_InternalScadeEquations()) ) {s = 13;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index287_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 287, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_142s = "\24\uffff";
    static final String dfa_143s = "\1\4\1\uffff\17\0\3\uffff";
    static final String dfa_144s = "\1\157\1\uffff\17\0\3\uffff";
    static final String dfa_145s = "\1\uffff\1\1\20\uffff\1\3\1\2";
    static final String dfa_146s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\3\uffff}>";
    static final String[] dfa_147s = {
            "\1\12\1\5\1\uffff\1\3\1\4\1\11\7\uffff\1\10\4\uffff\1\6\30\uffff\1\1\46\uffff\1\2\2\uffff\1\22\1\7\1\15\10\uffff\1\1\1\17\1\16\1\20\4\uffff\1\13\2\uffff\1\14",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final char[] dfa_143 = DFA.unpackEncodedStringToUnsignedChars(dfa_143s);
    static final char[] dfa_144 = DFA.unpackEncodedStringToUnsignedChars(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[][] dfa_147 = unpackEncodedStringArray(dfa_147s);

    class DFA299 extends DFA {

        public DFA299(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 299;
            this.eot = dfa_142;
            this.eof = dfa_142;
            this.min = dfa_143;
            this.max = dfa_144;
            this.accept = dfa_145;
            this.special = dfa_146;
            this.transition = dfa_147;
        }
        public String getDescription() {
            return "12557:2: (this_BoolExpression_0= ruleBoolExpression | this_ValuedExpression_1= ruleValuedExpression | this_IgnoreValue_2= ruleIgnoreValue )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA299_2 = input.LA(1);

                         
                        int index299_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA299_3 = input.LA(1);

                         
                        int index299_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA299_4 = input.LA(1);

                         
                        int index299_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA299_5 = input.LA(1);

                         
                        int index299_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA299_6 = input.LA(1);

                         
                        int index299_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA299_7 = input.LA(1);

                         
                        int index299_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA299_8 = input.LA(1);

                         
                        int index299_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA299_9 = input.LA(1);

                         
                        int index299_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA299_10 = input.LA(1);

                         
                        int index299_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA299_11 = input.LA(1);

                         
                        int index299_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA299_12 = input.LA(1);

                         
                        int index299_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA299_13 = input.LA(1);

                         
                        int index299_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA299_14 = input.LA(1);

                         
                        int index299_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA299_15 = input.LA(1);

                         
                        int index299_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA299_16 = input.LA(1);

                         
                        int index299_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred345_InternalScadeEquations()) ) {s = 1;}

                        else if ( (synpred346_InternalScadeEquations()) ) {s = 19;}

                         
                        input.seek(index299_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 299, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_148s = "\3\uffff\1\1\4\uffff\2\1";
    static final String dfa_149s = "\1\12\1\uffff\4\4\1\7\1\uffff\2\4";
    static final String dfa_150s = "\1\134\1\uffff\1\4\1\174\1\4\1\10\1\7\1\uffff\2\174";
    static final String dfa_151s = "\1\uffff\1\1\5\uffff\1\2\2\uffff";
    static final String dfa_152s = "\12\uffff}>";
    static final String[] dfa_153s = {
            "\1\1\121\uffff\1\2",
            "",
            "\1\3",
            "\7\1\13\uffff\1\7\2\uffff\1\1\7\uffff\1\1\3\uffff\1\4\32\uffff\12\1\2\uffff\1\1\3\uffff\2\1\4\uffff\1\5\4\uffff\1\6\5\1\21\uffff\2\1\3\uffff\6\1",
            "\1\10",
            "\1\10\2\uffff\2\1",
            "\1\11",
            "",
            "\7\1\13\uffff\1\7\2\uffff\1\1\7\uffff\1\1\3\uffff\1\4\32\uffff\12\1\2\uffff\1\1\3\uffff\2\1\4\uffff\1\5\4\uffff\1\6\5\1\21\uffff\2\1\3\uffff\6\1",
            "\7\1\13\uffff\1\7\2\uffff\1\1\7\uffff\1\1\36\uffff\12\1\2\uffff\1\1\3\uffff\2\1\4\uffff\1\1\5\uffff\5\1\21\uffff\2\1\3\uffff\6\1"
    };
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final char[] dfa_149 = DFA.unpackEncodedStringToUnsignedChars(dfa_149s);
    static final char[] dfa_150 = DFA.unpackEncodedStringToUnsignedChars(dfa_150s);
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final short[][] dfa_153 = unpackEncodedStringArray(dfa_153s);

    class DFA306 extends DFA {

        public DFA306(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 306;
            this.eot = dfa_49;
            this.eof = dfa_148;
            this.min = dfa_149;
            this.max = dfa_150;
            this.accept = dfa_151;
            this.special = dfa_152;
            this.transition = dfa_153;
        }
        public String getDescription() {
            return "13157:2: (this_Annotation_0= superAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
    }
    static final String dfa_154s = "\1\134\1\uffff\1\4\1\134\2\4\1\7\1\uffff\2\134";
    static final String[] dfa_155s = {
            "\1\1\121\uffff\1\2",
            "",
            "\1\3",
            "\2\1\4\uffff\1\1\13\uffff\1\7\16\uffff\1\4\46\uffff\1\1\11\uffff\1\5\4\uffff\1\6\1\1",
            "\1\10",
            "\1\10",
            "\1\11",
            "",
            "\2\1\4\uffff\1\1\13\uffff\1\7\16\uffff\1\4\46\uffff\1\1\11\uffff\1\5\4\uffff\1\6\1\1",
            "\2\1\4\uffff\1\1\13\uffff\1\7\65\uffff\1\1\17\uffff\1\1"
    };
    static final char[] dfa_154 = DFA.unpackEncodedStringToUnsignedChars(dfa_154s);
    static final short[][] dfa_155 = unpackEncodedStringArray(dfa_155s);

    class DFA307 extends DFA {

        public DFA307(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 307;
            this.eot = dfa_49;
            this.eof = dfa_148;
            this.min = dfa_149;
            this.max = dfa_154;
            this.accept = dfa_151;
            this.special = dfa_152;
            this.transition = dfa_155;
        }
        public String getDescription() {
            return "13199:2: (this_QuotedStringAnnotation_0= superQuotedStringAnnotation | this_JsonAnnotation_1= ruleJsonAnnotation )";
        }
    }
    static final String dfa_156s = "\26\uffff";
    static final String dfa_157s = "\3\uffff\1\11\4\uffff\1\7\2\uffff\2\11\1\uffff\1\7\1\uffff\1\7\1\uffff\1\7\1\uffff\1\7\1\uffff";
    static final String dfa_158s = "\1\12\1\uffff\4\4\1\7\1\uffff\1\4\2\uffff\12\4\1\0";
    static final String dfa_159s = "\1\134\1\uffff\1\4\1\174\1\4\1\10\1\7\1\uffff\1\174\2\uffff\2\174\1\4\1\174\1\4\1\174\1\4\1\174\1\4\1\174\1\0";
    static final String dfa_160s = "\1\uffff\1\1\5\uffff\1\2\1\uffff\1\4\1\3\13\uffff";
    static final String dfa_161s = "\25\uffff\1\0}>";
    static final String[] dfa_162s = {
            "\1\1\121\uffff\1\2",
            "",
            "\1\3",
            "\1\10\1\7\1\11\3\7\1\11\16\uffff\1\11\7\uffff\1\11\3\uffff\1\4\32\uffff\12\11\2\uffff\1\12\3\uffff\2\11\4\uffff\1\5\4\uffff\1\6\5\11\21\uffff\2\11\3\uffff\6\11",
            "\1\13",
            "\1\13\2\uffff\2\7",
            "\1\14",
            "",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\11\1\7\2\uffff\1\11\3\uffff\1\7\2\uffff\1\11\4\uffff\1\7\3\uffff\1\15\32\uffff\12\7\2\uffff\1\11\3\uffff\2\7\4\uffff\1\7\1\11\3\uffff\6\7\11\uffff\2\11\6\uffff\2\7\3\uffff\6\7",
            "",
            "",
            "\1\10\1\7\1\11\3\7\1\11\16\uffff\1\11\7\uffff\1\11\3\uffff\1\4\32\uffff\12\11\2\uffff\1\12\3\uffff\2\11\4\uffff\1\5\4\uffff\1\6\5\11\21\uffff\2\11\3\uffff\6\11",
            "\1\10\1\7\1\11\3\7\1\11\16\uffff\1\11\7\uffff\1\11\36\uffff\12\11\2\uffff\1\12\3\uffff\2\11\4\uffff\1\7\5\uffff\5\11\21\uffff\2\11\3\uffff\6\11",
            "\1\16",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\11\1\7\2\uffff\1\11\3\uffff\1\7\2\uffff\1\11\4\uffff\1\7\3\uffff\1\17\32\uffff\12\7\2\uffff\1\11\3\uffff\2\7\4\uffff\1\7\1\11\3\uffff\6\7\11\uffff\2\11\6\uffff\2\7\3\uffff\6\7",
            "\1\20",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\11\1\7\2\uffff\1\11\3\uffff\1\7\2\uffff\1\11\4\uffff\1\7\3\uffff\1\21\32\uffff\12\7\2\uffff\1\11\3\uffff\2\7\4\uffff\1\7\1\11\3\uffff\6\7\11\uffff\2\11\6\uffff\2\7\3\uffff\6\7",
            "\1\22",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\11\1\7\2\uffff\1\11\3\uffff\1\7\2\uffff\1\11\4\uffff\1\7\3\uffff\1\23\32\uffff\12\7\2\uffff\1\11\3\uffff\2\7\4\uffff\1\7\1\11\3\uffff\6\7\11\uffff\2\11\6\uffff\2\7\3\uffff\6\7",
            "\1\24",
            "\1\7\1\uffff\1\7\3\uffff\1\7\6\uffff\1\11\1\7\2\uffff\1\11\3\uffff\1\7\2\uffff\1\11\4\uffff\1\7\3\uffff\1\25\32\uffff\12\7\2\uffff\1\11\3\uffff\2\7\4\uffff\1\7\1\11\3\uffff\6\7\11\uffff\2\11\6\uffff\2\7\3\uffff\6\7",
            "\1\uffff"
    };

    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final char[] dfa_158 = DFA.unpackEncodedStringToUnsignedChars(dfa_158s);
    static final char[] dfa_159 = DFA.unpackEncodedStringToUnsignedChars(dfa_159s);
    static final short[] dfa_160 = DFA.unpackEncodedString(dfa_160s);
    static final short[] dfa_161 = DFA.unpackEncodedString(dfa_161s);
    static final short[][] dfa_162 = unpackEncodedStringArray(dfa_162s);

    class DFA308 extends DFA {

        public DFA308(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 308;
            this.eot = dfa_156;
            this.eof = dfa_157;
            this.min = dfa_158;
            this.max = dfa_159;
            this.accept = dfa_160;
            this.special = dfa_161;
            this.transition = dfa_162;
        }
        public String getDescription() {
            return "13241:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA308_21 = input.LA(1);

                         
                        int index308_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred360_InternalScadeEquations()) ) {s = 7;}

                        else if ( (true) ) {s = 9;}

                         
                        input.seek(index308_21);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 308, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_163s = "\2\uffff\1\7\5\uffff\2\7";
    static final String dfa_164s = "\1\133\4\4\1\7\2\uffff\2\4";
    static final String dfa_165s = "\1\133\1\4\1\133\1\4\1\10\1\7\2\uffff\1\133\1\126";
    static final String dfa_166s = "\6\uffff\1\1\1\2\2\uffff";
    static final String[] dfa_167s = {
            "\1\1",
            "\1\2",
            "\2\6\1\uffff\3\6\33\uffff\1\3\60\uffff\1\4\4\uffff\1\5",
            "\1\10",
            "\1\10\2\uffff\2\6",
            "\1\11",
            "",
            "",
            "\2\6\1\uffff\3\6\33\uffff\1\3\60\uffff\1\4\4\uffff\1\5",
            "\2\6\1\uffff\3\6\114\uffff\1\6"
    };
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final char[] dfa_164 = DFA.unpackEncodedStringToUnsignedChars(dfa_164s);
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final short[] dfa_166 = DFA.unpackEncodedString(dfa_166s);
    static final short[][] dfa_167 = unpackEncodedStringArray(dfa_167s);

    class DFA309 extends DFA {

        public DFA309(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 309;
            this.eot = dfa_49;
            this.eof = dfa_163;
            this.min = dfa_164;
            this.max = dfa_165;
            this.accept = dfa_166;
            this.special = dfa_152;
            this.transition = dfa_167;
        }
        public String getDescription() {
            return "13307:2: (this_StringPragma_0= ruleStringPragma | this_PragmaTag_1= rulePragmaTag )";
        }
    }
    static final String dfa_168s = "\13\uffff";
    static final String dfa_169s = "\1\12\1\uffff\4\4\1\7\2\uffff\2\4";
    static final String dfa_170s = "\1\134\1\uffff\1\4\1\133\1\4\1\10\1\7\2\uffff\1\133\1\126";
    static final String dfa_171s = "\1\uffff\1\1\5\uffff\1\2\1\3\2\uffff";
    static final String dfa_172s = "\13\uffff}>";
    static final String[] dfa_173s = {
            "\1\1\121\uffff\1\2",
            "",
            "\1\3",
            "\2\7\1\uffff\3\7\33\uffff\1\4\46\uffff\1\10\11\uffff\1\5\4\uffff\1\6",
            "\1\11",
            "\1\11\2\uffff\2\7",
            "\1\12",
            "",
            "",
            "\2\7\1\uffff\3\7\33\uffff\1\4\46\uffff\1\10\11\uffff\1\5\4\uffff\1\6",
            "\2\7\1\uffff\3\7\102\uffff\1\10\11\uffff\1\7"
    };

    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final char[] dfa_169 = DFA.unpackEncodedStringToUnsignedChars(dfa_169s);
    static final char[] dfa_170 = DFA.unpackEncodedStringToUnsignedChars(dfa_170s);
    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final short[] dfa_172 = DFA.unpackEncodedString(dfa_172s);
    static final short[][] dfa_173 = unpackEncodedStringArray(dfa_173s);

    class DFA310 extends DFA {

        public DFA310(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 310;
            this.eot = dfa_168;
            this.eof = dfa_168;
            this.min = dfa_169;
            this.max = dfa_170;
            this.accept = dfa_171;
            this.special = dfa_172;
            this.transition = dfa_173;
        }
        public String getDescription() {
            return "13349:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_KeyStringValueAnnotation_1= ruleKeyStringValueAnnotation | this_TypedKeyStringValueAnnotation_2= ruleTypedKeyStringValueAnnotation )";
        }
    }
    static final String dfa_174s = "\14\uffff";
    static final String dfa_175s = "\3\uffff\1\7\6\uffff\2\7";
    static final String dfa_176s = "\1\12\1\uffff\4\4\1\7\3\uffff\2\4";
    static final String dfa_177s = "\1\134\1\uffff\1\4\1\134\2\4\1\7\3\uffff\2\134";
    static final String dfa_178s = "\1\uffff\1\1\5\uffff\1\4\1\3\1\2\2\uffff";
    static final String dfa_179s = "\14\uffff}>";
    static final String[] dfa_180s = {
            "\1\1\121\uffff\1\2",
            "",
            "\1\3",
            "\1\7\1\11\4\uffff\1\7\32\uffff\1\4\46\uffff\1\10\11\uffff\1\5\4\uffff\1\6\1\7",
            "\1\12",
            "\1\12",
            "\1\13",
            "",
            "",
            "",
            "\1\7\1\11\4\uffff\1\7\32\uffff\1\4\46\uffff\1\10\11\uffff\1\5\4\uffff\1\6\1\7",
            "\1\7\1\11\4\uffff\1\7\101\uffff\1\10\17\uffff\1\7"
    };

    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final char[] dfa_176 = DFA.unpackEncodedStringToUnsignedChars(dfa_176s);
    static final char[] dfa_177 = DFA.unpackEncodedStringToUnsignedChars(dfa_177s);
    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final short[] dfa_179 = DFA.unpackEncodedString(dfa_179s);
    static final short[][] dfa_180 = unpackEncodedStringArray(dfa_180s);

    class DFA311 extends DFA {

        public DFA311(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 311;
            this.eot = dfa_174;
            this.eof = dfa_175;
            this.min = dfa_176;
            this.max = dfa_177;
            this.accept = dfa_178;
            this.special = dfa_179;
            this.transition = dfa_180;
        }
        public String getDescription() {
            return "13403:2: (this_CommentAnnotation_0= ruleCommentAnnotation | this_QuotedKeyStringValueAnnotation_1= ruleQuotedKeyStringValueAnnotation | this_QuotedTypedKeyStringValueAnnotation_2= ruleQuotedTypedKeyStringValueAnnotation | this_TagAnnotation_3= ruleTagAnnotation )";
        }
    }
 

    
    private static class FollowSets000 {
        public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
        public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
        public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000030000020012L});
        public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000010L});
        public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000040000L});
        public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x00000000000C0000L});
        public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000200000L});
        public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000240000L});
        public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x00008000004203B0L,0x000090F00C400000L});
        public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000100000L});
        public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000020000L});
        public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000010L,0x0000900000000000L});
        public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000080000L});
        public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000200002L});
        public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x00040001E0000000L});
        public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000400000L});
        public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000840000L});
        public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000900000L});
        public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000800000L});
        public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000002000000L});
        public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x000000000C000000L});
        public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000010020000L});
        public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000180000L});
        public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000020000000L});
        public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000100002L});
        public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000040040000L});
        public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x00000000E0000000L});
        public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000080000002L});
        public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000100000002L});
        public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000140000000L});
        public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000E00100000L});
        public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000E00000000L});
        public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000039000020010L});
        public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000002000100002L});
        public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000004000100002L});
        public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000410L,0x0000000010000000L});
        public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000180000000000L});
        public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000180020000000L});
        public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000040000000000L});
        public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000100000000000L});
        public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000602E00100002L});
        public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000602E00100012L});
        public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000602000100002L});
        public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000600000000002L});
        public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0007800000000002L});
        public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0007000000000000L});
        public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0006008000020010L});
        public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0038000000000002L});
        public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x00000000004203B0L,0x000090E00C400000L});
        public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0040000000000002L});
        public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x00000000004203B0L,0x000090400C000000L});
        public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0080000000000002L});
        public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000080000000L});
        public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0100000000000002L});
        public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0200000000000000L});
        public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0400000000000000L});
        public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0800000000000002L});
        public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x1000000000000002L});
        public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x2000000000000002L});
        public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x4000000000000002L});
        public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x8000000202000452L,0x038C0001F00303FFL});
        public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x8000000002000452L,0x0000000010030003L});
        public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000400010L});
        public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x8000000000000002L});
        public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x8000000202800450L,0x038C0001F00303FFL});
        public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x8000000002800450L,0x0000000010030003L});
        public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x8000000000800000L});
        public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000400L,0x0000000010000001L});
        public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000400L,0x0000000010000002L});
        public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000200000400L,0x03800000F00000FCL});
        public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000020L});
        public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000140000L});
        public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000802L});
        public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000040802L});
        public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000400L,0x038C0001F0000080L});
        public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x000C0001E0000080L});
        public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x000C0001E0000000L});
        public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000400030L});
        public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x8000000202800450L,0x1F8C0001F00303FFL});
        public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000100410L,0x0000000010000000L});
        public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000C12L,0x0000000010000000L});
        public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000202800400L,0x038C0001F00003FCL});
        public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000400L,0x0380000110000080L});
        public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000080L});
        public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
        public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x8000000202000450L,0x1F8C0001F00303FFL});
        public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000400020L});
        public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000100000L,0x0000000000000100L});
        public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000100010L});
        public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000802L,0x0000000000000100L});
        public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000000000000812L});
        public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000002000400L,0x0380000010000204L});
        public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000002000000L,0x0000000000000204L});
        public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
        public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000002000000000L});
        public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000410L,0x0000000010000400L});
        public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x00000000000003B0L,0x00000000E0000000L});
        public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000040000L,0x0000000000000800L});
        public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000420L,0x0000000010000000L});
        public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000000000040410L,0x0000000010000000L});
        public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
        public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
        public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0000000000001000L});
        public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000000L,0x0000000000002000L});
        public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000002000000002L,0x0000000000001000L});
        public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000002000000000L,0x0000000000001000L});
        public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000000400L,0x0380000010000100L});
        public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
        public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000400430L,0x0000000010000010L});
        public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000400410L,0x0000000010000010L});
        public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x0000030000000000L});
        public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000400410L,0x0000000010000000L});
        public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000200002L,0x000000000000D000L});
        public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000000000002L,0x000000000000C000L});
        public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0008000000000000L,0x0070400000240080L});
        public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000002L,0x0000000000008000L});
        public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000010220002L,0x0000000000009400L});
        public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000010220002L,0x0000000000008000L});
        public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x00008000004203B0L,0x200090F00C440000L});
        public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000200002L,0x0000000000008000L});
        public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
        public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000012L});
        public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000000L,0x00000C0000000000L});
        public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000440L,0x0000000010000000L});
        public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000002010020000L,0x0000000000001000L});
        public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000002000400L,0x0000000010000000L});
        public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000400L,0x0000000010010000L});
        public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000400L,0x0000000010020000L});
        public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
        public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000200002L,0x0000000E00000C00L});
        public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x00000000004203B0L,0x0000B0400C000000L});
        public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000002L,0x0000000000080000L});
        public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000002L,0x0000000000100000L});
        public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000002L,0x0000000000600000L});
        public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
        public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000080L});
        public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x00008000004203B0L,0x000090F00E400000L});
        public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
        public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000090L});
        public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000800020L});
        public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000040000000L});
        public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x00000000004003A0L,0x0000000004001000L});
        public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x00000000004003A0L,0x0000000004003000L});
        public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000040000L,0x0000000000002000L});
        public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000030L});
        public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x00000000000003B0L,0x0000000000400000L});
        public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000040002L});
        public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000000230L});
        public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000002000000002L,0x0000000008400000L});
        public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000100L});
    }


}