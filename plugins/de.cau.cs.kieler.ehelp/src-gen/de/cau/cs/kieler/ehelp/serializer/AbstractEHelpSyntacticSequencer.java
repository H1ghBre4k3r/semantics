/*
 * generated by Xtext 2.12.0
 */
package de.cau.cs.kieler.ehelp.serializer;

import com.google.inject.Inject;
import de.cau.cs.kieler.ehelp.services.EHelpGrammarAccess;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public abstract class AbstractEHelpSyntacticSequencer extends AbstractSyntacticSequencer {

	protected EHelpGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Enum_List_Table___EnumKeyword_0_LeftCurlyBracketKeyword_1_RightCurlyBracketKeyword_3___or___ListKeyword_0_LeftCurlyBracketKeyword_1_RightCurlyBracketKeyword_3___or___TableKeyword_0_LeftCurlyBracketKeyword_4_RightCurlyBracketKeyword_6__;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (EHelpGrammarAccess) access;
		match_Enum_List_Table___EnumKeyword_0_LeftCurlyBracketKeyword_1_RightCurlyBracketKeyword_3___or___ListKeyword_0_LeftCurlyBracketKeyword_1_RightCurlyBracketKeyword_3___or___TableKeyword_0_LeftCurlyBracketKeyword_4_RightCurlyBracketKeyword_6__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getEnumAccess().getEnumKeyword_0()), new TokenAlias(false, false, grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_1()), new TokenAlias(false, false, grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getListAccess().getListKeyword_0()), new TokenAlias(false, false, grammarAccess.getListAccess().getLeftCurlyBracketKeyword_1()), new TokenAlias(false, false, grammarAccess.getListAccess().getRightCurlyBracketKeyword_3())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getTableAccess().getTableKeyword_0()), new TokenAlias(false, false, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_4()), new TokenAlias(false, false, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_6())));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		return "";
	}
	
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Enum_List_Table___EnumKeyword_0_LeftCurlyBracketKeyword_1_RightCurlyBracketKeyword_3___or___ListKeyword_0_LeftCurlyBracketKeyword_1_RightCurlyBracketKeyword_3___or___TableKeyword_0_LeftCurlyBracketKeyword_4_RightCurlyBracketKeyword_6__.equals(syntax))
				emit_Enum_List_Table___EnumKeyword_0_LeftCurlyBracketKeyword_1_RightCurlyBracketKeyword_3___or___ListKeyword_0_LeftCurlyBracketKeyword_1_RightCurlyBracketKeyword_3___or___TableKeyword_0_LeftCurlyBracketKeyword_4_RightCurlyBracketKeyword_6__(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * Ambiguous syntax:
	 *     ('enum' '{' '}') | ('list' '{' '}') | ('table' '{' '}')
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) (ambiguity) (rule start)
	 */
	protected void emit_Enum_List_Table___EnumKeyword_0_LeftCurlyBracketKeyword_1_RightCurlyBracketKeyword_3___or___ListKeyword_0_LeftCurlyBracketKeyword_1_RightCurlyBracketKeyword_3___or___TableKeyword_0_LeftCurlyBracketKeyword_4_RightCurlyBracketKeyword_6__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
