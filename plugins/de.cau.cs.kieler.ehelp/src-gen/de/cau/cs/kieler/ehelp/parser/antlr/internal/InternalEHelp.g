/*
 * generated by Xtext 2.10.0
 */
grammar InternalEHelp;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package de.cau.cs.kieler.ehelp.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.cau.cs.kieler.ehelp.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.cau.cs.kieler.ehelp.services.EHelpGrammarAccess;

}

@parser::members {

 	private EHelpGrammarAccess grammarAccess;

    public InternalEHelpParser(TokenStream input, EHelpGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "EHelpModel";
   	}

   	@Override
   	protected EHelpGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleEHelpModel
entryRuleEHelpModel returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEHelpModelRule()); }
	iv_ruleEHelpModel=ruleEHelpModel
	{ $current=$iv_ruleEHelpModel.current; }
	EOF;

// Rule EHelpModel
ruleEHelpModel returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getEHelpModelAccess().getConfigsConfigParserRuleCall_0_0());
				}
				lv_configs_0_0=ruleConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEHelpModelRule());
					}
					add(
						$current,
						"configs",
						lv_configs_0_0,
						"de.cau.cs.kieler.ehelp.EHelp.Config");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getEHelpModelAccess().getChaptersChapterParserRuleCall_1_0());
				}
				lv_chapters_1_0=ruleChapter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEHelpModelRule());
					}
					add(
						$current,
						"chapters",
						lv_chapters_1_0,
						"de.cau.cs.kieler.ehelp.EHelp.Chapter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleConfig
entryRuleConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigRule()); }
	iv_ruleConfig=ruleConfig
	{ $current=$iv_ruleConfig.current; }
	EOF;

// Rule Config
ruleConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getConfigAccess().getConfigPathParserRuleCall_0());
		}
		this_ConfigPath_0=ruleConfigPath
		{
			$current = $this_ConfigPath_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getConfigAccess().getConfigHomeParserRuleCall_1());
		}
		this_ConfigHome_1=ruleConfigHome
		{
			$current = $this_ConfigHome_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleConfigPath
entryRuleConfigPath returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigPathRule()); }
	iv_ruleConfigPath=ruleConfigPath
	{ $current=$iv_ruleConfigPath.current; }
	EOF;

// Rule ConfigPath
ruleConfigPath returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='config'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigPathAccess().getConfigKeyword_0());
		}
		otherlv_1='path'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigPathAccess().getPathKeyword_1());
		}
		(
			(
				lv_path_2_0=RULE_STRING
				{
					newLeafNode(lv_path_2_0, grammarAccess.getConfigPathAccess().getPathSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigPathRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleConfigHome
entryRuleConfigHome returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigHomeRule()); }
	iv_ruleConfigHome=ruleConfigHome
	{ $current=$iv_ruleConfigHome.current; }
	EOF;

// Rule ConfigHome
ruleConfigHome returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='config'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigHomeAccess().getConfigKeyword_0());
		}
		otherlv_1='home'
		{
			newLeafNode(otherlv_1, grammarAccess.getConfigHomeAccess().getHomeKeyword_1());
		}
		(
			(
				lv_home_2_0=RULE_STRING
				{
					newLeafNode(lv_home_2_0, grammarAccess.getConfigHomeAccess().getHomeSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigHomeRule());
					}
					setWithLastConsumed(
						$current,
						"home",
						lv_home_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleChapter
entryRuleChapter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChapterRule()); }
	iv_ruleChapter=ruleChapter
	{ $current=$iv_ruleChapter.current; }
	EOF;

// Rule Chapter
ruleChapter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='chapter'
		{
			newLeafNode(otherlv_0, grammarAccess.getChapterAccess().getChapterKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getChapterAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChapterRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)?
		(
			(
				lv_title_2_0=RULE_STRING
				{
					newLeafNode(lv_title_2_0, grammarAccess.getChapterAccess().getTitleSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChapterRule());
					}
					setWithLastConsumed(
						$current,
						"title",
						lv_title_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getChapterAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getChapterAccess().getContentContentParserRuleCall_4_0());
				}
				lv_content_4_0=ruleContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChapterRule());
					}
					add(
						$current,
						"content",
						lv_content_4_0,
						"de.cau.cs.kieler.ehelp.EHelp.Content");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getChapterAccess().getSubchaptersChapterParserRuleCall_5_0());
				}
				lv_subchapters_5_0=ruleChapter
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getChapterRule());
					}
					add(
						$current,
						"subchapters",
						lv_subchapters_5_0,
						"de.cau.cs.kieler.ehelp.EHelp.Chapter");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getChapterAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleList
entryRuleList returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListRule()); }
	iv_ruleList=ruleList
	{ $current=$iv_ruleList.current; }
	EOF;

// Rule List
ruleList returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='list'
		{
			newLeafNode(otherlv_0, grammarAccess.getListAccess().getListKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListAccess().getItemsListItemParserRuleCall_2_0());
				}
				lv_items_2_0=ruleListItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"de.cau.cs.kieler.ehelp.EHelp.ListItem");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getListAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleEnum
entryRuleEnum returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEnumRule()); }
	iv_ruleEnum=ruleEnum
	{ $current=$iv_ruleEnum.current; }
	EOF;

// Rule Enum
ruleEnum returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='enum'
		{
			newLeafNode(otherlv_0, grammarAccess.getEnumAccess().getEnumKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getEnumAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEnumAccess().getItemsListItemParserRuleCall_2_0());
				}
				lv_items_2_0=ruleListItem
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEnumRule());
					}
					add(
						$current,
						"items",
						lv_items_2_0,
						"de.cau.cs.kieler.ehelp.EHelp.ListItem");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_3='}'
		{
			newLeafNode(otherlv_3, grammarAccess.getEnumAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleListItem
entryRuleListItem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getListItemRule()); }
	iv_ruleListItem=ruleListItem
	{ $current=$iv_ruleListItem.current; }
	EOF;

// Rule ListItem
ruleListItem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getListItemAccess().getHyphenMinusKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getListItemAccess().getContentContentParserRuleCall_1_0());
				}
				lv_content_1_0=ruleContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getListItemRule());
					}
					add(
						$current,
						"content",
						lv_content_1_0,
						"de.cau.cs.kieler.ehelp.EHelp.Content");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleContent
entryRuleContent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContentRule()); }
	iv_ruleContent=ruleContent
	{ $current=$iv_ruleContent.current; }
	EOF;

// Rule Content
ruleContent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getContentAccess().getKeywordParserRuleCall_0());
		}
		this_Keyword_0=ruleKeyword
		{
			$current = $this_Keyword_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getContextParserRuleCall_1());
		}
		this_Context_1=ruleContext
		{
			$current = $this_Context_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getTextParserRuleCall_2());
		}
		this_Text_2=ruleText
		{
			$current = $this_Text_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getImagesParserRuleCall_3());
		}
		this_Images_3=ruleImages
		{
			$current = $this_Images_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getLinkParserRuleCall_4());
		}
		this_Link_4=ruleLink
		{
			$current = $this_Link_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getListParserRuleCall_5());
		}
		this_List_5=ruleList
		{
			$current = $this_List_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getEnumParserRuleCall_6());
		}
		this_Enum_6=ruleEnum
		{
			$current = $this_Enum_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getContentAccess().getTableParserRuleCall_7());
		}
		this_Table_7=ruleTable
		{
			$current = $this_Table_7.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='table'
		{
			newLeafNode(otherlv_0, grammarAccess.getTableAccess().getTableKeyword_0());
		}
		(
			(
				lv_width_1_0=RULE_INT
				{
					newLeafNode(lv_width_1_0, grammarAccess.getTableAccess().getWidthINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableRule());
					}
					setWithLastConsumed(
						$current,
						"width",
						lv_width_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)?
		(
			otherlv_2='spacing'
			{
				newLeafNode(otherlv_2, grammarAccess.getTableAccess().getSpacingKeyword_2_0());
			}
			otherlv_3='='
			{
				newLeafNode(otherlv_3, grammarAccess.getTableAccess().getEqualsSignKeyword_2_1());
			}
			(
				(
					lv_spacing_4_0=RULE_INT
					{
						newLeafNode(lv_spacing_4_0, grammarAccess.getTableAccess().getSpacingINTTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getTableRule());
						}
						setWithLastConsumed(
							$current,
							"spacing",
							lv_spacing_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		(
			(
				lv_stretch_5_0='stretch'
				{
					newLeafNode(lv_stretch_5_0, grammarAccess.getTableAccess().getStretchStretchKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableRule());
					}
					setWithLastConsumed($current, "stretch", true, "stretch");
				}
			)
		)?
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_5_0());
				}
				lv_rows_7_0=ruleTableRow
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					add(
						$current,
						"rows",
						lv_rows_7_0,
						"de.cau.cs.kieler.ehelp.EHelp.TableRow");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_8='}'
		{
			newLeafNode(otherlv_8, grammarAccess.getTableAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleTableRow
entryRuleTableRow returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRowRule()); }
	iv_ruleTableRow=ruleTableRow
	{ $current=$iv_ruleTableRow.current; }
	EOF;

// Rule TableRow
ruleTableRow returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='-'
		{
			newLeafNode(otherlv_0, grammarAccess.getTableRowAccess().getHyphenMinusKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableRowAccess().getCellsTableCellParserRuleCall_1_0());
				}
				lv_cells_1_0=ruleTableCell
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRowRule());
					}
					add(
						$current,
						"cells",
						lv_cells_1_0,
						"de.cau.cs.kieler.ehelp.EHelp.TableCell");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='|'
			{
				newLeafNode(otherlv_2, grammarAccess.getTableRowAccess().getVerticalLineKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableRowAccess().getCellsTableCellParserRuleCall_2_1_0());
					}
					lv_cells_3_0=ruleTableCell
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRowRule());
						}
						add(
							$current,
							"cells",
							lv_cells_3_0,
							"de.cau.cs.kieler.ehelp.EHelp.TableCell");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleTableCell
entryRuleTableCell returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableCellRule()); }
	iv_ruleTableCell=ruleTableCell
	{ $current=$iv_ruleTableCell.current; }
	EOF;

// Rule TableCell
ruleTableCell returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_center_0_0='center'
				{
					newLeafNode(lv_center_0_0, grammarAccess.getTableCellAccess().getCenterCenterKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableCellRule());
					}
					setWithLastConsumed($current, "center", true, "center");
				}
			)
		)?
		(
			(
				lv_left_1_0='left'
				{
					newLeafNode(lv_left_1_0, grammarAccess.getTableCellAccess().getLeftLeftKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableCellRule());
					}
					setWithLastConsumed($current, "left", true, "left");
				}
			)
		)?
		(
			(
				lv_right_2_0='right'
				{
					newLeafNode(lv_right_2_0, grammarAccess.getTableCellAccess().getRightRightKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableCellRule());
					}
					setWithLastConsumed($current, "right", true, "right");
				}
			)
		)?
		(
			(
				lv_top_3_0='top'
				{
					newLeafNode(lv_top_3_0, grammarAccess.getTableCellAccess().getTopTopKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableCellRule());
					}
					setWithLastConsumed($current, "top", true, "top");
				}
			)
		)?
		(
			(
				lv_middle_4_0='middle'
				{
					newLeafNode(lv_middle_4_0, grammarAccess.getTableCellAccess().getMiddleMiddleKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableCellRule());
					}
					setWithLastConsumed($current, "middle", true, "middle");
				}
			)
		)?
		(
			(
				lv_bottom_5_0='bottom'
				{
					newLeafNode(lv_bottom_5_0, grammarAccess.getTableCellAccess().getBottomBottomKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableCellRule());
					}
					setWithLastConsumed($current, "bottom", true, "bottom");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getTableCellAccess().getContentContentParserRuleCall_6_0());
				}
				lv_content_6_0=ruleContent
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableCellRule());
					}
					add(
						$current,
						"content",
						lv_content_6_0,
						"de.cau.cs.kieler.ehelp.EHelp.Content");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleText
entryRuleText returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTextRule()); }
	iv_ruleText=ruleText
	{ $current=$iv_ruleText.current; }
	EOF;

// Rule Text
ruleText returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_text_0_0=RULE_STRING
			{
				newLeafNode(lv_text_0_0, grammarAccess.getTextAccess().getTextSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTextRule());
				}
				setWithLastConsumed(
					$current,
					"text",
					lv_text_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleKeyword
entryRuleKeyword returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getKeywordRule()); }
	iv_ruleKeyword=ruleKeyword
	{ $current=$iv_ruleKeyword.current; }
	EOF;

// Rule Keyword
ruleKeyword returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='?'
		{
			newLeafNode(otherlv_0, grammarAccess.getKeywordAccess().getQuestionMarkKeyword_0());
		}
		(
			(
				lv_text_1_0=RULE_STRING
				{
					newLeafNode(lv_text_1_0, grammarAccess.getKeywordAccess().getTextSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getKeywordRule());
					}
					setWithLastConsumed(
						$current,
						"text",
						lv_text_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='?'
		{
			newLeafNode(otherlv_2, grammarAccess.getKeywordAccess().getQuestionMarkKeyword_2());
		}
	)
;

// Entry rule entryRuleContext
entryRuleContext returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContextRule()); }
	iv_ruleContext=ruleContext
	{ $current=$iv_ruleContext.current; }
	EOF;

// Rule Context
ruleContext returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='!'
		{
			newLeafNode(otherlv_0, grammarAccess.getContextAccess().getExclamationMarkKeyword_0());
		}
		(
			(
				lv_id_1_0=RULE_ID
				{
					newLeafNode(lv_id_1_0, grammarAccess.getContextAccess().getIdIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContextRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				lv_label_2_0=RULE_STRING
				{
					newLeafNode(lv_label_2_0, grammarAccess.getContextAccess().getLabelSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContextRule());
					}
					setWithLastConsumed(
						$current,
						"label",
						lv_label_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_3='!'
		{
			newLeafNode(otherlv_3, grammarAccess.getContextAccess().getExclamationMarkKeyword_3());
		}
	)
;

// Entry rule entryRuleImages
entryRuleImages returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImagesRule()); }
	iv_ruleImages=ruleImages
	{ $current=$iv_ruleImages.current; }
	EOF;

// Rule Images
ruleImages returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getImagesAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				lv_images_1_0=RULE_STRING
				{
					newLeafNode(lv_images_1_0, grammarAccess.getImagesAccess().getImagesSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImagesRule());
					}
					addWithLastConsumed(
						$current,
						"images",
						lv_images_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)+
		otherlv_2=']'
		{
			newLeafNode(otherlv_2, grammarAccess.getImagesAccess().getRightSquareBracketKeyword_2());
		}
	)
;

// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	iv_ruleLink=ruleLink
	{ $current=$iv_ruleLink.current; }
	EOF;

// Rule Link
ruleLink returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='['
		{
			newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getLeftSquareBracketKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getLinkAccess().getLinkChapterCrossReference_1_0());
				}
			)
		)
		(
			(
				lv_caption_2_0=RULE_STRING
				{
					newLeafNode(lv_caption_2_0, grammarAccess.getLinkAccess().getCaptionSTRINGTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLinkRule());
					}
					setWithLastConsumed(
						$current,
						"caption",
						lv_caption_2_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)?
		otherlv_3=']'
		{
			newLeafNode(otherlv_3, grammarAccess.getLinkAccess().getRightSquareBracketKeyword_3());
		}
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
