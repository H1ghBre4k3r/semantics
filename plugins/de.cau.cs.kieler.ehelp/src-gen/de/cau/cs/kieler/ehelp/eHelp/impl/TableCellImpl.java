/**
 * generated by Xtext 2.12.0
 */
package de.cau.cs.kieler.ehelp.eHelp.impl;

import de.cau.cs.kieler.ehelp.eHelp.Content;
import de.cau.cs.kieler.ehelp.eHelp.EHelpPackage;
import de.cau.cs.kieler.ehelp.eHelp.TableCell;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Table Cell</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableCellImpl#isCenter <em>Center</em>}</li>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableCellImpl#isLeft <em>Left</em>}</li>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableCellImpl#isRight <em>Right</em>}</li>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableCellImpl#isTop <em>Top</em>}</li>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableCellImpl#isMiddle <em>Middle</em>}</li>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableCellImpl#isBottom <em>Bottom</em>}</li>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableCellImpl#getContent <em>Content</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TableCellImpl extends MinimalEObjectImpl.Container implements TableCell
{
  /**
   * The default value of the '{@link #isCenter() <em>Center</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCenter()
   * @generated
   * @ordered
   */
  protected static final boolean CENTER_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isCenter() <em>Center</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isCenter()
   * @generated
   * @ordered
   */
  protected boolean center = CENTER_EDEFAULT;

  /**
   * The default value of the '{@link #isLeft() <em>Left</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLeft()
   * @generated
   * @ordered
   */
  protected static final boolean LEFT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isLeft() <em>Left</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isLeft()
   * @generated
   * @ordered
   */
  protected boolean left = LEFT_EDEFAULT;

  /**
   * The default value of the '{@link #isRight() <em>Right</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRight()
   * @generated
   * @ordered
   */
  protected static final boolean RIGHT_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRight() <em>Right</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRight()
   * @generated
   * @ordered
   */
  protected boolean right = RIGHT_EDEFAULT;

  /**
   * The default value of the '{@link #isTop() <em>Top</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTop()
   * @generated
   * @ordered
   */
  protected static final boolean TOP_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isTop() <em>Top</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isTop()
   * @generated
   * @ordered
   */
  protected boolean top = TOP_EDEFAULT;

  /**
   * The default value of the '{@link #isMiddle() <em>Middle</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMiddle()
   * @generated
   * @ordered
   */
  protected static final boolean MIDDLE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isMiddle() <em>Middle</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isMiddle()
   * @generated
   * @ordered
   */
  protected boolean middle = MIDDLE_EDEFAULT;

  /**
   * The default value of the '{@link #isBottom() <em>Bottom</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBottom()
   * @generated
   * @ordered
   */
  protected static final boolean BOTTOM_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isBottom() <em>Bottom</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isBottom()
   * @generated
   * @ordered
   */
  protected boolean bottom = BOTTOM_EDEFAULT;

  /**
   * The cached value of the '{@link #getContent() <em>Content</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getContent()
   * @generated
   * @ordered
   */
  protected EList<Content> content;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TableCellImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EHelpPackage.Literals.TABLE_CELL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isCenter()
  {
    return center;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setCenter(boolean newCenter)
  {
    boolean oldCenter = center;
    center = newCenter;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EHelpPackage.TABLE_CELL__CENTER, oldCenter, center));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isLeft()
  {
    return left;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLeft(boolean newLeft)
  {
    boolean oldLeft = left;
    left = newLeft;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EHelpPackage.TABLE_CELL__LEFT, oldLeft, left));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isRight()
  {
    return right;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRight(boolean newRight)
  {
    boolean oldRight = right;
    right = newRight;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EHelpPackage.TABLE_CELL__RIGHT, oldRight, right));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isTop()
  {
    return top;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTop(boolean newTop)
  {
    boolean oldTop = top;
    top = newTop;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EHelpPackage.TABLE_CELL__TOP, oldTop, top));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isMiddle()
  {
    return middle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMiddle(boolean newMiddle)
  {
    boolean oldMiddle = middle;
    middle = newMiddle;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EHelpPackage.TABLE_CELL__MIDDLE, oldMiddle, middle));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isBottom()
  {
    return bottom;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setBottom(boolean newBottom)
  {
    boolean oldBottom = bottom;
    bottom = newBottom;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EHelpPackage.TABLE_CELL__BOTTOM, oldBottom, bottom));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Content> getContent()
  {
    if (content == null)
    {
      content = new EObjectContainmentEList<Content>(Content.class, this, EHelpPackage.TABLE_CELL__CONTENT);
    }
    return content;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EHelpPackage.TABLE_CELL__CONTENT:
        return ((InternalEList<?>)getContent()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EHelpPackage.TABLE_CELL__CENTER:
        return isCenter();
      case EHelpPackage.TABLE_CELL__LEFT:
        return isLeft();
      case EHelpPackage.TABLE_CELL__RIGHT:
        return isRight();
      case EHelpPackage.TABLE_CELL__TOP:
        return isTop();
      case EHelpPackage.TABLE_CELL__MIDDLE:
        return isMiddle();
      case EHelpPackage.TABLE_CELL__BOTTOM:
        return isBottom();
      case EHelpPackage.TABLE_CELL__CONTENT:
        return getContent();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EHelpPackage.TABLE_CELL__CENTER:
        setCenter((Boolean)newValue);
        return;
      case EHelpPackage.TABLE_CELL__LEFT:
        setLeft((Boolean)newValue);
        return;
      case EHelpPackage.TABLE_CELL__RIGHT:
        setRight((Boolean)newValue);
        return;
      case EHelpPackage.TABLE_CELL__TOP:
        setTop((Boolean)newValue);
        return;
      case EHelpPackage.TABLE_CELL__MIDDLE:
        setMiddle((Boolean)newValue);
        return;
      case EHelpPackage.TABLE_CELL__BOTTOM:
        setBottom((Boolean)newValue);
        return;
      case EHelpPackage.TABLE_CELL__CONTENT:
        getContent().clear();
        getContent().addAll((Collection<? extends Content>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EHelpPackage.TABLE_CELL__CENTER:
        setCenter(CENTER_EDEFAULT);
        return;
      case EHelpPackage.TABLE_CELL__LEFT:
        setLeft(LEFT_EDEFAULT);
        return;
      case EHelpPackage.TABLE_CELL__RIGHT:
        setRight(RIGHT_EDEFAULT);
        return;
      case EHelpPackage.TABLE_CELL__TOP:
        setTop(TOP_EDEFAULT);
        return;
      case EHelpPackage.TABLE_CELL__MIDDLE:
        setMiddle(MIDDLE_EDEFAULT);
        return;
      case EHelpPackage.TABLE_CELL__BOTTOM:
        setBottom(BOTTOM_EDEFAULT);
        return;
      case EHelpPackage.TABLE_CELL__CONTENT:
        getContent().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EHelpPackage.TABLE_CELL__CENTER:
        return center != CENTER_EDEFAULT;
      case EHelpPackage.TABLE_CELL__LEFT:
        return left != LEFT_EDEFAULT;
      case EHelpPackage.TABLE_CELL__RIGHT:
        return right != RIGHT_EDEFAULT;
      case EHelpPackage.TABLE_CELL__TOP:
        return top != TOP_EDEFAULT;
      case EHelpPackage.TABLE_CELL__MIDDLE:
        return middle != MIDDLE_EDEFAULT;
      case EHelpPackage.TABLE_CELL__BOTTOM:
        return bottom != BOTTOM_EDEFAULT;
      case EHelpPackage.TABLE_CELL__CONTENT:
        return content != null && !content.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (center: ");
    result.append(center);
    result.append(", left: ");
    result.append(left);
    result.append(", right: ");
    result.append(right);
    result.append(", top: ");
    result.append(top);
    result.append(", middle: ");
    result.append(middle);
    result.append(", bottom: ");
    result.append(bottom);
    result.append(')');
    return result.toString();
  }

} //TableCellImpl
