/**
 * generated by Xtext 2.12.0
 */
package de.cau.cs.kieler.ehelp.eHelp.impl;

import de.cau.cs.kieler.ehelp.eHelp.EHelpPackage;
import de.cau.cs.kieler.ehelp.eHelp.Table;
import de.cau.cs.kieler.ehelp.eHelp.TableRow;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Table</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableImpl#getWidth <em>Width</em>}</li>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableImpl#getSpacing <em>Spacing</em>}</li>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableImpl#isStretch <em>Stretch</em>}</li>
 *   <li>{@link de.cau.cs.kieler.ehelp.eHelp.impl.TableImpl#getRows <em>Rows</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TableImpl extends ContentImpl implements Table
{
  /**
   * The default value of the '{@link #getWidth() <em>Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidth()
   * @generated
   * @ordered
   */
  protected static final int WIDTH_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getWidth() <em>Width</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWidth()
   * @generated
   * @ordered
   */
  protected int width = WIDTH_EDEFAULT;

  /**
   * The default value of the '{@link #getSpacing() <em>Spacing</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpacing()
   * @generated
   * @ordered
   */
  protected static final int SPACING_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getSpacing() <em>Spacing</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpacing()
   * @generated
   * @ordered
   */
  protected int spacing = SPACING_EDEFAULT;

  /**
   * The default value of the '{@link #isStretch() <em>Stretch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStretch()
   * @generated
   * @ordered
   */
  protected static final boolean STRETCH_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isStretch() <em>Stretch</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isStretch()
   * @generated
   * @ordered
   */
  protected boolean stretch = STRETCH_EDEFAULT;

  /**
   * The cached value of the '{@link #getRows() <em>Rows</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRows()
   * @generated
   * @ordered
   */
  protected EList<TableRow> rows;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return EHelpPackage.Literals.TABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getWidth()
  {
    return width;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setWidth(int newWidth)
  {
    int oldWidth = width;
    width = newWidth;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EHelpPackage.TABLE__WIDTH, oldWidth, width));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getSpacing()
  {
    return spacing;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSpacing(int newSpacing)
  {
    int oldSpacing = spacing;
    spacing = newSpacing;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EHelpPackage.TABLE__SPACING, oldSpacing, spacing));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isStretch()
  {
    return stretch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStretch(boolean newStretch)
  {
    boolean oldStretch = stretch;
    stretch = newStretch;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, EHelpPackage.TABLE__STRETCH, oldStretch, stretch));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<TableRow> getRows()
  {
    if (rows == null)
    {
      rows = new EObjectContainmentEList<TableRow>(TableRow.class, this, EHelpPackage.TABLE__ROWS);
    }
    return rows;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case EHelpPackage.TABLE__ROWS:
        return ((InternalEList<?>)getRows()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case EHelpPackage.TABLE__WIDTH:
        return getWidth();
      case EHelpPackage.TABLE__SPACING:
        return getSpacing();
      case EHelpPackage.TABLE__STRETCH:
        return isStretch();
      case EHelpPackage.TABLE__ROWS:
        return getRows();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case EHelpPackage.TABLE__WIDTH:
        setWidth((Integer)newValue);
        return;
      case EHelpPackage.TABLE__SPACING:
        setSpacing((Integer)newValue);
        return;
      case EHelpPackage.TABLE__STRETCH:
        setStretch((Boolean)newValue);
        return;
      case EHelpPackage.TABLE__ROWS:
        getRows().clear();
        getRows().addAll((Collection<? extends TableRow>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case EHelpPackage.TABLE__WIDTH:
        setWidth(WIDTH_EDEFAULT);
        return;
      case EHelpPackage.TABLE__SPACING:
        setSpacing(SPACING_EDEFAULT);
        return;
      case EHelpPackage.TABLE__STRETCH:
        setStretch(STRETCH_EDEFAULT);
        return;
      case EHelpPackage.TABLE__ROWS:
        getRows().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case EHelpPackage.TABLE__WIDTH:
        return width != WIDTH_EDEFAULT;
      case EHelpPackage.TABLE__SPACING:
        return spacing != SPACING_EDEFAULT;
      case EHelpPackage.TABLE__STRETCH:
        return stretch != STRETCH_EDEFAULT;
      case EHelpPackage.TABLE__ROWS:
        return rows != null && !rows.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (width: ");
    result.append(width);
    result.append(", spacing: ");
    result.append(spacing);
    result.append(", stretch: ");
    result.append(stretch);
    result.append(')');
    return result.toString();
  }

} //TableImpl
