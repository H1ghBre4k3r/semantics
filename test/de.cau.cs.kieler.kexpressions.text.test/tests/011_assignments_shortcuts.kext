/* KEXT Test File for assignment shortcuts
 * 
 * @author ssm
 * @date 2015-06-10
 */
bool A;
int I;
int I1[5];

/////////////////// SHORTCUT ASSIGNMENTS ///////////////////

@check "assignment.assign.add.literal"
I += 1

@check "assignment.assign.sub.literal"
I -= 1

@check "assignment.assign.mul.literal"
I *= 2

@check "assignment.assign.div.literal"
I /= 2

@check "assignment.assign.mod.literal"
I %= 2

@check "assignment.assign.and.literal"
A &= true

@check "assignment.assign.or.literal"
A |= true

@check "assignment.assign.xor.literal"
A ^= true

@check "assignment.assign.shiftleft.literal"
A <<= 1

@check "assignment.assign.shiftright.literal"
A >>= 2

@check "assignment.assign.shiftrightunsigned.literal"
A >>>= 3



@check "assignment.assign.add.reference"
I += I

@check "assignment.assign.sub.reference"
I -= I

@check "assignment.assign.mul.reference"
I *= I

@check "assignment.assign.div.reference"
I /= I

@check "assignment.assign.mod.reference"
I %= I

@check "assignment.assign.and.reference"
A &= A

@check "assignment.assign.or.reference"
A |= A

@check "assignment.assign.xor.reference"
A ^= A

@check "assignment.assign.shiftleft.reference"
A <<= I

@check "assignment.assign.shiftright.reference"
A >>= I

@check "assignment.assign.shiftrightunsigned.reference"
A >>>= I


@check "assignment.assign.add.operator.unary.reference"
@strict
I += pre(I)

@check "assignment.assign.sub.operator.unary.reference"
@strict
I -= pre(I)

@check "assignment.assign.mul.operator.unary.reference"
@strict
I *= pre(I)

@check "assignment.assign.div.operator.unary.reference"
@strict
I /= pre(I)

@check "assignment.assign.mod.operator.unary.reference"
@strict
I %= pre(I)

@check "assignment.assign.and.operator.unary.reference"
@strict
A &= pre(A)

@check "assignment.assign.or.operator.unary.reference"
@strict
A |= pre(A)

@check "assignment.assign.xor.operator.unary.reference"
@strict
A ^= pre(A)

@check "assignment.assign.shiftleft.operator.unary.reference"
@strict
A <<= pre(I)

@check "assignment.assign.shiftright.operator.unary.reference"
@strict
A >>= pre(I)

@check "assignment.assign.shiftrightunsigned.operator.unary.reference"
@strict
A >>>= pre(I)



@check "assignment.assign.add.operator.binary.reference"
I += I + I

@check "assignment.assign.sub.operator.binary.reference"
I -= I + I

@check "assignment.assign.mul.operator.binary.reference"
I *= I + I

@check "assignment.assign.div.operator.binary.reference"
I /= I + I

@check "assignment.assign.mod.operator.binary.reference"
I %= I + I

@check "assignment.assign.and.operator.binary.reference"
A &= A & A

@check "assignment.assign.or.operator.binary.reference"
A |= A & A

@check "assignment.assign.xor.operator.binary.reference"
A ^= A & A

@check "assignment.assign.shiftleft.operator.binary.reference"
A <<= I + I

@check "assignment.assign.shiftright.operator.binary.reference"
A >>= I + I

@check "assignment.assign.shiftrightunsigned.operator.binary.reference"
A >>>= I + I
